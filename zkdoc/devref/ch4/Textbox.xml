<sect2 id="Textbox"><title>Textbox</title>
<para>A <code>textbox</code> is used to let users input text data.</para>
<para>You colud assign <code>value, type, constraint, rows, cols </code>to a textbox by the corresponding properties. When you assigns the property <code>type </code>to a string value “password” when <code>multiline </code>is false( <code>multiline</code> will be <code>true </code>if You set rows large then 1 or sets <code>multiline </code>to true directly) then any character in this component will replace by '*'.</para>
<para>You colud also assign a constraint value with a regular expression string or a default constraint expression(available value is “no empty”). When user change the value of textbox, will cause a validating preocess to valdate the value. If valdation fail, then a notification will poped up. </para>
<para>
<graphic fileref="images/textbox.png"/>
</para>
<programlisting>&lt;textbox value="text..."/&gt;&#13;&lt;textbox value="secret" type="password"/&gt;&#13;&lt;textbox constraint="/.+@.+\.[a-z]+/: Please enter an e-mail address" /&gt;&#13;&lt;textbox rows="5" cols="40"&gt;&#13;    &lt;attribute name="value"&gt;&#13;text line1...&#13;text line2...&#13;    &lt;/attribute&gt;&#13;&lt;/textbox&gt;&#13;</programlisting><sect3><title>Class Name</title>
<para>
<code>org.zkoss.zul.Textbox</code>
</para></sect3><sect3><title>Supported Child Components</title>
<para>*NONE </para></sect3><sect3><title>Supported Events</title>
<informaltable frame="all">
<tgroup cols="2">
<thead>
<row>
<entry>
<para>Event Name</para>
</entry>
<entry>
<para>Event Type</para>
</entry>
</row>
</thead><tbody>
<row>
<entry>
<para>
<code>onChange</code>
</para>
</entry>
<entry>
<para>
<link linkend="InputEvent">
<code>org.zkoss.zk.ui.event.InputEvent</code>
</link>
</para>
<para>Description: </para>
<para>Denotes the content of an input component has been modified by the user.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>onChanging</code>
</para>
</entry>
<entry>
<para>
<link linkend="InputEvent">
<code>org.zkoss.zk.ui.event.InputEvent</code>
</link>
</para>
<para>Description: </para>
<para>Denotes that user is changing the content of an input component. Notice that the component's content (at the server) won't be changed until <code>onChange</code> is received. Thus, you have to invoke the <code>getValue </code>method in the <code>InputEvent </code>class to retrieve the temporary value.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>onSelection</code>
</para>
</entry>
<entry>
<para>
<link linkend="SelectionEvent">
<code>org.zkoss.zk.ui.event.SelectionEvent</code>
</link>
</para>
<para>Description: </para>
<para>Denotes that user is selecting a portion of the text of an input component. You can retrieve the start and end position of the selected text by use of the <code>getStart</code> and <code>getEnd</code> methods. </para>
</entry>
</row>
<row>
<entry>
<para>
<code>onFocus</code>
</para>
</entry>
<entry>
<para>
<link linkend="Event">
<code>org.zkoss.zk.ui.event.Event</code>
</link>
</para>
<para>Description: </para>
<para>Denotes when a component gets the focus. Remember event listeners execute at the server, so the focus at the client might be changed when the event listener for <code>onFocus</code> got executed.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>onBlur</code>
</para>
</entry>
<entry>
<para>
<link linkend="Event">
<code>org.zkoss.zk.ui.event.Event</code>
</link>
</para>
<para>Description: </para>
<para>Denotes when a component loses the focus. Remember event listeners execute at the server, so the focus at the client might be changed when the event listener for <code>onBlur </code>got executed.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>onCreate</code>
</para>
</entry>
<entry>
<para>
<link linkend="CreateEvent">
<code>org.zkoss.ui.zk.ui.event.CreateEvent</code>
</link>
</para>
<para>Description: </para>
<para>Denotes a component is created when rendering a ZUML page.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>onDrop</code>
</para>
</entry>
<entry>
<para>
<link linkend="DropEvent">
<code>org.zkoss.ui.zk.ui.event.DropEvent</code>
</link>
</para>
<para>Description: </para>
<para>Denotes another component is dropped to the component that receives this event.</para>
</entry>
</row></tbody></tgroup>
</informaltable></sect3><sect3><title>Properties</title>
<informaltable frame="all">
<tgroup cols="4">
<thead>
<row>
<entry>
<para>Property</para>
</entry>
<entry>
<para>Description</para>
</entry>
<entry>
<para>Data Type</para>
</entry>
<entry>
<para>Default Value</para>
</entry>
</row>
</thead><tbody>
<row>
<entry>
<para>
<code>multiline</code>
</para>
</entry>
<entry>
<para>Sets whether it is multiline. </para>
<para>Values: <code>true | false</code>
</para>
<para>Note: If <code>rows &gt; 1</code>, multiline will always return <code>true</code>
</para>
</entry>
<entry>
<para>
<code>boolean</code>
</para>
</entry>
<entry>
<para>
<code>false</code>
</para>
</entry>
</row>
<row>
<entry>
<para>rows</para>
</entry>
<entry>
<para>Sets the rows. </para>
</entry>
<entry>
<para>
<code>int</code>
</para>
</entry>
<entry>
<para>1</para>
</entry>
</row>
<row>
<entry>
<para>
<code>type</code>
</para>
</entry>
<entry>
<para>Sets the type. </para>
<para>Values : <code>text | password</code>
</para>
</entry>
<entry>
<para>
<code>String</code>
</para>
</entry>
<entry>
<para>text</para>
</entry>
</row>
<row>
<entry>
<para>
<code>val</code>
<code>ue</code>
</para>
</entry>
<entry>
<para>Sets the text value. </para>
</entry>
<entry>
<para>
<code>String</code>
</para>
</entry>
<entry>
<para>&lt;empty string&gt;</para>
</entry>
</row></tbody></tgroup>
</informaltable>
<para/></sect3><sect3><title>Methods</title>
<para>*NONE</para></sect3><sect3><title>Inherited From </title>
<informaltable frame="all">
<tgroup cols="1">
<thead>
<row>
<entry>
<para>Inherited From</para>
</entry>
</row>
</thead><tbody>
<row>
<entry>
<para>
<link linkend="InputElement">
<code>org.zkoss.zul.InputElement</code>
</link>
</para>
</entry>
</row>
<row>
<entry>
<para>
<link linkend="XulElement">
<code>org.zkoss.zul.imp.XulElement</code>
</link>
</para>
</entry>
</row>
<row>
<entry>
<para>
<link linkend="HtmlBasedComponent">
<code>org.zkoss.zk.ui.HtmlBasedComponent</code>
</link> </para>
</entry>
</row>
<row>
<entry>
<para>
<link linkend="AbstractComponent">
<code>org.zkoss.zk.ui.AbstractComponent </code>
</link>
</para>
</entry>
</row></tbody></tgroup>
</informaltable>
<para/></sect3></sect2>