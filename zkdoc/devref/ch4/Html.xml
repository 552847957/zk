<sect2 id="Html"><title>Html</title>
<para>The simplest way is to use a XUL component called <code>html</code> to embed whatever HTML tags you want to send directly to the browser. To avoid ZK from interpreting the HTML tags, you usually enclose them with <code>&lt;![CDATA[</code> and <code>]]&gt;</code>. In other words, they are not the child component. Rather, they are stored in the <code>content</code> property. Notice you can use EL expressions in it.</para>
<para>
<graphic fileref="images/Html.png"/>
</para>
<programlisting>&lt;window id="win" title="Html Demo"&gt;&#13;&lt;html&gt;&lt;![CDATA[&#13;&lt;h4&gt;Hi, ${win.title}&lt;/h4&gt;&#13;&lt;p&gt;It is the content of the html component.&lt;/p&gt;&#13;]]&gt;&lt;/html&gt;&#13;&lt;/window&gt;&#13;</programlisting>
<para>where <code>&lt;h4&gt;...&lt;/p&gt;</code> will become the content of the <code>html</code> element (see also the <code>getContent</code> method of the <code>org.zkoss.zul.Html</code> class).</para>
<para>The <code>html</code> component generates the HTML <code>SPAN</code> tag to enclose the content. In other words, it generates the following HTML tags when rendered to the browser.</para>
<programlisting>&lt;span id=”...”&gt;&#13;&lt;h4&gt;Hi, Html Demo&lt;/h4&gt;&#13;&lt;p&gt;It is the content of the html component.&lt;/p&gt;&#13;&lt;/span&gt;&#13;</programlisting>
<para>
<code/>
</para>
<para/><sect3><title>Class Name</title>
<para>
<code>org.zkoss.zul.Html</code>
</para></sect3><sect3><title>Supported Child Components</title>
<para>*NONE </para></sect3><sect3><title>Supported Events</title>
<para>*NONE </para></sect3><sect3><title>Properties</title>
<informaltable frame="all">
<tgroup cols="4">
<thead>
<row>
<entry>
<para>Property</para>
</entry>
<entry>
<para>Description</para>
</entry>
<entry>
<para>Data Type</para>
</entry>
<entry>
<para>Default Value</para>
</entry>
</row>
</thead><tbody>
<row>
<entry>
<para>
<code>content</code>
</para>
</entry>
<entry>
<para>Returns the embedded content (i.e., HTML tags).</para>
</entry>
<entry>
<para>
<code>String</code>
</para>
</entry>
<entry>
<para>
<code>empty ("")</code>
</para>
</entry>
</row></tbody></tgroup>
</informaltable>
<para/></sect3><sect3><title>Methods</title>
<informaltable frame="all">
<tgroup cols="4">
<thead>
<row>
<entry>
<para>Name</para>
</entry>
<entry>
<para>Description</para>
</entry>
<entry>
<para>Data Type</para>
</entry>
<entry>
<para>Values</para>
</entry>
</row>
</thead><tbody>
<row>
<entry>
<para>
<code>IsChildable</code>
</para>
<para>
<code>(Source Text)</code>
</para>
</entry>
<entry>
<para>Determines whether it accepts child components</para>
<para>Note: No child is allowed. </para>
</entry>
<entry>
<para>
<code>Boolean</code>
</para>
<para>
<code>(Source Text)</code>
</para>
</entry>
<entry>
<para>
<code>false</code>
</para>
</entry>
</row></tbody></tgroup>
</informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
<informaltable frame="all">
<tgroup cols="1">
<thead>
<row>
<entry>
<para>Inherited From</para>
</entry>
</row>
</thead><tbody>
<row>
<entry>
<para>
<link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
</para>
</entry>
</row>
<row>
<entry>
<para>
<link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> </para>
</entry>
</row>
<row>
<entry>
<para>
<link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
</para>
</entry>
</row></tbody></tgroup>
</informaltable>
<para/></sect3></sect2>