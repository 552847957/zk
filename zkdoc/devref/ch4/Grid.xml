<sect2 id="Grid"><title>Grid</title>
<para>Components: <code>grid, columns, column, rows and row.</code>
</para>
<para>A <code>grid</code> contains components that are aligned in rows like tables. Inside a <code>grid</code>, you declare two things, the <code>columns</code>, that define the header and <code>column</code> attributes, and the <code>rows</code>, that provide the content. To declare a set of rows, use the <code>rows</code> component, which should be a child element of <code>grid</code>. Inside that you should add <code>row</code> components, which are used for each <code>row</code>. Inside the <code>row</code> element, you should place the content that you want inside that <code>row</code>. Each child is a <code>column</code> of the specific <code>row</code>. Similarly, the <code>columns</code> are declared with the <code>columns</code> component, which should be placed as a child element of the <code>grid</code>. Unlike <code>row</code> is used to hold the content of each <code>row</code>, <code>column</code> declares the common attributes of each <code>column</code>, such as the width and alignment, and and optional headers, i.e., label and/or image. </para>
<para>
<graphic fileref="images/grid.png"/>
</para>
<programlisting>&lt;window title="Grid Demo" border="normal" width="360px"&gt;&#13;    &lt;zscript&gt;&#13;    class Comp implements Comparator {&#13;        private boolean _asc;&#13;        public Comp(boolean asc) {&#13;            _asc = asc;&#13;        }&#13;        public int compare(Object o1, Object o2) {&#13;            String s1 = o1.getChildren().get(0).getValue(),&#13;                s2 = o2.getChildren().get(0).getValue();&#13;            int v = s1.compareTo(s2);&#13;            return _asc ? v: -v;&#13;        }&#13;    }&#13;    Comp asc = new Comp(true), dsc = new Comp(false);&#13;    &lt;/zscript&gt;&#13;    &lt;grid&gt;&#13;        &lt;columns sizable="true"&gt;&#13;            &lt;column label="Type" sortAscending="&amp;#36;{asc}" sortDescending="&amp;#36;{dsc}"/&gt;&#13;            &lt;column label="Content"/&gt;&#13;        &lt;/columns&gt;&#13;        &lt;rows&gt;&#13;            &lt;row&gt;&#13;                &lt;label value="File:"/&gt;&#13;                &lt;textbox width="99%"/&gt;&#13;            &lt;/row&gt;&#13;            &lt;row&gt;&#13;                &lt;label value="Type:"/&gt;&#13;                &lt;hbox&gt;&#13;                    &lt;listbox rows="1" mold="select"&gt;&#13;                        &lt;listitem label="Java Files,(*.java)"/&gt;&#13;                        &lt;listitem label="All Files,(*.*)"/&gt;&#13;                    &lt;/listbox&gt;&#13;                    &lt;button label="Browse..."/&gt;&#13;                &lt;/hbox&gt;&#13;            &lt;/row&gt;&#13;            &lt;row&gt;&#13;                &lt;label value="Options:"/&gt;&#13;                &lt;textbox rows="3" width="99%"/&gt;&#13;            &lt;/row&gt;&#13;        &lt;/rows&gt;&#13;    &lt;/grid&gt;&#13;&lt;/window&gt;&#13;</programlisting><sect3><title>Class Name</title>
<para>
<code>org.zkoss.zul.Grid</code>
</para></sect3><sect3><title>Supported Child Components</title>
<para>*org.zkoss.zul.Columns</para>
<para>*org.zkoss.zul.Rows</para></sect3><sect3><title>Supported Events</title></sect3><sect3><title/>
<informaltable frame="all">
<tgroup cols="2">
<thead>
<row>
<entry>
<para>Name</para>
</entry>
<entry>
<para>Event Type</para>
</entry>
</row>
</thead><tbody>
<row>
<entry>
<para>
<code>onPaging</code>
</para>
</entry>
<entry>
<para>
<link linkend="PagingEvent">
<code>org.zkoss.zul.event.PagingEvent</code>
</link>
</para>
<para>
<code>Description:</code>
<code> Notifies one of the pages of a multi-page component is</code>
</para>
<para>
<code>selected by the user.</code>
<code> </code>
</para>
</entry>
</row></tbody></tgroup>
</informaltable></sect3><sect3><title>Properties</title>
<informaltable frame="all">
<tgroup cols="4">
<thead>
<row>
<entry>
<para>Property</para>
</entry>
<entry>
<para>Description</para>
</entry>
<entry>
<para>Data Type</para>
</entry>
<entry>
<para>Default Value</para>
</entry>
</row>
</thead><tbody>
<row>
<entry>
<para>
<code>align</code>
</para>
</entry>
<entry>
<para>
<code>Sets the horizontal alignment of the whole grid.</code>
</para>
<para>
<code>Val</code>
<code>ue:</code>
<code> left|center|right</code>
</para>
</entry>
<entry>
<para>
<code>java.lang.String</code>
</para>
</entry>
<entry>
<para>
<code>&lt;null&gt;</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>mod</code>
<code>el</code>
</para>
</entry>
<entry>
<para>
<code>Sets the list model associated with this grid.</code>
</para>
</entry>
<entry>
<para>
<code>org.zkoss.zul.ListModel</code>
</para>
</entry>
<entry>
<para>
<code>&lt;null&gt;</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>pageSize</code>
</para>
</entry>
<entry>
<para>Sets the page size, aka., the number rows per page. </para>
<para>Note: Available only the paging mold</para>
</entry>
<entry>
<para>
<code>int</code>
</para>
</entry>
<entry>
<para>
<code>&lt;null&gt;</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>paginal</code>
</para>
</entry>
<entry>
<para/>
</entry>
<entry>
<para>
<code>org.zkoss.zul.ext.</code>
<code>Paginal</code>
</para>
</entry>
<entry>
<para>
<code>&lt;null&gt;</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>pre</code>
<code>loadSize</code>
</para>
</entry>
<entry>
<para>
<code>Sets the number of rows to preload when receiving the rendering request from the client. </code>
</para>
</entry>
<entry>
<para>
<code>int</code>
</para>
</entry>
<entry>
<para>
<code>7</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>rowrenderer</code>
</para>
</entry>
<entry>
<para>Sets the renderer which is used to render each row if getModel() is not null.</para>
</entry>
<entry>
<para>
<code>o</code>
<code>rg</code>
<code>.zkoss.zul.RowRenderer</code>
</para>
</entry>
<entry>
<para>
<code>&lt;null&gt;</code>
</para>
</entry>
</row></tbody></tgroup>
</informaltable>
<para/></sect3><sect3><title>Methods</title>
<informaltable frame="all">
<tgroup cols="3">
<thead>
<row>
<entry>
<para>Name</para>
</entry>
<entry>
<para>Description</para>
</entry>
<entry>
<para>Return Data Type</para>
</entry>
</row>
</thead><tbody>
<row>
<entry>
<para>
<code>clone()</code>
</para>
</entry>
<entry>
<para/>
</entry>
<entry>
<para>
<code>java.lang.Object</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>getCell(int, int)</code>
</para>
</entry>
<entry>
<para>Returns the specified cell, or null if not available. </para>
</entry>
<entry>
<para>
<code>org.zkoss.zk.ui.Component</code>
<code> </code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>getColumns()</code>
</para>
</entry>
<entry>
<para>Returns the columns.</para>
</entry>
<entry>
<para>
<code>org</code>
<code>.zkoss.zul.Columns</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>getFoot()</code>
</para>
</entry>
<entry>
<para>Returns the foot.</para>
</entry>
<entry>
<para>
<code>org</code>
<code>.zkoss.zul.Foot</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>getOuterAttrs()</code>
</para>
</entry>
<entry>
<para/>
</entry>
<entry>
<para>
<code>java.lang.String</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>getPaging()</code>
</para>
</entry>
<entry>
<para>Returns the child paging controller that is created automatically, or null if mold is not "paging", or the controller is specified externally by setPaginal(org.zkoss.zul.ext.Paginal).</para>
</entry>
<entry>
<para>
<code>org</code>
<code>.zkoss.zul.Paging</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>getRows()</code>
</para>
</entry>
<entry>
<para>Returns the rows.</para>
</entry>
<entry>
<para>
<code>org</code>
<code>.zkoss.zul.Rows</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>ins</code>
<code>ertBefore(org.zkoss.zk.ui.Component, org.zkoss.zk.ui.Component) </code>
</para>
</entry>
<entry>
<para/>
</entry>
<entry>
<para>
<code>boo</code>
<code>lean</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>onInitRender()</code>
</para>
</entry>
<entry>
<para>Handles a private event, onInitRender. </para>
</entry>
<entry>
<para>
<code>void</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>onPaging()</code>
</para>
</entry>
<entry>
<para>Called when the onPaging event is received (from getPaginal()).</para>
</entry>
<entry>
<para>
<code>void</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>removeChild(org.zkoss.zk.ui.Component) </code>
</para>
</entry>
<entry>
<para/>
</entry>
<entry>
<para>
<code>boo</code>
<code>lean</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>renderAll()</code>
</para>
</entry>
<entry>
<para>Renders all Row if not loaded yet, with getRowRenderer().</para>
</entry>
<entry>
<para>
<code>void</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>renderItems(java.util.Set)</code>
</para>
</entry>
<entry>
<para/>
</entry>
<entry>
<para>
<code>void</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>renderRow(Row)</code>
</para>
</entry>
<entry>
<para>Renders the specified Row if not loaded yet, with getRowRenderer().</para>
</entry>
<entry>
<para>
<code>void</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>renderRows(java.util.Set) </code>
</para>
</entry>
<entry>
<para>Renders a set of specified rows.</para>
</entry>
<entry>
<para>
<code>void</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>setMold(ListModel)</code>
</para>
</entry>
<entry>
<para/>
</entry>
<entry>
<para>
<code>void</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>setRowRenderer(java.lang.String)</code>
</para>
</entry>
<entry>
<para>Sets the renderer by use of a class name.</para>
</entry>
<entry>
<para>
<code>void</code>
</para>
</entry>
</row></tbody></tgroup>
</informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
<informaltable frame="all">
<tgroup cols="1">
<thead>
<row>
<entry>
<para>Inherited From</para>
</entry>
</row>
</thead><tbody>
<row>
<entry>
<para>
<link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
</para>
</entry>
</row>
<row>
<entry>
<para>
<link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> </para>
</entry>
</row>
<row>
<entry>
<para>
<link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
</para>
</entry>
</row></tbody></tgroup>
</informaltable>
<para/></sect3></sect2>