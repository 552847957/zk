<sect2 id="Window"><title>Window</title>
<para>A window is, like HTML DIV tag, used to group components. Unlike other components, a window has the following characteristics. </para>
<orderedlist>
<listitem>
<para>A window is an owner of an ID space. Any component contained in a window, including itself, could be found by use of the getFellow method, if it is assigned with an identifier.</para>
</listitem>
<listitem>
<para>A window could be overlapped, popup, and embedded.</para>
</listitem>
<listitem>
<para>A window could be a modal dialog.</para>
</listitem>
</orderedlist>
<para>
<graphic fileref="images/window.PNG"/>
</para>
<programlisting>&lt;hbox&gt;&#13;    &lt;window title="Embedded Style" border="normal" width="200px"&gt;&#13;        Hello, Embedded!&#13;    &lt;/window&gt;&#13;    &lt;window title="Cyan Style" sclass="wndcyan" border="normal" width="200px"&gt;&#13;        Hello, Cyan!&#13;    &lt;/window&gt;&#13;    &lt;window title="Popup Style" sclass="popup" border="normal" width="200px"&gt;&#13;        Hello, Popup!&#13;    &lt;/window&gt;&#13;    &lt;window title="Modal Style" sclass="modal" border="normal" width="200px"&gt;&#13;        Hello, Modal!&#13;    &lt;/window&gt;&#13;&lt;/hbox&gt;&#13;</programlisting><sect3><title>Class Name</title>
<para>
<code>org.zkoss.zul.Window</code>
</para></sect3><sect3><title>Supported Child Components</title>
<para>*ALL</para></sect3><sect3><title>Supported Events</title></sect3><sect3><title/>
<informaltable frame="all">
<tgroup cols="2">
<thead>
<row>
<entry>
<para>Name</para>
</entry>
<entry>
<para>Event Type</para>
</entry>
</row>
</thead><tbody>
<row>
<entry>
<para>
<code>onMove </code>
</para>
</entry>
<entry>
<para>Event: <link linkend="Event">
<code>org.zkoss.ui.zk.ui.event.Event</code>
</link>
</para>
<para>Denotes the close button is pressed by a user, and the</para>
<para>component shall detach itself.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>onOpen </code>
</para>
</entry>
<entry>
<para>Event: <link linkend="OpenEvent">
<code>org.zkoss.zk.ui.event.OpenEvent</code>
</link>
</para>
<para>Denotes user has opened or closed a component.<code> </code>
</para>
<para>
<code>Note:</code>
</para>
<para>Unlike <code>onClose</code>, this event is only a notification. The</para>
<para>client sends this event after opening or closing the</para>
<para>component.</para>
<para>It is useful to implement load-on-demand by listening to</para>
<para>the <code>onOpen</code> event, and creating components when the</para>
<para>first time the component is opened.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>onClose </code>
</para>
</entry>
<entry>
<para>Event: <link linkend="Event">
<code>org.zkoss.ui.zk.ui.event.Event</code>
</link>
</para>
<para>Denotes the close button is pressed by a user, and the</para>
<para>component shall detach itself.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>onOK </code>
</para>
</entry>
<entry>
<para>Event:<code> </code>
<link linkend="KeyEvent">
<code>org.zkoss.zk.ui.event.KeyEvent</code>
</link>
</para>
<para>Denotes user has pressed the ENTER key.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>onCacnel </code>
</para>
</entry>
<entry>
<para>Event:<code> </code>
<link linkend="KeyEvent">
<code>org.zkoss.zk.ui.event.KeyEvent</code>
</link>
</para>
<para>
<code>Denotes user has pressed the ESC key.</code>
</para>
</entry>
</row>
<row>
<entry>
<para>onCtrlKey</para>
</entry>
<entry>
<para>Event: <link linkend="KeyEvent">
<code>org.zkoss.zk.ui.event.KeyEvent</code>
</link>
</para>
<para>Denotes user has pressed a special key, such as PgUp, Home and a key combined with the Ctrl or Alt key. Refer to the ctrlKeys Property section below for details.</para>
</entry>
</row></tbody></tgroup>
</informaltable></sect3><sect3><title>Properties</title>
<informaltable frame="all">
<tgroup cols="4">
<thead>
<row>
<entry>
<para>Property</para>
</entry>
<entry>
<para>Description</para>
</entry>
<entry>
<para>Data Type</para>
</entry>
<entry>
<para>Default Value</para>
</entry>
</row>
</thead><tbody>
<row>
<entry>
<para>
<code>border </code>
</para>
</entry>
<entry>
<para>Sets the border </para>
<para>Values: <code>none</code> | <code>normal</code> </para>
</entry>
<entry>
<para>
<code>java.lang.String</code>
</para>
</entry>
<entry>
<para>
<code>none</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>closable</code>
</para>
</entry>
<entry>
<para>Sets whether to show a close button on the title bar. </para>
</entry>
<entry>
<para>
<code>boolean</code>
</para>
</entry>
<entry>
<para>
<code>false</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>contentStyle</code>
</para>
</entry>
<entry>
<para>Sets the CSS style for the content block of the window. </para>
</entry>
<entry>
<para>
<code>java.lang.String</code>
</para>
</entry>
<entry>
<para>
<code>&lt;empty string&gt;</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>ctrlKeys</code>
</para>
</entry>
<entry>
<para>Sets what keystrokes to intercept. </para>
</entry>
<entry>
<para>
<code>java.lang.String</code>
</para>
</entry>
<entry>
<para>
<code>&lt;null&gt;</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>draggable</code>
</para>
</entry>
<entry>
<para/>
</entry>
<entry>
<para>
<code>java.lang.String</code>
</para>
</entry>
<entry>
<para>
<code>&lt;null&gt;</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>mode</code>
</para>
</entry>
<entry>
<para>Sets the mode of window.</para>
<para>Values: <code>overlapped</code> | <code>popup</code> | <code>modal</code> | <code>embedded</code> | <code>highlighted</code>. </para>
</entry>
<entry>
<para>
<code>int</code>
</para>
</entry>
<entry>
<para>
<code>0</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>position</code>
</para>
</entry>
<entry>
<para>Sets how to position the window at the client screen. </para>
</entry>
<entry>
<para>
<code>java.lang.String</code>
</para>
</entry>
<entry>
<para>
<code>&lt;null&gt;</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>sizable</code>
</para>
</entry>
<entry>
<para>Sets whether the window is sizable. </para>
</entry>
<entry>
<para>
<code>boolean</code>
</para>
</entry>
<entry>
<para>
<code>false</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>title</code>
</para>
</entry>
<entry>
<para>Sets the title. </para>
</entry>
<entry>
<para>
<code>java.lang.String</code>
</para>
</entry>
<entry>
<para>
<code>&lt;empty string&gt;</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>visible</code>
</para>
</entry>
<entry>
<para>Changes the visibility of the window. </para>
</entry>
<entry>
<para>
<code>boolean</code>
</para>
</entry>
<entry>
<para>
<code>false</code>
</para>
</entry>
</row></tbody></tgroup>
</informaltable>
<para/></sect3><sect3><title>Methods</title>
<informaltable frame="all">
<tgroup cols="3">
<thead>
<row>
<entry>
<para>Name</para>
</entry>
<entry>
<para>Description</para>
</entry>
<entry>
<para>Return Data Type</para>
</entry>
</row>
</thead><tbody>
<row>
<entry>
<para>
<code>clone()</code>
</para>
</entry>
<entry>
<para/>
</entry>
<entry>
<para>
<code>java.lang.Object</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>doEmbedded()</code>
</para>
</entry>
<entry>
<para>Makes this window as embeded with other components </para>
</entry>
<entry>
<para>
<code>void</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>doHighlighted()</code>
</para>
</entry>
<entry>
<para>Makes this window as highlited.</para>
</entry>
<entry>
<para>
<code>void</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>doModal()</code>
</para>
</entry>
<entry>
<para>Makes this window as a modal dialog.</para>
</entry>
<entry>
<para>
<code>void</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>doOverlapped()</code>
</para>
</entry>
<entry>
<para>Makes this window as overlapped with other components.</para>
</entry>
<entry>
<para>
<code>void</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>doPopup()</code>
</para>
</entry>
<entry>
<para>Makes this window as popup, which is overlapped with other </para>
<para>component and auto-hiden when user clicks outside of the window.</para>
</entry>
<entry>
<para>
<code>void</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>getContentSclass()</code>
</para>
</entry>
<entry>
<para>Returns the style class used for the content block.</para>
</entry>
<entry>
<para>
<code>java.lang.String </code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>getOuterAttrs() </code>
</para>
</entry>
<entry>
<para/>
</entry>
<entry>
<para>
<code>java.lang.String </code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>getTitleSclass()</code>
</para>
</entry>
<entry>
<para>Returns the style class used for the title.</para>
</entry>
<entry>
<para>
<code>java.lang.String </code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>inEmbedded()</code>
</para>
</entry>
<entry>
<para>Returns whether this is embedded with other components </para>
</entry>
<entry>
<para>
<code>boolean</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>inHighlighted()</code>
</para>
</entry>
<entry>
<para>Returns whether this is a highlighted window.</para>
</entry>
<entry>
<para>
<code>boolean</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>inModal()</code>
</para>
</entry>
<entry>
<para>Returns whether this is a modal dialog.</para>
</entry>
<entry>
<para>
<code>boolean</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>inOverlapped()</code>
</para>
</entry>
<entry>
<para>Returns whether this is a overlapped window.</para>
</entry>
<entry>
<para>
<code>boolean</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>inPopup()</code>
</para>
</entry>
<entry>
<para>Returns whether this is a popup window.</para>
</entry>
<entry>
<para>
<code>boolean</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>insertBefore(org.zkoss.zk.ui.Component child, </code>
</para>
<para>
<code>org.zkoss.zk.ui.Component insertBefore) </code>
</para>
</entry>
<entry>
<para/>
</entry>
<entry>
<para>
<code>boolean</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>onChildRemoved(org.zkoss.zk.ui.Component child)</code>
</para>
</entry>
<entry>
<para/>
</entry>
<entry>
<para>
<code>void</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>onClose()</code>
</para>
</entry>
<entry>
<para>Process the onClose event sent when the close button is </para>
<para>pressed.</para>
</entry>
<entry>
<para>
<code>void</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>onModal()</code>
</para>
</entry>
<entry>
<para>Process the onModal event by making itself a modal window.</para>
</entry>
<entry>
<para>
<code>void</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>setPage(org.zkoss.zk.ui.Page page)</code>
</para>
</entry>
<entry>
<para/>
</entry>
<entry>
<para>
<code>void</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>setParent(org.zkoss.zk.ui.Component parent)</code>
</para>
</entry>
<entry>
<para/>
</entry>
<entry>
<para>
<code>void</code>
</para>
</entry>
</row></tbody></tgroup>
</informaltable>
<para/>
<para>Inherited From </para>
<informaltable frame="all">
<tgroup cols="1">
<thead>
<row>
<entry>
<para>Name</para>
</entry>
</row>
</thead><tbody>
<row>
<entry>
<para>
<link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
</para>
</entry>
</row>
<row>
<entry>
<para>
<link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> </para>
</entry>
</row>
<row>
<entry>
<para>
<link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
</para>
</entry>
</row></tbody></tgroup>
</informaltable>
<para/></sect3></sect2>