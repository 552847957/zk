<sect2 id="Intbox"><title>Intbox</title>
<para>A <code>intbox</code> is used to let users input integer data.</para>
<para>
<graphic fileref="images/intbox.png"/>While input invalid data:</para>
<para>
<graphic fileref="images/intbox2.png"/>
</para>
<programlisting>&lt;window title="Intbox Demo" border="normal" width="200px"&gt;&#13;    int box:&lt;intbox/&gt;&#13;&lt;/window&gt;&#13;</programlisting><sect3><title>Class Name</title>
<para>
<code>org.zkoss.zul.Intbox</code>
</para></sect3><sect3><title>Supported Child Components</title>
<para>*NONE </para></sect3><sect3><title>Supported Events</title>
<informaltable frame="all">
<tgroup cols="2">
<thead>
<row>
<entry>
<para>Event Name</para>
</entry>
<entry>
<para>Event Type</para>
</entry>
</row>
</thead><tbody>
<row>
<entry>
<para>
<code>onChange</code>
</para>
</entry>
<entry>
<para>
<link linkend="InputEvent">
<code>org.zkoss.zk.ui.event.InputEvent</code>
</link>
</para>
<para>Description: </para>
<para>Denotes the content of an input component has been modified by the user.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>onChanging</code>
</para>
</entry>
<entry>
<para>
<link linkend="InputEvent">
<code>org.zkoss.zk.ui.event.InputEvent</code>
</link>
</para>
<para>Description: </para>
<para>Denotes that user is changing the content of an input component. Notice that the component's content (at the server) won't be changed until <code>onChange</code> is received. Thus, you have to invoke the <code>getValue </code>method in the <code>InputEvent </code>class to retrieve the temporary value.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>onSelection</code>
</para>
</entry>
<entry>
<para>
<link linkend="SelectionEvent">
<code>org.zkoss.zk.ui.event.SelectionEvent</code>
</link>
</para>
<para>Description: </para>
<para>Denotes that user is selecting a portion of the text of an input component. You can retrieve the start and end position of the selected text by use of the <code>getStart</code> and <code>getEnd</code> methods. </para>
</entry>
</row>
<row>
<entry>
<para>
<code>onFocus</code>
</para>
</entry>
<entry>
<para>
<link linkend="Event">
<code>org.zkoss.zk.ui.event.Event</code>
</link>
</para>
<para>Description: </para>
<para>Denotes when a component gets the focus. Remember event listeners execute at the server, so the focus at the client might be changed when the event listener for <code>onFocus</code> got executed.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>onBlur</code>
</para>
</entry>
<entry>
<para>
<link linkend="Event">
<code>org.zkoss.zk.ui.event.Event</code>
</link>
</para>
<para>Description: </para>
<para>Denotes when a component loses the focus. Remember event listeners execute at the server, so the focus at the client might be changed when the event listener for <code>onBlur </code>got executed.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>onCreate</code>
</para>
</entry>
<entry>
<para>
<link linkend="CreateEvent">
<code>org.zkoss.ui.zk.ui.event.CreateEvent</code>
</link>
</para>
<para>Description: </para>
<para>Denotes a component is created when rendering a ZUML page.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>onDrop</code>
</para>
</entry>
<entry>
<para>
<link linkend="DropEvent">
<code>org.zkoss.ui.zk.ui.event.DropEvent</code>
</link>
</para>
<para>Description: </para>
<para>Denotes another component is dropped to the component that receives this event.</para>
</entry>
</row></tbody></tgroup>
</informaltable></sect3><sect3><title>Properties</title>
<informaltable frame="all">
<tgroup cols="3">
<thead>
<row>
<entry>
<para>Property</para>
</entry>
<entry>
<para>Description</para>
</entry>
<entry>
<para>Return Data Type</para>
</entry>
</row>
</thead><tbody>
<row>
<entry>
<para>
<code>val</code>
<code>ue</code>
</para>
</entry>
<entry>
<para>Sets the text value. </para>
</entry>
<entry>
<para>
<code>Integer</code>
</para>
</entry>
</row></tbody></tgroup>
</informaltable>
<para/></sect3><sect3><title>Methods</title>
<para>*NONE</para></sect3><sect3><title>Inherited From </title>
<informaltable frame="all">
<tgroup cols="1">
<thead>
<row>
<entry>
<para>Inherited From</para>
</entry>
</row>
</thead><tbody>
<row>
<entry>
<para>
<link linkend="NumberInputElement">
<code>org.zkoss.zul.NumberInputElement</code>
</link>
</para>
</entry>
</row>
<row>
<entry>
<para>
<link linkend="FormatInputElement">
<code>org.zkoss.zul.FormatInputElement</code>
</link>
</para>
</entry>
</row>
<row>
<entry>
<para>
<link linkend="InputElement">
<code>org.zkoss.zul.InputElement</code>
</link>
</para>
</entry>
</row>
<row>
<entry>
<para>
<link linkend="XulElement">
<code>org.zkoss.zul.imp.XulElement</code>
</link>
</para>
</entry>
</row>
<row>
<entry>
<para>
<link linkend="HtmlBasedComponent">
<code>org.zkoss.zk.ui.HtmlBasedComponent</code>
</link> </para>
</entry>
</row>
<row>
<entry>
<para>
<link linkend="AbstractComponent">
<code>org.zkoss.zk.ui.AbstractComponent </code>
</link>
</para>
</entry>
</row></tbody></tgroup>
</informaltable>
<para/></sect3></sect2>