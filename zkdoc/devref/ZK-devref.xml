<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book
  PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<book lang="en-US">
   <title>The Developer's Reference</title>
   <subtitle>Version 3.5.2</subtitle>
   <bookinfo>
      <copyright>
         <year>2007</year>
         <holder>Potix Corporation. All rights reserved.</holder>
      </copyright>
   </bookinfo>
   <para>
      <graphic fileref="images/potix.jpg">2
			
		</graphic>
   </para>
   <para>SIMPLY RICH</para>
   <para>ZKTM</para>
   <para>October 2008</para>
   <para>Potix Corporation</para>
   <para>Revision 109</para>
   <para/>
   <para/>
   <para>Copyright © Potix Corporation. All rights reserved.</para>
   <para>The material in this document is for information only and is subject to change without notice. While reasonable efforts have been made to assure its accuracy, Potix Corporation assumes no liability resulting from errors or omissions in this document, or from the use of the information contained herein.</para>
   <para>Potix Corporation may have patents, patent applications, copyright or other intellectual property rights covering the subject matter of this document. The furnishing of this document does not give you any license to these patents, copyrights or other intellectual property.</para>
   <para>Potix Corporation reserves the right to make changes in the product design without reservation and without notification to its users.</para>
   <para>The Potix logo and ZK are trademarks of Potix Corporation.</para>
   <para>All other product names are trademarks, registered trademarks, or trade names of their respective owners.</para>
   <chapter>
      <title>1. Introduction</title>
      <para>Welcome to ZK, the simplest way to make Web applications rich.</para>
      <para>The Developer's Reference fully describes properties and methods of components. For concepts, features, refer to the Developer's Guide. For installation, refer to the Quick Start Guide.</para>
   </chapter>
   <chapter>
      <title>2. The ZK User Interface Markup Language</title><sect1><title>Implicit Objects</title>
      <para>For scripts (aka., zsccript) and EL expressions embedded in a ZUML page, there are a set of implicit objects that enable developers to access components more efficiently.</para><sect2><title>applicationScope - java.util.Map</title>
      <para>A map of custom attributes associated with the Web application. It is the same as the getAttributes method in the org.zkoss.zk.ui.WebApp interface.</para>
      <para>A Web application is a WAR, and each Web application has an independent set of custom attributes. These attributes are used mainly to communicate among different desktops and sessions.</para>
      <para>If the client is based on HTTP, such as a Web browser, this is the same map of attributes stored in javax.servlet.ServletContext. In other words, you could use it communicate with other servlets, such as JSF.</para></sect2><sect2><title>arg - java.util.Map</title>
      <para>The arg argument passed to the createComponents method in the org.zkoss.zk.ui.Executions class. It might be null, depending on how createComponents is called.</para>
      <para>It is the same as self.desktop.execution.arg.</para>
      <programlisting>params.put("name", "John");&#xD;Executions.createComponents("/my.zul", null, params);&#xD;</programlisting>
      <para>Then, in my.zul,</para>
      <programlisting>&lt;window title="${arg.name}"&gt;&#xD;...&#xD;</programlisting>
      <para>Notice that arg is available only when creating the components for the included page, say my.zul. On the other hand, all events, including onCreate, are processed later. Thus, if you want to access arg in the onCreate's listener, use the getArg method of the org.zkoss.zk.ui.event.CreateEvent class.</para></sect2><sect2><title>componentScope - java.util.Map</title>
      <para>A map of custom attributes associated with the component. It is the same as the getAttributes method in the org.zkoss.zk.ui.Component interface.</para></sect2><sect2><title>desktop - org.zkoss.zk.ui.Desktop</title>
      <para>The current desktop. It is the same as self.desktop.</para>
      <programlisting>desktop.getPage("main");&#xD;</programlisting></sect2><sect2><title>desktopScope - java.util.Map</title>
      <para>A map of custom attributes associated with the desktop. It is the same as the getAttributes method in the org.zkoss.zk.ui.Desktop interface.</para>
      <para>It is mainly used to communicate among pages in the same desktop.</para></sect2><sect2><title>each - java.lang.Object</title>
      <para>The current item of the collection being iterated, when ZK evaluates an iterative element. An iterative element is an element with the forEach attribute.</para>
      <programlisting>&lt;listbox width="100px"&gt;&#xD;&lt;listitem label="${each}" forEach="${contacts}"/&gt;&#xD;&lt;/listbox&gt;&#xD;</programlisting></sect2><sect2><title>event - org.zkoss.zk.ui.event.Event or derived</title>
      <para>The current event. Available for the event listener only.</para>
      <programlisting>&lt;textbox onChanging="react(event.value)"/&gt;&#xD;&lt;combobox onChanging="autoComplete()"/&gt;&#xD;&lt;zscript&gt;&#xD;void react(String value) {&#xD;...&#xD;}&#xD;void autoComplete() {&#xD;String value = event.getValue();&#xD;...&#xD;}&#xD;&lt;/zscript&gt;&#xD;</programlisting></sect2><sect2><title>execution – org.zkoss.zk.ui.Execution</title>
      <para>The current execution.</para></sect2><sect2><title>forEachStatus – org.zkoss.zk.ui.util.ForEachStatus</title>
      <para>The status of an iteration. ZK exposes the information relative to the iteration taking place when evaluating the iterative element.</para>
      <programlisting>&lt;zk&gt;&#xD;&lt;zscript&gt;&#xD;grades = new String[] {"Best", "Better", "Good"};&#xD;&lt;/zscript&gt;&#xD;&lt;listbox width="100px"&gt;&#xD;&lt;listitem label="${forEachStatus.index}: ${each}" forEach="${grades}"/&gt;&#xD;&lt;/listbox&gt;&#xD;&lt;/zk&gt;&#xD;</programlisting>
      <para>Note: forEachStatus.index is absolute with respect to the underlying collection, array or other type. For example, if forEachBegin is 5, then the first value of forEachStatus.index with be 5.</para></sect2><sect2><title>page - org.zkoss.zk.ui.Page</title>
      <para>The current page. It is the same as self.page.</para></sect2><sect2><title>pageContext – org.zkoss.web.servlet.xel.PageContext</title>
      <para>The current page context used to retrieve the request, response, variable resolver and so on.</para></sect2><sect2><title>pageScope - java.util.Map</title>
      <para>A map of custom attributes associated with the current page. It is the same as the getAttributes method in the org.zkoss.zk.ui.Page interface.</para></sect2><sect2><title>requestScope – java.util.Map</title>
      <para>A map of custom attributes associated with the current execution. It is the same as getAttributes method in the org.zkoss.zk.ui.Execution interface.</para></sect2><sect2><title>self - org.zkoss.zk.ui.Component</title>
      <para>The component itself. In other words, it is the closest component, depicted as follows.</para>
      <programlisting>&lt;listbox&gt;&#xD;&lt;zscript&gt;self.getItems();&lt;/zscript&gt;&lt;!-- self is listbox --&gt;&#xD;&lt;listitem value="ab" label="${self.value}"/&gt;&lt;!-- self is listitem --&gt;&#xD;&lt;zscript&gt;self.getSelectedIndex();&lt;/zscript&gt;&lt;!-- self is listbox --&gt;&#xD;&lt;/listbox&gt;&#xD;</programlisting></sect2><sect2><title>session - org.zkoss.zk.ui.Session</title>
      <para>The session. It is similar to javax.servlet.http.HttpSession<footnote>
            <para>ZK session actually encapsulates the HTTP session to make ZK applications independent of HTTP.</para>
         </footnote>.</para></sect2><sect2><title>sessionScope - java.util.Map</title>
      <para>A map of custom attributes associated with the session. It is the same as the getAttributes method in the org.zkoss.zk.ui.Session interface.</para>
      <para>If the client is based on HTTP, such as a Web browser, this is the same map of attributes stored in javax.servlet.http.HttpSession. In other words, you could use it communicate with other servlets, such as JSF.</para></sect2><sect2><title>spaceOwner - org.zkoss.zk.ui.IdSpace</title>
      <para>The space owner of this component. It is the same as self.spaceOwner.</para></sect2><sect2><title>spaceScope - java.util.Map</title>
      <para>A map of custom attributes associated with the ID space containing this component.</para></sect2></sect1><sect1><title>Processing Instructions</title>
      <para>The XML processing instructions describe how to process the ZUML page. They will be processed first before processing XML elements. </para><sect2><title>The component Directive</title>
      <para>&lt;?component name="myName" macroURI="/mypath/my.zul" [inline="true|false"] [prop1="value1"] [prop2="value2"]... ?&gt;</para>
      <para>&lt;?component name="myName" [class="myPackage.myClass"] [extends="nameOfExistComponent"] [moldName="myMoldName"] [moldURI="/myMoldURI"] [prop1="value1"] [prop2="value2"]... ?&gt;</para>
      <para>Defines a new component. There are two formats: by-macro and by-class.</para><sect3><title>The by-macro Format</title>
      <para>&lt;?component name="myName" macroURI="/mypath/my.zul" [prop1="value1"] [prop2="value2"]... ?&gt;</para>
      <para>You could define a new component based on a ZUML page. It is also called the macro component. In other words, once an instance of the new component is created, it creates child components based on the specified ZUML page (the macroURI attribute).</para>
      <para>In addition, you could specify the initial properties (such as prop1 in the above example), such that they are always passed to the macro component (thru the arg variable).</para>
      <para>The inline attribute specifies whether it is an inline macro (inlinie="true") or a regular macro (default).</para>
      <para>An inline macro behaves like inline-expansion. ZK doesn't create a macro component if an inline macro is encountered. Rather, it inline-expands the components defined in the macro URI. In other words, it works as if you type the content of the inline macro directly to the target page.</para>
      <para>On the other hand, ZK will create a real component (called a macro component) to represent the regular macro. That is, the macro component is created as the parent of the components that are defined in the macro.</para></sect3><sect3><title>The by-class Format</title>
      <para>&lt;?component name="myName" [class="myPackage.myClass"] [extends="nameOfExistComponent"] [moldName="myMoldName"] [moldURI="/myMoldURI"] [prop1="value1"] [prop2="value2"]...?&gt;</para>
      <para>In addition to defining a component by a ZUML page (aka., a macro component), You could define a new component by implementing a class that implements the org.zkoss.zk.ui.Component interface. Then, use the by-class format to declare such kind of components for a page.</para>
      <para>To define a new component, you have to specify at least the class attribute, which is used by ZK to instantiate a new instance of the component.</para>
      <para>In addition to defining a new component, you can override properties of existent components by specifying the extends element with the component's name to extend from (aka., extendee). In other words, if extends is specified, the definition of the extendee is loaded as the default value and then override only properties that are specified in this directive.</para>
      <para>If the name of extendee and extender are the same, it means the extender will override the definition of extendee.</para>
      <para>For example, assume you want to use MyWindow instead of the default window, org.zkoss.zul.html.Window, for all windows defined in this ZUML page. Then, you can declare it as follows.</para>
      <programlisting>&lt;?component name="window" extends="window" class="MyWindow"?&gt;&#xD;...&#xD;&lt;window&gt;&#xD;...&#xD;&lt;/window&gt;&#xD;</programlisting>
      <para>It is equivalent to the following codes.</para>
      <programlisting>&lt;window use="MyWindow"&gt;&#xD;...&#xD;&lt;/window&gt;&#xD;</programlisting>
      <para>In addition, you could specify the properties to initialize. For example, you want to use the style class called blue for all buttons used in this page, then you could:</para>
      <programlisting>&lt;?component name="button" extends="button" sclass="blue"?&gt;&#xD;</programlisting>
      <para>Similarly, you could use the following definition to use OK as the default label for all buttons specified in this page.</para>
      <programlisting>&lt;?component name="button" extends="button" label="OK"?&gt;&#xD;</programlisting>
      <para>Notice that the properties won't be applied if a component is created manually (by zscript or by Java codes). If you still want them to be applied with the initialial properties, you could invoke the applyProperties method as follows.</para>
      <para>&lt;zscript&gt;Button btn = new Button();btn.applyProperties(); //apply the initial properties&lt;/zscript&gt;</para></sect3><sect3><title>class</title>
      <para>[Optional]</para>
      <para>Used to specify the class to instantiate an instance of such kind of components. Unlike other directives, the class can be defined with zscript.</para></sect3><sect3><title>extends</title>
      <para>[Optional]</para>
      <para>Specifies the component name to extend from. The existent definition of the specified name will be loaded to initialize the new component definition. In other words, it extends the existent definition instead of defining a brand-new one.</para></sect3><sect3><title>macroURI</title>
      <para>[Required if the by-macro format is used][EL is not allowed]</para>
      <para>Used with the by-macro format to specify the URI of the ZUML page, which is used as the template to create components.</para></sect3><sect3><title>moldName</title>
      <para>[Optional][Default: default]</para>
      <para>Used with the by-class format to specify the mold name. If moldName is specified, moldURI must be specified, too.</para></sect3><sect3><title>moldURI</title>
      <para>[Optional][EL is allowed]</para>
      <para>moldURI="~./zul/in-my-jar.dsp"moldURI="/WEB-INF/in-my-web.dsp"moldURI="/jsp-or-other-servlet"moldURI="class:com.mycompany.myrender"</para>
      <para>Used with the by-class format to specify the mold URI. If moldURI is specified but moldName is not specified, the mold name is assumed as default.</para>
      <para>In addition to DSP, JSP and any Servlet technologies, you can implement the org.zkoss.zk.util.ComponentRenderer interface, and then specify it in the moldURI attribute by starting with "class:". With this approach, the performance is the best.</para></sect3><sect3><title>name</title>
      <para>[Required]</para>
      <para>The component name. If an existent component is defined with the same name, the existent component is completely invisible in this page. If the by-class format is used, the attributes of the existent components are used to initialize the new components and then override with what are defined in this processing instruction.</para></sect3></sect2><sect2><title>The evaluator Directive</title>
      <para>&lt;?evaluator [name="..."] [class="..."] [import="..."]?&gt;</para>
      <para>It specifies how to evaluate XEL expressions.</para><sect3><title>name</title>
      <para>[optional][Default: none][Case insensitive]</para>
      <para>The name of the implementation used to evaluate the XEL expressions. There are two ways to specify the implementation. One is the name attribute. The other is the class attribute.</para>
      <para>For example, if you want to use MVEL<footnote>
            <para>MVEL is a powerful expression language. Refer to <ulink url="http://mvel.codehaus.org/">http://mvel.codehaus.org/</ulink> for more information.</para>
         </footnote>, you can specify the name as follows.</para>
      <programlisting>&lt;?evaluator name="mvel"?&gt;&#xD;&lt;window id="w" title="MVEL Demo"&gt;&#xD;    ${new org.zkoss.zul.Textbox().setParent(w)}    &#xD;&lt;/window&gt;&#xD;</programlisting>
      <para>Here are a list of built-in implementations.</para>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Class / Description</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>default</para>
               </entry>
               <entry>
                  <para>org.zkoss.xel.el.ELFactory</para>
                  <para>The default implementation. It is based on ZK Commons EL (zcommons-el.jar), which is a performance enhancement version of Apache Commons EL.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>mvel</para>
               </entry>
               <entry>
                  <para>org.zkoss.zkmax.xel.mvel.MVELFactory</para>
                  <para>The implementation based on MVEL, http://mvel.codehaus.org.</para>
                  <para>[available only if zkmax.jar is loaded]</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>ognl</para>
               </entry>
               <entry>
                  <para>org.zkoss.zkmax.xel.ognl.OGNLFactory</para>
                  <para>The implementation based on OGNL, <ulink url="http://www.ognl.org/">http://www.ognl.org</ulink>.</para>
                  <para>[available only if zkmax.jar is loaded]</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>commons-el</para>
               </entry>
               <entry>
                  <para>org.zkoss.zkmax.xel.el.ApacheELFactory</para>
                  <para>The implementation that is based on Apache Commons EL, org.apache.commons.el.ExpressionEvaluatorImpl.</para>
                  <para>[available only if zkmax.jar is loaded]</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>japser-el</para>
               </entry>
               <entry>
                  <para>org.zkoss.zkmax.xel.el21.ApacheELFactory</para>
                  <para>The implementation that is based on Apache JSP 2.1 EL, org.apache.el.ExpressionFactoryImpl.</para>
                  <para>[available only if zkmax.jar is loaded]</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para>You can provide additional implementations by use of the class attribute, as described in the following section. The class must implement the org.zkoss.xel.ExpressionFactory interface. Or, you can specify the following content in metainfo/xel/config.xml.</para>
      <programlisting>&lt;config&gt;&#xD;    &lt;xel-config&gt;    &#xD;        &lt;evaluator-name&gt;Super&lt;/evaluator-name&gt;&lt;!-- case insensitive --&gt;        &#xD;        &lt;evaluator-class&gt;my.SuperEvaluator&lt;/evaluator-class&gt;        &#xD;    &lt;/xel-config&gt;    &#xD;&lt;/config&gt;&#xD;</programlisting></sect3><sect3><title>class</title>
      <para>[Optional][Default: dependind on how xel-config is specified]</para>
      <para>The implementation used to evaluate the XEL expressions. In addition to the name attribute, you can specify the class directly. For example, you can use MVEL by specifying class as follows.</para>
      <programlisting>&lt;?evaluator class="org.zkoss.zkmax.xel.mvel.MVELFactory"?&gt;&#xD;&lt;window id="w" title="MVEL Demo"&gt;&#xD;    ${new org.zkoss.zul.Textbox().setParent(w)}    &#xD;&lt;/window&gt;&#xD;</programlisting></sect3><sect3><title>import</title>
      <para>[Optiona][Default: what are defined in taglib]</para>
      <para>Specifies a list of classes separated with comma to import for evaluating the expression in this page. For example, with MVEL:</para>
      <programlisting>&lt;?evaluator class="org.zkoss.zkmax.xel.mvel.MVELFactory"&#xD;import="org.zkoss.zul.Datebox,org.zkoss.zul.Combobox"?&gt;&#xD;&lt;window id="w" title="MVEL Demo"&gt;&#xD;    ${new Datebox().setParent(w)}    &#xD;</programlisting>
      <para>&lt;/window&gt;</para>
      <para>Notice that not all evaluators support the import of classes. For example, all EL-based the evaluators, including the system default one, don't support it. In other words, the import attribute is meaningless to them. Rather, you have to use the taglib directive to import functions.</para></sect3></sect2><sect2><title>The forward Directive</title>
      <para>&lt;?forward uri="..." [if="..."] [unless="..."]?&gt;</para>
      <para>It specifies the URI to forward the request to, and the condition to decide whether to forward. If the condition is satisfied or not specified, this page won't be rendered, and the request is, instead, forwarded to the URI specified in the uri attribute.</para>
      <para>Notes</para>
      <itemizedlist>
         <listitem>
            <para>Even if the forward is effective (i.e., ZK forwards the request to the specified URI), the initiators specified in the init directives will be called.</para>
         </listitem>
         <listitem>
            <para>The createComponents method of the Execution interface ignores the forward directives. In other words, the forward directives are evaluated only if the ZUML page is loaded directly.</para>
         </listitem>
      </itemizedlist><sect3><title>uri</title>
      <para>[required][EL expressions allowed]</para>
      <para>The URI of the page/servlet to forward to. It may be another ZUML page, a JSP page or any servlet.</para>
      <para>If an EL expression is specified and it is evaluated to an empty string, it is considered as no forwarding at all.</para></sect3><sect3><title>if</title>
      <para>[Optional][Default: true][EL expressions allowed]</para>
      <para>The condition to forward to the specified URI. If both if and unless are omitted, this page won't be evaluated and ZK always forwards the request to the specified URI.</para></sect3><sect3><title>unless</title>
      <para>[Optional][Default: false][EL expressions allowed]</para>
      <para>The condition not to forward to the specified URI. If both if and unless are omitted, this page won't be evaluated and ZK always forwards the request to the specified URI.</para></sect3></sect2><sect2><title>The import Directive</title>
      <para>&lt;?import uri="..."?&gt;&lt;?import uri="..." directives="..."?&gt;</para>
      <para>It imports the directives, such as component definitions (&lt;?component?&gt;) and initiators (&lt;?init?&gt;), defined in another ZUML page.</para>
      <para>A typical use is that you put a set of component definitions in one ZUML page, and then import it in other ZUML pages, such that they share the same set of component definitions, additional to the system default.</para>
      <programlisting>&lt;!-- special.zul: Common Definitions --&gt;&#xD;&lt;?init zscript="/WEB-INF/macros/special.zs"?&gt;&#xD;&lt;?component name="special" macroURI="/WEB-INF/macros/special.zuml" class="Special"?&gt;&#xD;&lt;?component name="another" macroURI="/WEB-INF/macros/another.zuml"?&gt;&#xD;</programlisting>
      <para>where the Special class is assumed to be defined in /WEB-INF/macros/special.zs.</para>
      <para>Then, other ZUML pages can share the same set of component definitions as follows.</para>
      <programlisting>&lt;?import uri="special.zul"?&gt;&#xD;...&#xD;&lt;special/&gt;&lt;!-- you can use the component defined in special.zul --&gt;&#xD;</programlisting>
      <para>Notes</para>
      <itemizedlist>
         <listitem>
            <para>Unlike other directives, the import directives must be at the topmost level, i.e., at the the same level as the root element.</para>
         </listitem>
         <listitem>
            <para>The imported directives in the imported page are also imported. For example, if A imports B and B imports C, then A imports both C and B component definitions. If there is a name conflict, A overrides B, while B overrides C.</para>
         </listitem>
         <listitem>
            <para>Once the directives are imported, they won't be changed until the importing page is change, no matter the imported page is changed or not.</para>
         </listitem>
      </itemizedlist><sect3><title>uri</title>
      <para>[Required]</para>
      <para>The URI of a ZUML page which the component definitions will be imported from.</para></sect3><sect3><title>directives</title>
      <para>[Optional]</para>
      <para>If the directives attribute is omitted, only the component and init directives are imported. If you want to import particular directives, you can specify a list of the names of the directives separated by comma. For example,</para>
      <programlisting>&lt;?import uri="/template/taglibs.zul" directives="taglib, xel-method"?&gt;&#xD;</programlisting>
      <para>The directives that can be imported include component, init, meta, taglib, variable-resolver, and xel-method. If you want to import them all, specify * to the directives attribute. Notice that meta implies both the meta and link directives.</para></sect3></sect2><sect2><title>The init Directive</title>
      <para>&lt;?init class="..." [arg0="..."] [arg1="..."] [arg2="..."] [arg3="..."]?&gt;</para>
      <para>&lt;?init zscript="..." [arg0="..."] [arg1="..."] [arg2="..."] [arg3="..."]?&gt;</para>
      <para>There are two formats. The first format is to specify a class that is used to do the application-specific initialization. The second format is to specify a zscript file to do the application-specific initialization.</para>
      <para>The initialization takes place before the page is evaluated and attached to a desktop. Thus, the getDesktop, getId and getTitle method will return null, when initializing. To retrieve the current desktop, you could use the org.zkoss.zk.ui.Execution interface.</para>
      <para>You could specify any number of the init directive. The specified class must implement the org.zkoss.zk.ui.util.Initator interface.</para>
      <programlisting>&lt;?init class="MyInit1"?&gt;&#xD;&lt;?init class="MyInit2"?&gt;&#xD;</programlisting><sect3><title>class</title>
      <para>[Optional]</para>
      <para>A class name that must implement the org.zkoss.zk.ui.util.Initator interface. Unlike the init directive, the class name cannot be the class that is defined in zscript codes.</para>
      <para>An instance of the specified class is constructed and its doInit method is called in the Page Initial phase (i.e., before the page is evaluated). The doFinally method is called after the page has been evaluated. The doCatch method is called if an exception occurs during the evaluation.</para>
      <para>Thus, you could also use it for cleanup and error handling.</para></sect3><sect3><title>zscript</title>
      <para>[Optional]</para>
      <para>A script file that will be evaluated in the Page Initial phase.</para></sect3><sect3><title>arg0, arg1...</title>
      <para>[Optional]</para>
      <para>You could specify any number of arguments. It will be passed to the doInit method if the first format is used, or as the args variable if the second format is used. Note: the first argument is arg0, the second is arg1 and follows.</para></sect3></sect2><sect2><title>The link and meta Directives</title>
      <para>&lt;?link [href="uri"] [name0="value0"] [name1="value1"] [name2="value2"]?&gt;&lt;?meta [name0="value0"] [name1="value1"] [name2="value2"]?&gt;</para>
      <para>These are so-called header elements in HTML. Currently only HTML-based clients (so-called browsers) support them.</para>
      <para>Developers can specify whatever attributes with these header directives. ZK only encodes the URI of the href attribute (by use of the encodeURL method of the Executions class). ZK generates all other attributes directly to the client.</para>
      <para>Notice that these header directives are effective only for the main ZUL page. In other words, they are ignored if a page is included by another pages or servlets. Also, they are ignored if the page is a zhtml file.</para>
      <programlisting>&lt;?link rel="alternate" type="application/rss+xml" title="RSS feed"&#xD;href="/rssfeed.php"?&gt;&lt;?link rel="shortcut icon" type="image/x-icon" href="/favicon.ico"?&gt;&#xD;&lt;?link rel="stylesheet" type="text/css" href="~./zul/css/ext.css.dsp"?&gt;&#xD;&#xD;&lt;window title="My App"&gt;&#xD;    My content    &#xD;&lt;/window&gt;&#xD;</programlisting></sect2><sect2><title>The page Directive</title>
      <para>&lt;?page [id="..."] [title="..."] [style="..."] [cacheable="false|true"] [language="xul/html"] [zscriptLanguage="Java"] [contentType="text/html;charset=UTF-8"] [docType="tag PUBLIC &amp;quot;doctype name&amp;quot; &amp;quot;doctype UI&amp;quot;"] [xml="version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;"] [complete="true|false"]?&gt;</para>
      <para>It specifies how a page shall be handled. The id and title arguments are the two most important ones.</para><sect3><title>cacheable</title>
      <para>[Optional][Default: false if Ajax devices, true if XML and MIL devices]</para>
      <para>It specifies whether the client can cache the output.</para>
      <para>Note: Browsers, such as Firefox and IE, don't handle the cache of DHTML correctly, so it is not safe to specify cacheable with true for Ajax devices.</para></sect3><sect3><title>complete</title>
      <para>[Optional][Default: false]</para>
      <para>It specifies that this page is a complete page. By complete we mean the page has everything that the client expects. For example, if the client is a HTML browser, then a complete page will generate all necessary HTML tags, such as &lt;html&gt;, &lt;head&gt; and &lt;body&gt;.</para>
      <para>By default (false), a ZK page is assumed to be complete if and only if it is not included by other page. In other words, if a ZK page is included by other page, ZK will generate &lt;div&gt; (if the client is a HTML browser) to enclose the output of the (incomplete) ZK page.</para>
      <para>If you have a ZK page that contains a complete HTML page and is included by other page, you have to specify true for this option. For example, the includer is nothing but including another page:</para>
      <programlisting>//includer.jsp&#xD;&lt;jsp:include page="includee.zhtml"/&gt;&#xD;</programlisting>
      <para>And, the included page contains a complete HTML page:</para>
      <programlisting>&lt;?page complete="true"?&gt;&#xD;    &lt;html xmlns="http://www.zkoss.org/2005/zk/native"&gt;&lt;head&gt;    &#xD;        &lt;title&gt;My Title&lt;/tile&gt;        &#xD;    &lt;/head&gt;    &#xD;    &lt;body&gt;    &#xD;        My Content        &#xD;</programlisting>
      <para>&lt;/body&gt;</para>
      <para>&lt;/html&gt;</para></sect3><sect3><title>contentType</title>
      <para>[Optional][Default: depends on the device]</para>
      <para>It specifies the content type. If not specified, it depends on the device. For Ajax devices, it is text/html;charset=UTF-8. For XML and MIL devices, it is text/xml;charset=UTF-8.</para>
      <para>Application developers rarely need to change it, unless for XML devices.</para></sect3><sect3><title>docType</title>
      <para>[Optional][Default: depends on the device]</para>
      <para>It specifies the DOCTYPE (the root tag and DTD) that will be generated to the output directly. This directive is mainly used by XML devices. You rarely need to specify the DOCTYPE directive for Ajax or MIL devices. For example,</para>
      <programlisting>&lt;?DOCTYPE value="svg PUBLIC &amp;quot;-//W3C//DTD SVG 1.1//EN&amp;quot; &amp;quot;http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd&amp;quot;"?&gt;&#xD;</programlisting>
      <para>will cause the output to be generated with the following snippet</para>
      <programlisting>&lt;!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd""&gt;&#xD;</programlisting>
      <para>Notice that the &lt;!DOCTYPE...&gt; specified in a ZUML page is processed by ZK Loader. It is not part of the output.</para></sect3><sect3><title>id</title>
      <para>[Optional][Default: generated automatically][EL allowed]</para>
      <para>Specifies the identifier of the page, such that we can retrieve it back. If an alphabetical identifier is assigned, it will be available to scripts (aka., zscript) and EL expressions embedded in ZUML pages.</para>
      <para>&lt;?page id="${param.id}"?&gt;</para></sect3><sect3><title>language</title>
      <para>[Optional][Default: depending on the extension][Allowed values: xul/html | xhtml]</para>
      <para>Specifies the markup language for this page. The markup language determines the default component set. Currently, it supports xul/html and xhtml.</para>
      <para>Note: You can place the page directive in any location of a XML document, but the language attribute is meaningful only if the directive is located at the topmost level.</para></sect3><sect3><title>style</title>
      <para>[Optional][Default: width:100%][EL allowed]</para>
      <para>Specifies the CSS style used to render the page. If not specified, it depends on the mold. The default mold uses width:100% as the default value.</para>
      <programlisting>&lt;?page style="width:100%;height:100%"?&gt;&#xD;</programlisting></sect3><sect3><title>title</title>
      <para>[Optional][Default: none][EL allowed]</para>
      <para>Specifies the page title that will be shown as the title of the browser.</para>
      <para>It can be changed dynamically by calling the setTitle method in the org.zkoss.zk.ui.Page interface.</para>
      <programlisting>&lt;?page title="${param.title}"?&gt;&#xD;</programlisting></sect3><sect3><title>xml</title>
      <para>[Optional][Default: none]</para>
      <para>Specifies the xml processing instruction (i.e., &lt;?xml?&gt;) that will be generated to the output. Currently only XML devices support this option.</para>
      <para>For example,</para>
      <programlisting>&lt;?page xml="version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;"?&gt;&#xD;</programlisting>
      <para>will generate the following as the first line of the output</para>
      <para>&lt;?xml version="1.0" encoding="UTF-8"?&gt;</para></sect3><sect3><title>zscriptLanguage</title>
      <para>[Optional][Default: Java][Allowed values: Java | JavaScript | Ruby | Groovy]</para>
      <para>Specifies the default scripting language, which is assumed if an zscript element doesn't specify any scripting language explicitly.</para>
      <programlisting>&lt;?page zscriptLanguage="JavaScript"?&gt;&#xD;&#xD;&lt;zscript&gt;&#xD;    var m = round(box.value); //JavaScript is assumed.    &#xD;&lt;/zscript&gt;&#xD;</programlisting>
      <para>If this option is omitted, Java is assumed. Currently ZK supports four different languages: Java, JavaScript, Ruby and Groovy. This option is case insensitive.</para>
      <para>Note: Deployers can extend the number of supported scripting languages. Refer to the How to Support More Scripting Language section in the Developer's Guide.</para></sect3></sect2><sect2><title>The root-attributes Directive</title>
      <para>&lt;?root-attributes any-name1="any-value2" any-name2="any-value2"?&gt;</para>
      <para>It specifies the additional attributes for the root element of the generated output, which depends on the device types.</para>
      <para>Currently, only Ajax devices support this feature and the root element is the html tag. In other words, the attributes specified in the root-attribute directives will become the attributes of the html element of the generated output. For example,</para>
      <programlisting>&lt;?root-attributes xmlns:v="urn:schemas-microsoft-com:vml"?&gt;&#xD;</programlisting>
      <para>will cause the HTML output to be generated with the following snippet</para>
      <programlisting>&lt;html xmlns="http://www.w3.org/1999/xhtml"xmlns:v="urn:schemas-microsoft-com:vml"&gt;&#xD;</programlisting>
      <para>Note: xmlns="<ulink url="http://www.w3.org/1999/xhtml">http://www.w3.org/1999/xhtml</ulink>" is always generated.</para>
      <para>Note: If the value is specified with an EL expression and it is evaluated to null, the corresponding attribute won't be generated.</para><sect3><title>any-name="any-value"</title>
      <para>Any numbers of names and values are allowed. The value could contain EL expressions.</para></sect3></sect2><sect2><title>The taglib Directive</title>
      <para>&lt;?tablib uri="myURI" prefix="my"?&gt;</para>
      <para>This directive is used to load a taglib file, which defines a set of EL functions. The format of a taglib file is the same as that of JSP taglib files.</para>
      <para>In the following example, we loads functions defined in the built-in TLD files identified as http://www.zkoss.org/dsp/web/core and then use one of these function called l.</para>
      <programlisting>&lt;?taglib uri="http://www.zkoss.org/dsp/web/core" prefix="c"?&gt;&#xD;&lt;window title="${c:l('my.title')}"&gt;&#xD;...&#xD;&lt;/window&gt;&#xD;</programlisting>
      <para>Tip: ZK searches all TLD files defined in the /metainfo/tld/config.xml file from the classpath. If you want ZK to load your custom TLD files, add them to class path and then specify the following content in the /metainfo/tld/config.xml file. &lt;taglib&gt;&lt;taglib-uri&gt;http://your-domain.com/your-path&lt;/taglib-uri&gt;&lt;taglib-location&gt;/the/path/of/your/tld/file&lt;/taglib-location&gt;&lt;/taglib&gt;</para>
      <para>If you to load a TLD file from your Web application, you can specify the path as follows.</para>
      <programlisting>&lt;?taglib uri="/WEB-INF/tld/my.tld" prefix="my"?&gt;&#xD;</programlisting><sect3><title>uri</title>
      <para>[Required][EL is not allowed]</para>
      <para>A URL of the taglib file. Unlike other URL and URI, it doesn't interpret ~ or * specially. And, the page and the taglib files it references must be in the same Web application.</para></sect3><sect3><title>prefix</title>
      <para>[Required]</para>
      <para>A prefix used to identify functions defined in this taglib file. The prefix could be any non-empty string.</para></sect3></sect2><sect2><title>The variable-resolver Directive</title>
      <para>&lt;?variable-resolver class="..."  [arg0="..."] [arg1="..."] [arg2="..."] [arg3="..."]?&gt;</para>
      <para>Specifies the variable resolver that will be used by the zscript interpreter to resolve unknown variables. The specified class must implement the org.zkoss.xel.VariableResolver interface.</para>
      <para>You can specify multiple variable resolvers with multiple variable-resolver directives. The later declared one has higher priority.</para>
      <para>Notice that the variable-resolver directives are evaluated before the init directives, so the zscript codes referenced by the init directives are affected by the variable resolver.</para>
      <para>The following is an example when using ZK with the Spring framework. It resolves Java Beans declared in the Spring framework, such that you access them directly.</para>
      <programlisting>&lt;?variable-resolver class="org.zkoss.zkplus.spring.DelegatingVariableResolver"?&gt;&#xD;</programlisting><sect3><title>class</title>
      <para>[Optional]</para>
      <para>A class name that must implement the org.zkoss.xel.VariableResolver interface. Unlike the init directive, the class name cannot be the class that is defined in zscript codes.</para></sect3><sect3><title>arg0, arg1...</title>
      <para>[Optional]</para>
      <para>You could specify any number of arguments. If specified, arg0 will be passed as the first argument of the constructor, arg1 as the second argument, and so on. Of course, the implementation must have a compatible constructor. If no argument is specified, the default constructor is assumed.</para></sect3></sect2><sect2><title>The xel-method Directive</title>
      <para>&lt;?xel-method prefix="..." name="..." class="..."signature="..."?&gt;</para>
      <para>Specifies a method that shall be imported by the EL evaluator. For example,</para>
      <programlisting>&lt;?xel-method prefix="c" name="forName"class="java.lang.Class"signature="java.lang.Class forName(java.lang.String)"?&gt;&lt;textbox value="${c:forName('java.util.List')}"/&gt;        &#xD;</programlisting><sect3><title>prefix</title>
      <para>[Required]</para>
      <para>Specifies the prefix used to identify this method.</para></sect3><sect3><title>name</title>
      <para>[Required]</para>
      <para>Specifies the name used to identify this method. The full name is "prefix:name".</para></sect3><sect3><title>class</title>
      <para>[Required]</para>
      <para>Specifies the class that the method is defined in.</para></sect3><sect3><title>signature</title>
      <para>[Required]</para>
      <para>The signature of the method. Note: the method must be public static.</para></sect3></sect2></sect1><sect1><title>ZK Elements</title>
      <para>ZK elements are special XML elements that are used to control ZUML pages other than creating components.</para><sect2><title>The XML Namespace</title>
      <para>If there is name conflicts, you could specify the XML name space:</para>
      <para>http://www.zkoss.org/2005/zk</para>
      <programlisting>&lt;zk:attribute xmlns:zk="http://www.zkoss.org/2005/zk"&gt;&#xD;...&#xD;</programlisting></sect2><sect2><title>The attribute Element</title>
      <para>&lt;attribute name="myName" [trim="true|false"]&gt;myValue&lt;/attribute&gt;</para>
      <para>It defines a XML attribute of the enclosing element. The content of the element is the attribute value, while the name attribute specifies the attribute name. It is useful if the value of an attribute is sophisticated, or the attribute is conditional.</para>
      <programlisting>&lt;button label="Hi"&gt;&#xD;&lt;attribute name="onClick"&gt;alert("Hi")&lt;/attribute&gt;&#xD;&lt;/button&gt;&#xD;</programlisting>
      <para>It is equivalent to</para>
      <programlisting>&lt;button label="Hi" onClick="alert(&amp;quot;Hi&amp;quot;)"/&gt;&#xD;</programlisting>
      <para>Another example:</para>
      <programlisting>&lt;button&gt;&#xD;&lt;attribute name="label" if="${param.happy}"&gt;Hello World!&lt;/attribute&gt;&#xD;&lt;/button&gt;&#xD;</programlisting>
      <para>In addition, you can specify a XML fragment as the value of the attribute. The XML fragment is so-called the native content.</para>
      <programlisting>&lt;html&gt;&#xD;    &lt;attribute name="content"&gt;    &#xD;        &lt;ol&gt;        &#xD;            &lt;li forEach="${values}"&gt;${each}&lt;/li&gt;            &#xD;</programlisting>
      <para>&lt;/ol&gt;</para>
      <para>&lt;/attribute&gt;</para>
      <para>&lt;/html&gt;</para>
      <para>where ol and li are part of the native content. They are not ZK components. They will be eventually converted to a String instance and assigned to the specified attribute. If values has three elements, the above example is equivalent to the following:</para>
      <programlisting>&lt;html&gt;&#xD;    &lt;attribute name="content"&gt;&lt;![CDATA[    &#xD;        &lt;ol&gt;        &#xD;            &lt;li&gt;${values[0]}&lt;/li&gt;            &#xD;            &lt;li&gt;${values[1]}&lt;/li&gt;            &#xD;            &lt;li&gt;${values[2]}&lt;/li&gt;            &#xD;        &lt;/ol&gt;        &#xD;    ]]&gt;&lt;/attribute&gt;    &#xD;&lt;/html&gt;&#xD;</programlisting><sect3><title>name</title>
      <para>[Required]</para>
      <para>Specifies the attribute name.</para></sect3><sect3><title>trim</title>
      <para>[Optional][Default: false]</para>
      <para>Specifies whether to omit the leading and trailing whitespaces of the attribute value.</para></sect3><sect3><title>if</title>
      <para>[Optional][Default: true]</para>
      <para>Specifies the condition to evaluate this element. This element is ignored if the value specified to this attribute is evaluated to false.</para></sect3><sect3><title>unless</title>
      <para>[Optional][Default: false]</para>
      <para>Specifies the condition not to evaluate this element. This element is ignored if the value specified to this attribute is evaluated to true.</para></sect3></sect2><sect2><title>The custom-attributes Element</title>
      <para>&lt;custom-attributes [scope="component|space|page|desktop|session|application] attr1="value1" [attr2="value2"...]/&gt;</para>
      <para>It defines a set of custom attributes of the specified scope. You could specify as many as attributes you want. These attributes can be retrieved by the getAttribute method of the Component interface with the specified scope.</para>
      <programlisting>&lt;custom-attributes cd="${param.cd}" a.b="ab"/&gt;&#xD;</programlisting><sect3><title>scope</title>
      <para>[optional][Default: component]</para>
      <para>Specifies the scope to which the custom attributes are associated. If not specified, the component enclosing this element is the default scope to use.</para></sect3><sect3><title>composite</title>
      <para>[Optional][Default: none]</para>
      <para>Specifies the format of the value. It could be none, list or map.</para>
      <para>By default, the value is assigned to the attribute directly after evaluating EL expressions, if any. For example, "apple, ${more}" is evaluated to "apple, orange", if more is "orange", and assigned to the attribute.</para>
      <para>If you want to specify a list of values, you can specify the composite attribute with list as follows.</para>
      <programlisting>&lt;custom-attributes simple="apple, ${more}" composite="list"/&gt;&#xD;</programlisting>
      <para>Then, it is converted to a list with two elements. The first element is "apple" and the second "orange".</para>
      <para>If you want to specify a map of values, you can specify the composite attribute with map as follows.</para>
      <programlisting>&lt;custom-attributes simple="juice=apple, flavor=${more}" composite="map"/&gt;&#xD;</programlisting>
      <para>Then, it is converted to a map with two entries. The first entry is ("juice", "apple") and the second ("flavor", "orange").</para></sect3><sect3><title>if</title>
      <para>[Optional][Default: true]</para>
      <para>Specifies the condition to evaluate this element. This element is ignored if the value specified to this attribute is evaluated to false.</para></sect3><sect3><title>unless</title>
      <para>[Optional][Default: false]</para>
      <para>Specifies the condition not to evaluate this element. This element is ignored if the value specified to this attribute is evaluated to true.</para></sect3></sect2><sect2><title>The variables Element</title>
      <para>&lt;variables [local="false|true] var1="value1" [var2="value2"...]/&gt;</para>
      <para>It defines a set of variables for the ID space it belongs. It is equivalent to the setVariable method of Component, if it has a parent component, and Page, if it is declared at the page level.</para>
      <para>You could specify as many as variables you want. These variables are stored to the namespace of the ID space it belongs. Thus, they can be accessible by the interpreters and EL expressions.</para>
      <programlisting>&lt;variables cd="${param.cd}" less="more"/&gt;&#xD;</programlisting><sect3><title>local</title>
      <para>[optional][Default: false]</para>
      <para>Specifies whether to store the variable always at the current ID space. By default, it is false. It means ZK will check the existence of any variable with the same name by looking up the current ID space, the parent ID space, and parent's parent, and so on. If found, the variable's value is replaced with the value specified here. If not, a local variable is created. If true is specified, it doesn't look up any parent ID space.</para></sect3><sect3><title>composite</title>
      <para>[Optional][Default: none]</para>
      <para>Specifies the format of the value. It could be none, list or map.</para>
      <para>By default, the value is assigned to the variable directly after evaluating EL expressions, if any. For example, "apple, ${more}" is evaluated to "apple, orange", if more is "orange", and assigned to the variable.</para>
      <para>If you want to specify a list of values, you can specify the composite attribute with list as follows.</para>
      <programlisting>&lt;variables simple="apple, ${more}" composite="list"/&gt;&#xD;</programlisting>
      <para>Then, it is converted to a list with two elements. The first element is "apple" and the second "orange".</para>
      <para>If you want to specify a map of values, you can specify the composite attribute with map as follows.</para>
      <programlisting>&lt;variables simple="juice=apple, flavor=${more}" composite="map"/&gt;&#xD;</programlisting>
      <para>Then, it is converted to a map with two entries. The first entry is ("juice", "apple") and the second ("flavor", "orange").</para></sect3><sect3><title>if</title>
      <para>[Optional][Default: true]</para>
      <para>Specifies the condition to evaluate this element. This element is ignored if the value specified to this attribute is evaluated to false.</para></sect3><sect3><title>unless</title>
      <para>[Optional][Default: false]</para>
      <para>Specifies the condition not to evaluate this element. This element is ignored if the value specified to this attribute is evaluated to true.</para></sect3></sect2><sect2><title>The zk Element</title>
      <para>&lt;zk&gt;...&lt;/zk&gt;</para>
      <para>It is a special element used to aggregate other components. Unlike a real component (say, hbox or div), it is not part of the component tree being created. In other words, it doesn't represent any component. For example,</para>
      <para>&lt;window&gt;&lt;zk&gt;&lt;textbox/&gt;&lt;textbox/&gt;&lt;/zk&gt;&lt;/window&gt;</para>
      <para>is equivalent to</para>
      <programlisting>&lt;window&gt;&#xD;        &lt;textbox/&gt;&lt;textbox/&gt;        &#xD;&lt;/window&gt;&#xD;</programlisting>
      <para>The main use is to represent multiple root elements in XML format.</para>
      <programlisting>&lt;?page title="Multiple Root"?&gt;&#xD;&lt;zk&gt;&#xD;    &lt;window title="First"&gt;    &#xD;    ...    &#xD;    &lt;/window&gt;    &#xD;    &lt;window title="Second" if="${param.secondRequired}"&gt;    &#xD;    ...    &#xD;    &lt;/window&gt;    &#xD;&lt;/zk&gt;&#xD;</programlisting>
      <para>The other use is to iterate over versatile components.</para>
      <programlisting>&lt;window&gt;&#xD;    &lt;zk forEach="${mycols}"&gt;    &#xD;        &lt;textbox if="${each.useText}"/&gt;        &#xD;        &lt;datebox if="${each.useDate}"/&gt;        &#xD;        &lt;combobox if="${each.useCombo}"/&gt;        &#xD;    &lt;/zk&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>if</title>
      <para>[Optional][Default: true]</para>
      <para>Specifies the condition to evaluate this element. This element is ignored if the value specified to this attribute is evaluated to false.</para></sect3><sect3><title>unless</title>
      <para>[Optional][Default: false]</para>
      <para>Specifies the condition not to evaluate this element. This element is ignored if the value specified to this attribute is evaluated to true.</para></sect3><sect3><title>forEach</title>
      <para>[Optional][Default: ignored]</para>
      <para>It specifies a collection of objects, such that the zk element will be evaluated repeatedly against each object in the collection. If not specified or empty, this attribute is ignored. If non-collection object is specified, it is evaluated only once as if a single-element collection is specified.</para></sect3><sect3><title>forEachBegin</title>
      <para>[Optional][Default: 0]</para>
      <para>It is used with the forEach attribute to specify the starting offset when iterating a collection of objects. If not specified, it iterates from the first element, i.e., 0 is assumed.</para></sect3><sect3><title>forEachBegin</title>
      <para>[Optional][Default: 0]</para>
      <para>It is used with the forEach attribute to specify the index (starting from 0) that the iteration shall begin at. If not specified, the iteration begins at the first element, i.e., 0 is assumed.</para>
      <para>If forEachBegin is greater than or equals to the number of elements, no iteration is performed.</para></sect3><sect3><title>forEachEnd</title>
      <para>[Optional][Default: the last element]</para>
      <para>It is used with the forEach attribute to specify the index (starting from 0) the iteration shall ends at (inclusive). If not specified, the iterations ends at the last element.</para>
      <para>If forEachEnd is greater than or equals to the number of elements, the iteration ends at the last element.</para></sect3><sect3><title>switch</title>
      <para>[Optional][Default: none]</para>
      <para>Provide the context for mutually exclusive evaluation. The value specified in this attribute is called the switch condition.</para>
      <programlisting>&lt;zk swtich="${condition}"/&gt;&#xD;</programlisting>
      <para>The only allowed children are the zk elements.</para></sect3><sect3><title>case</title>
      <para>[Optional][Default: none]</para>
      <para>Provides an alternative within the switch evaluation.</para>
      <programlisting>&lt;zk case="apple"/&gt;&#xD;</programlisting>
      <para>If the value is a string starting and ending with slash, such as /a[p]*/, it is considered as a regular expression, which is used to match the switch condition.</para>
      <programlisting>&lt;zk case="/a[a-z]*/"/&gt;&#xD;</programlisting>
      <para>You can specify multiple cases by separating them with comma.</para>
      <programlisting>&lt;zk case="apple, ${special}"/&gt;&#xD;</programlisting></sect3><sect3><title>choose</title>
      <para>[Optional][Default: none]</para>
      <para>Provide the context for mutually exclusive evaluation.</para>
      <programlisting>&lt;zk choose=""&gt;&#xD;</programlisting>
      <para>The only allowed children are the zk elements.</para></sect3><sect3><title>when</title>
      <para>[Optional][Default: none]</para>
      <para>Provides an alternative within the choose evaluation.</para>
      <programlisting>&lt;zk when="${fruit == 'apple'}"&gt;&#xD;</programlisting>
      <para>It is evaluated if the condition matches.</para></sect3></sect2><sect2><title>The zscript Element</title>
      <para>&lt;zscript [language="Java|JavaScript|Ruby|Groovy"]&gt;Scripting codes&lt;/zscript&gt;&lt;zscript src="uri" [language="Java|JavaScript|Ruby|Groovy"]/&gt;</para>
      <para>It defines a piece of scripting codes that will be interpreted when the page is evaluated. The language of the scripting codes is, by default, Java. You can select a different language by use the language attribute<footnote>
            <para>Furthermore, you can use the page directive to change the default scripting language other than Java.</para>
         </footnote>.</para>
      <para>The zscript element has two formats as shown above. The first format is used to embed the scripting codes directly in the page. The second format is used to reference an external file that contains the scripting codes.</para>
      <programlisting>&lt;zscript&gt;&#xD;alert("Hi");&#xD;&lt;/zscript&gt;&#xD;&lt;zscript src="/codes/my.bs"/&gt;&#xD;</programlisting>
      <para>Like other ZK elements, it is not a component but a special XML element.</para><sect3><title>src</title>
      <para>[Optional][Default: none]</para>
      <para>Specifies the URI of the file containing the scripting codes. If specified, the scripting codes will be loaded as if they are embedded directly.</para>
      <para>Note: the file shall contain the source codes in the selected scripting language. The encoding must be UTF-8. Don't specify a class file (aka. byte codes).</para>
      <para>Like other URL and URI, it has several characteristics as follows.</para>
      <orderedlist>
         <listitem>
            <para>It is relative to the servlet context path (aka., the getContextPath method from the javax.servlet.http.HttpServletRequest interface). In other words, ZK will prefix it with the servlet context automatically.</para>
         </listitem>
         <listitem>
            <para>It resolves "~" to other Web application (aka., different ServletContext). Notice that Web server administrator might disable Web applications from peeking other's content<footnote>
                  <para>Refer to the getContext meth from the javax.servlet.ServletContext interface.</para>
               </footnote>.</para>
         </listitem>
         <listitem>
            <para>It accepts "*" for loading browser and Locale dependent style sheet.</para>
         </listitem>
      </orderedlist>
      <para>The algorithm to resolve "*" is as follows.</para>
      <itemizedlist>
         <listitem>
            <para>If there is one "*" is specified in an URL or URI such as /my*.css, then "*" will be replaced with a proper Locale depending on the preferences of user's browser.For example, user's preferences is de_DE, then ZK searches /my_de_DE.css, /my_de.css, and /my.css one-by-one from your Web site, until any of them is found. If none of them is found, /my.css is still used.</para>
         </listitem>
         <listitem>
            <para>If two or more "*" are specified in an URL or URI such as "/my*/lang*.css", then the first "*" will be replaced with "ie" for Internet Explorer and "moz" for other browsers<footnote>
                  <para>In the future editions, we will use different codes for browsers other than IE and FF.</para>
               </footnote>. If the last "*" will be replaced with a proper Locale as described above.</para>
         </listitem>
         <listitem>
            <para>All other "*" are ignored.</para>
         </listitem>
      </itemizedlist></sect3><sect3><title>language</title>
      <para>[Optional][Default: the page's default scripting language][Allowed Values: Java | JavaScript | Ruby | Groovy]</para>
      <para>It specifies the scripting language which the scripting codes are written in.</para></sect3><sect3><title>deferred</title>
      <para>[Optional][Default: false]</para>
      <para>Specifies whether to defer the evaluation of this element until the first non-deferred zscript codes of the same language has to be evaluated. It is used to defer the loading of the interpreter and then speed up the loading of a ZUML page. For example, if all zscript elements are deferred, they are evaluated only when the first event listened by a handler implemented in zscript is received.</para>
      <para>Refer to the How to Defer the Evaluation section in the Developer's Guide.</para></sect3><sect3><title>if</title>
      <para>[Optional][Default: true]</para>
      <para>Specifies the condition to evaluate this element. This element is ignored if the value specified to this attribute is evaluated to false.</para></sect3><sect3><title>unless</title>
      <para>[Optional][Default: false]</para>
      <para>Specifies the condition not to evaluate this element. This element is ignored if the value specified to this attribute is evaluated to true.</para></sect3></sect2></sect1><sect1><title>ZK Attributes</title>
      <para>ZK attributes are used to control the associated element, other than initializing the data member.</para><sect2><title>The apply Attribute</title>
      <para>apply="a-class-name"apply="class1, class2,..."apply="${EL_returns_a_class_or_a_collection_of_classes}"apply="${EL_returns_an_instance_or_a_collection_of_Composer_instances}"</para>
      <para>It specifies a class, a collection of classes that are used to initialize the component. The class must implement the org.zkoss.zk.util.Composer interface. And then, you can do the initialization in the doAfterCompose method, since it is called after the component and all its children are instantiated.</para>
      <programlisting>&lt;window apply="MyComposer"/&gt;&#xD;</programlisting>
      <para>In addition, you specify a Composer instance, or a collection of Composer instances by use of EL expressions.</para>
      <para>Note: the EL expressions are, if specified, evaluated before the component is instantiated. So you cannot reference to the component. Moreover, the self variable references to the parent component, if any, or the current page, if it is the root component, in the EL expressions specified in this attribute.</para>
      <para>If you want more control such as handling the exception, you can also implement the org.zkoss.zk.util.ComposerExt interface. </para></sect2><sect2><title>The forEach Attribute</title>
      <para>forEach="${an-EL-expr}"forEach="an-value, ${an-EL-expr}"</para>
      <para>There are two formats. First, you specify a value without comma. The value is usually a collection of objects, such that the associated element will be evaluated repeatedly against each object in the collection. If not specified or empty, this attribute is ignored. If non-collection object is specified, it is evaluated only once as if a single-element collection is specified.</para>
      <para>Second, you can specify a list of values by separating them with comma. Then, the associated element will be evaluated repeatedly against each value in the list.</para>
      <para>For each iteration, two variables, each and forEachStatus, are assigned automatically to let developers control how to evaluate the associated element.</para>
      <programlisting>&lt;hbox&gt;&#xD;&lt;zscript&gt;&#xD;classes = new String[] {"College", "Graduate"};&#xD;grades = new Object[] {&#xD;new String[] {"Best", "Better"}, new String[] {"A++", "A+", "A"}&#xD;};&#xD;&lt;/zscript&gt;&#xD;&lt;listbox width="200px" forEach="${classes}"&gt;&#xD;&lt;listhead&gt;&#xD;&lt;listheader label="${each}"/&gt;&#xD;&lt;/listhead&gt;&#xD;&lt;listitem label="${forEachStatus.previous.each}: ${each}"&#xD;forEach="${grades[forEachStatus.index]}"/&gt;&#xD;&lt;/listbox&gt;&#xD;&lt;/hbox&gt;&#xD;</programlisting>
      <para>
         <graphic fileref="images/foreach-example.PNG">2
			
		</graphic>
      </para></sect2><sect2><title>The forEachBegin Attribute</title>
      <para>forEachBegin="${an-EL-expr}"</para>
      <para>It is used with the forEach attribute to specify the index (starting from 0) that the iteration shall begin at. If not specified, the iteration begins at the first element, i.e., 0 is assumed.</para>
      <para>If forEachBegin is greater than or equals to the number of elements, no iteration is performed.</para>
      <para>Note: forEachStatus.index always starts from 0, no matter what forEachBegin is.</para></sect2><sect2><title>The forEachEnd Attribute</title>
      <para>forEachEnd="${an-EL-expr}"</para>
      <para>It is used with the forEach attribute to specify the index (starting from 0) the iteration shall ends at (inclusive). If not specified, the iterations ends at the last element.</para>
      <para>If forEachEnd is greater than or equals to the number of elements, the iteration ends at the last element.</para></sect2><sect2><title>The forward Attribute</title>
      <para>forward="orginalEvent=targetId1/targetId2.targetEvent"forward="orginalEvent=targetId1/targetId2.targetEvent(eventData)"forward="originalEvent=${el-target}.targetEvent(${el-eventdata})"forward="targetEvent"</para>
      <para>It is used to forward an event, that is targeting a specific component, to another component in another event name. It is called the forward condition.</para>
      <para>The forward event is an instance of the org.zkoss.zk.ui.event.ForwardEvent class. you can invoke the getOrigin method to retrieve the original event.</para>
      <para>The original event is optional. If it is omitted, onClick is assumed. Similarly, the target ID is also optional. If omitted, the space owner is assumed.</para>
      <para>The data specified in the parenthesis is the application-specific data, which can be retrieved by calling the getData method.</para>
      <programlisting>&lt;button forward="onCancel(abort)"/&gt;&lt;!-- "abort" is passed --&gt;&#xD;</programlisting>
      <para>&lt;button forward="onPrint(${inf})"/&gt;&lt;!-- the object returned by ${inf} is passed --&gt;</para>
      <para>If you want to forward several events, you can specify these conditions in the forward attribute by separating them with the comma (,):</para>
      <para>&lt;textbox forward="onChanging=onUpdating, onChange=some.onUpdate"/&gt;</para>
      <para>The target component and the event data can be specified in EL expressions, while the event names cannot.</para></sect2><sect2><title>The fulfill Attribute</title>
      <para>fulfill="event-name"fulfill="target-id.event-name"fulfill="id1/id2/id3.event-name"fulfill="${el-expr}.event-name"</para>
      <para>It is used to specify when to create the child components. By default (i.e., fulfill is not specified), the child components are created right after its parent component, at the time the ZUML page is loaded.</para>
      <para>If you want to defer the creation of the child components, you can specify the condition with the fulfill attribute. The condition consists of the event name and, optionally, the target component's identifier or path. It means that the child elements won't be processed, until the event is received by, if specified, the target component. If the identifier is omitted, the same component is assumed.</para>
      <para>If an EL expression is specified, it must return a component, an identifier or a path.</para><sect3><title>The onFulfill Event</title>
      <para>After ZK applies the fulfill condition, i.e., creates all descendant components, it fires the onFulfill event with an instance of org.zkoss.zk.ui.event.FulfillEvent to notify the component for further processing if any.</para>
      <para>For example, if you use the wireVariables method of the org.zkoss.zk.ui.Components class, you might have to call wireVariables again to wire the new components in the onFulfill event.</para>
      <programlisting>&lt;div fulfill="b1.onClick, b2.onOpen"&#xD;onFulfill="Components.wireVariables(self, controller)"&gt;&#xD;</programlisting>
      <para>...</para>
      <para>&lt;/div&gt;</para></sect3></sect2><sect2><title>The if Attribute</title>
      <para>if="${an-EL-expr}"</para>
      <para>It specified the condition to evaluate the associated element. In other words, the associated element and all its child elements are ignored, if the condition is evaluated to false.</para></sect2><sect2><title>The unless Attribute</title>
      <para>unless="${an-EL-expr}"</para>
      <para>It specified the condition not to evaluate the associated element. In other words, the associated element and all its child elements are ignored, if the condition is evaluated to true.</para></sect2><sect2><title>The use Attribute</title>
      <para>use="a-class-name"use="${EL_returns_a_class_or_a_class_name}"</para>
      <para>It specifies a class to create a component instead of the default one. In the following example, MyWindow is used instead of the default class, org.zkoss.zul.html.Window.</para>
      <programlisting>&lt;window use="MyWindow"/&gt;&#xD;</programlisting></sect2></sect1></chapter>
   <chapter>
      <title>3. EL Expressions</title>
      <para>This chapter describes the details about applying EL expressions to ZUML pages.</para><sect1><title>Overview</title>
      <para>EL expressions use the syntax ${expr}. For example,</para>
      <programlisting>&lt;element attr1=”${bean.property}”.../&gt;&#xD;${map[entry]}&#xD;&lt;another-element&gt;${3+counter} is ${empty map}&lt;/another-element&gt;&#xD;</programlisting>
      <para>When an EL expression is used as an attribute value, it could return any kind of objects as long as the component accepts it. For example, the following expression will be evaluated to a Boolean object.</para>
      <programlisting>&lt;window if="${some &gt; 10}"&gt;&#xD;</programlisting><sect2><title>Using EL Expressions</title>
      <para>EL expressions can be used </para>
      <itemizedlist>
         <listitem>
            <para>In static text</para>
         </listitem>
         <listitem>
            <para>In any attribute's value including XML elements and XML processing instructions.</para>
         </listitem>
      </itemizedlist></sect2><sect2><title>Variables</title>
      <para/></sect2><sect2><title>Implicit Objects</title>
      <para/></sect2><sect2><title>Literals</title>
      <para/></sect2><sect2><title>Operators</title>
      <para/></sect2><sect2><title>Functions</title>
      <para/><sect3><title>Using Functions</title>
      <para/></sect3><sect3><title>Defining Functions</title>
      <para/></sect3></sect2></sect1><sect1><title>Standard Implicit Objects that ZK supports</title>
      <para>Like using EL expressions in JSP pages, you could use most of standard implicit objects in ZUML pages.</para><sect2><title>applicationScope - java.util.Map</title>
      <para>A map of application-scoped attributes (String, Object).</para></sect2><sect2><title>cookie - java.util.Map</title>
      <para>A map of cookies of the request. (String, Cookie).</para></sect2><sect2><title>header - java.util.Map</title>
      <para>A map of headers of the request. (String, String).</para></sect2><sect2><title>headerValues - java.util.Map</title>
      <para>A map of headers of the request. (String, String[]).</para></sect2><sect2><title>pageScope - java.util.Map</title>
      <para>A map of page-scoped attributes (String, Object).</para>
      <para>Notice: the page concept is a bit different from JSP because a ZK page exists across requests.</para></sect2><sect2><title>param - java.util.Map</title>
      <para>A map of parameters of the request (String, String).</para></sect2><sect2><title>paramValues - java.util.Map</title>
      <para>A map of parameters of the request. (String, String[]).</para></sect2><sect2><title>requestScope - java.util.Map</title>
      <para>A map of request-scoped attributes (String, Object).</para></sect2><sect2><title>sessionScope - java.util.Map</title>
      <para>A map of session-scoped attributes (String, Object).</para></sect2></sect1><sect1><title>ZK Implicit Objects</title>
      <para>All variables defined in ZK scripts (aka., zscript) are available for the EL expressions. Thus, all implicit objects described in the previous chapter are also the implicit objects for the EL expressions. You are free to use self, event, componentScope and others. Refer to the Implict Objects section in the ZK User Interface Markup Language chapter.</para></sect1></chapter>
   <chapter>
      <title>4. The XUL Components</title><sect1><title>Overview</title>
      <itemizedlist>
         <listitem>
            <para>All XUL components are packed in the org.zkoss.zul.html package.</para>
         </listitem>
      </itemizedlist>
      <itemizedlist>
         <listitem>
            <para>The XML name space is http://www.zkoss.org/2005/zul</para>
         </listitem>
         <listitem>
            <para>The extensions include xul and zul.</para>
         </listitem>
         <listitem>
            <para>The component names are case-sensitive. They are all in lower-cases.</para>
         </listitem>
      </itemizedlist><sect2 id="AbstractComponent"><title>AbstractComponent</title>
      <para>A skeletal implementation of Component. Though it is OK to implement Component from scratch, this class simplifies some of the chores.</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zk.ui.AbstractComponent</code>
      </para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>id</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the ID.</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>UUID (universal unique ID) </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>mold</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the mold for this component.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>default</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>visible</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether this component is visible.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>true</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>AddAnnotation</code>
                  </para>
                  <para>
                     <code>(java.lang.String annotName, java.util.Map annotAttrs)</code>
                  </para>
               </entry>
               <entry>
                  <para>Associates an annotation to this component.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>addAnnotation(java.lang.String propName, java.lang.String annotName, java.util.Map annotAttrs)</code>
                  </para>
               </entry>
               <entry>
                  <para>Adds an annotation to the specified proeprty of this component.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>addEventHandler(java.lang.String name, EventHandler evthd)</code>
                  </para>
               </entry>
               <entry>
                  <para>Adds an event handler.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>addEventListener(java.lang.String </code>
                     <code>evtnm, EventListener listener)</code>
                  </para>
               </entry>
               <entry>
                  <para>Adds an event listener to specified event for this component.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>addSharedAnnotationMap(AnnotationMap annots)</code>
                  </para>
               </entry>
               <entry>
                  <para>Add a map of annotations which is shared by other components.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>addSharedEventHandlerMap(EventHandlerMap evthds)</code>
                  </para>
               </entry>
               <entry>
                  <para>Adds a map of event handlers which is shared by other components.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>appendChild(Component child)</code>
                  </para>
               </entry>
               <entry>
                  <para>Appends a child to the end of all children.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>applyProperties()</code>
                  </para>
               </entry>
               <entry>
                  <para>Initializes the properties (aka. members) and custom-attributes based on what are defined in the component definition.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>clone()</code>
                  </para>
               </entry>
               <entry>
                  <para>Clones the component.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Object </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>containsVariable(java.lang.String name, boolean local)</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether the specified variable is defined.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>detach()</code>
                  </para>
               </entry>
               <entry>
                  <para>Detaches this component such that it won't belong to any page.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getAnnotatedProperties()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns a read-only list of the name (String) of properties that are associated at least one annotation (never null).</para>
               </entry>
               <entry>
                  <para>
                     <code>java.util.List</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getAnnotatedPropertiesBy(java.lang.String annotName)</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns a read-only list of the names (String) of the properties that are associated with the specified annotation (never null).</para>
               </entry>
               <entry>
                  <para>
                     <code>java.util.List</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getAnnotation(java.lang.String annotName)</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the annotation associated with the component, or null if not available.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zk.ui.metainfo.Annotation</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getAnnotation(java.lang.String propName, java.lang.String annotName)</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the annotation associated with the definition of the specified property, or null if not available.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zk.ui.metainfo.Annotation</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getAnnotations()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns a read-only collection of all annotations associated with this component (never null).</para>
               </entry>
               <entry>
                  <para>
                     <code>java.util.Collection</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getAnnotations(java.lang.String propName)</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns a read-only collection of all annotations associated with the specified property (never null).</para>
               </entry>
               <entry>
                  <para>
                     <code>java.util.Collection</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getAttribute(java.lang.String name)</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the custom attribute associated with this component, i.e., Component.COMPONENT_SCOPE.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Object</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getAttribute(java.lang.String name, int scope)</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the value of the specified custom attribute in the specified scope, or null if not defined.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Object </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getAttributes()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns all custom attributes associated with this component, i.e., Component.COMPONENT_SCOPE.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.util.Map </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getAttributes(int scope)</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns all custom attributes of the specified scope.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.util.Map </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getChildren()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns a live list of children.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.util.List</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getDefinition()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the component definition of this component (never null).</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zk.ui.metainfo. ComponentDefinition</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getDesktop()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the desktop of this component, or null if this component doesn't belong to any desktop.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zk.ui</code>
                     <code>.Desktop</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getEventHandler(java.lang.String evtnm)</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the event handler of the specified name, or null if not found.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zk.ui.metainfo.ZScript</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getExtraCtrl()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the extra controls that tell ZK how to handle this component specially.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Object </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getFellow(java.lang.String compId)</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns a component of the specified ID in the same ID space.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zk.ui</code>
                     <code>.Component</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getFellowIfAny(java.lang.String compId)</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns a component of the specified ID in the same ID space, or null if not found.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zk.ui</code>
                     <code>.Component</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getListenerIterator(java.lang.String evtnm)</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns an iterator for iterating listener for the specified event.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.util.Iterator</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getNamespace()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the namespace to store variables and functions belonging to the ID space of this component.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zk.scripting.Namespace</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getPage()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the page that this component belongs to, or null if it doesn't belong to any page.</para>
               </entry>
               <entry>
                  <para>
                     <code>Page </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getParent()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the parent component, or null if this is the root component.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zk.ui.Component </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getPropagatee(java.lang.String evtnm)</code>
                  </para>
               </entry>
               <entry>
                  <para>Default: null (no propagation at all).</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zk.ui.Component </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getRoot()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the root of the specified component.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zk.ui.Component </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getSpaceOwner()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the owner of the ID space that this component belongs to.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zk.ui.IdSpace </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getUuid()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns UUID (universal unique ID) which is unquie in the whole session.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getVariable(java.lang.String name, boolean local)</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the value of a variable defined in the namespace, or null if not defined or the value is null.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Object </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>insertBefore(Component newChild, Component refChild)</code>
                  </para>
               </entry>
               <entry>
                  <para>Inserts a child before the reference child.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>invalidate()</code>
                  </para>
               </entry>
               <entry>
                  <para>Invalidates this component by setting the dirty flag such that it will be redraw the whole content later.</para>
               </entry>
               <entry>
                  <para>
                     <code>void </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>isChildable()</code>
                  </para>
               </entry>
               <entry>
                  <para>Default: return true (allows to have children).</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>isListenerAvailable(java.lang.String evtnm, boolean asap)</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether the event listener is available.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onChildAdded(Component child)</code>
                  </para>
               </entry>
               <entry>
                  <para>Default: does nothing.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onChildRemoved(Component child)</code>
                  </para>
               </entry>
               <entry>
                  <para>Default: does nothing.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onDrawNewChild(Component child, java.lang.StringBuffer out)</code>
                  </para>
               </entry>
               <entry>
                  <para>Called when a new-created child is drawn.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onWrongValue(WrongValueException ex)</code>
                  </para>
               </entry>
               <entry>
                  <para>Notifies that an WrongValueException instance is thrown, and WrongValueException.getComponent() is this component.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zk.ui.WrongValueException </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>redraw(java.io.Writer out)</code>
                  </para>
               </entry>
               <entry>
                  <para>Includes the page returned by getMoldURI() and set the self attribute to be this component.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>removeAttribute(java.lang.String name)</code>
                  </para>
               </entry>
               <entry>
                  <para>Removes the custom attribute associated with this component, i.e., Component.COMPONENT_SCOPE.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Object </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>removeAttribute(java.lang.String name, int scope)</code>
                  </para>
               </entry>
               <entry>
                  <para>Removes the specified custom attribute in the specified scope.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Object </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>removeChild(Component child)</code>
                  </para>
               </entry>
               <entry>
                  <para>Removes a child.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>removeEventListener(java.lang.String evtnm, EventListener listener)</code>
                  </para>
               </entry>
               <entry>
                  <para>Removes an event listener.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>response(java.lang.String key, AuResponse response)</code>
                  </para>
               </entry>
               <entry>
                  <para>Causes a response (aka., a command) to be sent to the client.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>sessionDidActivate(Page page)</code>
                  </para>
               </entry>
               <entry>
                  <para>Notification that the session, which owns this component, has just been activated (aka., deserialized).</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>sessionWillPassivate(Page page)</code>
                  </para>
               </entry>
               <entry>
                  <para>Notification that the session, which owns this component, is about to be passivated (aka., serialized).</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setAttribute(java.lang.String name, java.lang.Object value)</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the custom attribute associated with this component, i.e., Component.COMPONENT_SCOPE.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Object</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setAttribute(java.lang.String name, java.lang.Object value, int scope)</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the value of the specified custom attribute in the specified scope.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Object </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setComponentDefinition(ComponentDefinition compdef)</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the component definition. </para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setPage(Page page)</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the page that this component belongs to.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setParent(Component parent)</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the parent component.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setVariable(java.lang.String name, java.lang.Object val, boolean local)</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets a variable to the namespace.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>smartUpdate(java.lang.String attr, boolean value)</code>
                  </para>
               </entry>
               <entry>
                  <para>A special smart-update that update a value in boolean.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>smartUpdate(java.lang.String attr, int value)</code>
                  </para>
               </entry>
               <entry>
                  <para>A special smart-update that update a value in int.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>smartUpdate(java.lang.String attr, java.lang.String value)</code>
                  </para>
               </entry>
               <entry>
                  <para>Smart-updates a property with the specified value.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>toString()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>unsetVariable(java.lang.String name, boolean local)</code>
                  </para>
               </entry>
               <entry>
                  <para>Unsets a variable defined in the namespace. </para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/>
      <para/>
      <para/></sect3></sect2><sect2 id="FormatInputElement"><title>FormatInputElement</title>
      <para>A skeletal implementation for an input box with format. . </para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.impl.FormatInputElement</code>
      </para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>Format</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the format </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;empty string&gt;</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <para/>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="InputElement">
                        <code>org.zkoss.zul.impl.InputElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.impl.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link>
                     <code> </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="HeaderElement"><title>HeaderElement</title>
      <para>A skeletal implementation for a header.</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.impl.HeaderElement</code>
      </para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>align</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the horizontal alignment of this column. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>valign</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the vertical alignment of this grid. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getColAttrs()</code>
                  </para>
                  <para>
                     <code/>
                  </para>
               </entry>
               <entry>
                  <para>Returns the attributes used to generate HTML TD tag for each cell of the rows contained in the parent control, e.g., Listcell.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>isChildable()</code>
                  </para>
               </entry>
               <entry>
                  <para>Children are not allowed.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setWidth(java.lang.String width)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="LabelElement">org.zkoss.zul.impl.LabelElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="LabelImageElement">
                        <code>org.zkoss.zul.impl.LabelImageElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="HeadersElement"><title>HeadersElement</title>
      <para>A skeletal implementation for headers, the parent of a group of <code>HeaderElement</code>.</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.impl.HeadersElement</code>
      </para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>sizeable</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the horizontal alignment of this column. Sets whether the width of the child column is sizable.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="HtmlBasedComponent"><title>HtmlBasedComponent</title>
      <para>A skeletal implementation for HTML based components. It simplifies to implement methods common to HTML based components.</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*ALL</para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Event Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onDrop</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="DropEvent">
                        <code>org.zkoss.zk.ui.event.DropEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="DropEvent">
                        <code/>
                     </link>
                  </para>
                  <para>Description: Represents an event cause by user's dragging and dropping a component.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>droppable</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets "true" or "false" to denote whether a component is <code>droppable</code>, or a list of identifiers of <code>draggable</code> types of objects that could be dropped to this component.</para>
                  <para>Value:<code>true</code> | <code>false|the identifier of a draggable type of objects</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>droppable</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets "true" or "false" to denote whether a component is droppable, or a list of identifiers of draggable types of objects that could be droped to this component.</para>
                  <para>Value:<code>true</code> | <code>false|</code>
                  </para>
                  <para>
                     <code>the identifier of a draggable type of objects</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>height</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the height.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>left</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the left position.</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>sclass</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the CSS class.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>style</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the CSS style.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>tooltiptext</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the text as the <code>tooltip</code>.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>top</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the top position.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>width</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the width.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>zIndex</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the Z index.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>0</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>addEventListener(java.lang.String, EventListener) </code>
                  </para>
                  <para>
                     <code/>
                  </para>
               </entry>
               <entry>
                  <para>Adds an event listener to specified event for this component.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>focus()</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets focus to this element.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getInnerAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the interior attributes for generating the inner HTML tag; never return null. </para>
                  <para>Used only by component developers. </para>
                  <para>Default: empty string. Refer to <code>getOuterAttrs</code> for more details. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the exterior attributes for generating the enclosing HTML tag; never return null. </para>
                  <para>Used only by component developers. </para>
                  <para>Default: Generates the <code>tooltip</code> 
                     <code>text, style, sclass, draggable</code> and <code>droppable</code> attribute if necessary. In other words, the corresponding attribute is generated if <code>getTooltiptext, getRealStyle, getSclass, getDraggable, getDroppable</code> are defined. </para>
                  <para/>
                  <para>You have to call both <code>getOuterAttrs</code> and <code>getInnerAttrs</code> to generate complete attributes. </para>
                  <para>For simple components that all attributes are put on the outset HTML element, all you need is as follows. </para>
                  <para>
                     <code>&lt;xx id="${self.uuid}"${self.outerAttrs}${self.innerAttrs}&gt;</code>
                  </para>
                  <para>If you want to put attributes in a nested HTML element, you shall use the following pattern. Notice: if <code>getInnerAttrs</code> in a different tag, the tag must be named with "${self.uuid}!real". </para>
                  <para>
                     <code>&lt;xx id="${self.uuid}"$</code>
                     <code>{self.outerAttrs}&gt;</code>
                  </para>
                  <para>
                     <code>&lt;yy id="${self.uuid}!real"${self.innerAttrs}&gt;...</code>
                  </para>
                  <para>Note: This class handles non-deferrable event listeners automatically. However, you have to invoke appendAsapAttr for each event the component handles in <code>getOuterAttrs</code> as follows. </para>
                  <para>
                     <code>appendAsapAttr(sb, Events.ON_OPEN);</code>
                  </para>
                  <para>
                     <code>appendAsapAttr(sb, Events.ON_CHANGE);</code>
                  </para>
                  <para>Theoretically, you could put any attributes in either <code>getInnerAttrs</code> or <code>getOuterAttrs</code>. However, <code>zkau.js</code> assumes all attributes are put at the outer one. If you want something different, you have to provide your own <code>setAttr</code> (refer to how <code>checkbox</code> is implemented). </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>removeEventListener(java.lang.String, EventListener) </code>
                  </para>
               </entry>
               <entry>
                  <para>Removes an event listener.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent</link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="InputElement"><title>InputElement</title>
      <para>
         <code>InputElement</code> is a super class for components which provie user key input, such as Textbox, Intbox, etc. </para>
      <para>Some features are implemented in this class, such as <code>constraint</code>, <code>disabled, maxlength, name, readonly, </code>etc.</para>
      <para>You sholuld not deirectly use this class, please use the inherited class. </para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.InputElement</code>
      </para></sect3><sect3><title>Supported Events</title>
      <para/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Event Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onOK</code>
                  </para>
               </entry>
               <entry>
                  <para>Event: <link linkend="KeyEvent">org.zkoss.zk.ui.event.KeyEvent</link>
                  </para>
                  <para>
                     <link linkend="DropEvent">
                        <code>Denotes user has pressed the </code>
                     </link>
                     <link linkend="DropEvent">
                        <code>ENTER</code>
                     </link>
                     <link linkend="DropEvent">
                        <code> key.</code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>cols</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the columns. </para>
                  <para>Note: non-positive means the same as browser's default </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>0</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>constraint</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the constraint, must be a default constraint expression. The value,except regular expression , could be a combination String by comma</para>
                  <para>Values : no positive | no negative | no zero | no empty | nofuture | no past | no today | a regular expression.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>&lt;empty string&gt;</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>disabled</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether it is disabled. </para>
                  <para>Values : <code>true|false</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>maxlength</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the max length. </para>
                  <para>Note : non-postive means unlimited.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>0</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>name</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the name of this component.</para>
                  <para>Don't use this method if your application is purely based on ZK's event-driven model.</para>
                  <para>The name is used only to work with "legacy" Web application that handles user's request by servlets. It works only with HTTP/HTML-based browsers. It doesn't work with other kind of clients. </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>readonly</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether it is read only</para>
                  <para>Values : <code>true|false</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>tabindex</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the tab order of this component. </para>
                  <para>Note : -1 means the same as browser's default</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>-1</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>text</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the value in the String format. </para>
                  <para>Note : default value depends on implementation of sub-class.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <para>*NONE</para></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="LabelElement"><title>LabelElement</title>
      <para>A HTML element with a label. </para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.impl.LabelElement</code>
      </para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>label</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the label</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Any text</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="LabelImageElement"><title>LabelImageElement</title>
      <para>A HTML element with a label and an image. </para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.impl.LabelImageElement</code>
      </para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>image</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the label</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>imageContent</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the content directly</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.image.Image</code>
                     <code> </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>src</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the image URI</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>isImageAssigned()</code>
                  </para>
                  <para>
                     <code/>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether the image is available. </para>
                  <para>It return true if setImage(java.lang.String) or setImageContent(org.zkoss.image.Image) is called with non-null.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getImgTag()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the HTML IMG tag for the image part.</para>
                  <para>Used only for component template, not for application developers.</para>
                  <para>Note: the component template shall use this method to generate the HTML tag, instead of using getImage(). </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="LabelElement">org.zkoss.zul.impl.LabelElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="LayoutRegion"><title>LayoutRegion</title>
      <para>This class represents a region in a layout manager. </para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zkex.zul.LayoutRegion</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE</para></sect3><sect3><title>Supported Events </title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onOpen</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="OpenEvent">
                        <code>org.zkoss.zk.ui.event.OpenEvent</code>
                     </link>
                  </para>
                  <para>
                     <code>Description: </code>
                     <code>When a layout is collapsed or opened by a user, the </code>
                     <code>onOpen</code>
                     <code> event is sent to the application.</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>flex </code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether to grow and shrink vertical/horizontal to fit their given space, so called flexibility.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>size </code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the size of this region. This method is shortcut for <emphasis>setHeight(String) </emphasis>and <emphasis>setWidth(String).</emphasis> If this region is <emphasis>North </emphasis>or <emphasis>South</emphasis>, this method will invoke <emphasis>setHeight(String)</emphasis>. If this region is <emphasis>West </emphasis>or <emphasis>East</emphasis>, this method will invoke <emphasis>setWidth(String)</emphasis>. Otherwise it will throw a UnsupportedOperationException. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>splittable </code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether enable the split functionality.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>collapsible </code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether set the initial display to collapse.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>margins </code>
                  </para>
               </entry>
               <entry>
                  <para>Sets margins for the element "0,1,2,3" that direction is "top,left,right,bottom".</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>0,0,0,0</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>open </code>
                  </para>
               </entry>
               <entry>
                  <para>Opens or collapses the splitter. Meaningful only if isCollapsible is not false.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>true</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>autoscroll </code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether enable overflow scrolling.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>border </code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the border (either none or normal).</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>normal</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>maxsize </code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the maximum size of the resizing element.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>2000</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>minsize </code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the minimum size of the resizing element.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>0</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code/>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code/>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>insertBefore(org.zkoss.zk.ui.Component child, org.zkoss.zk.ui.Component insertBefore) </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>onChildRemoved(org.zkoss.zk.ui.Component child) </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="NumberInputElement"><title>NumberInputElement</title>
      <para>A skeletal implementation for number-type input box. </para>
      <para/><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.impl.NumberInputElement</code>
      </para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>RoundingMode</code>
                  </para>
               </entry>
               <entry>
                  <para>the rounding mode.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>BigDecimal.ROUND_HALF_EVEN.</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <para/>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>setRoundingMode()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para>Inherited From </para>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="FormatInputElement">
                        <code>org.zkoss.zul.impl.FormatInputElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="InputElement">
                        <code>org.zkoss.zul.impl.InputElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.impl.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link>
                     <code> </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="XulElement"><title>XulElement</title>
      <para>The fundamental class for XUL elements.</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.impl.XulElement</code>
      </para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>action</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the label</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>context</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the ID of <link linkend="Popup">
                        <code>Popup</code>
                     </link> that should appear when the user right-clicks on the element (aka., context menu).</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>popup</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the ID of <link linkend="Popup">
                        <code>Popup</code>
                     </link> that should appear when the user clicks on the element. </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>tooltip</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the ID of <link linkend="Popup">
                        <code>Popup</code>
                     </link> that should be used as a tooltip window when the mouse hovers over the element for a moment.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getInnerAttrs()</code>
                  </para>
                  <para>
                     <code/>
                  </para>
               </entry>
               <entry>
                  <para>Generates the Client-Side-Action attributes to the interior tag. </para>
                  <para>Reason: <code>onfocus</code> is the main use.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect1><sect1><title>Components</title><sect2 id="Audio"><title>Audio</title>
      <para>An <code>audio</code> component is used to play the audio at the browser. Like <code>image</code>, you could use the <code>src</code> property to specify an URL of an audio resource, or the <code>setContent</code> method to specify a dynamically generated audio.</para>
      <para>Depending on the browser and the <code>audio</code> plugin, developers might be able to control the play of an audio by the <code>play</code>, <code>stop</code> and <code>pause</code> methods. Currently, Internet Explorer with Media Player is capable of such controls.</para>
      <para>
         <graphic fileref="images/audio.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;audio id="audio" height="20"/&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Audio</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE</para></sect3><sect3><title>Supported Events</title>
      <para>*NONE</para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>align</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the alignment: one of top<code>, </code>
                  </para>
                  <para>
                     <code>Value:</code>
                     <code>texttop, middle, absmiddle, bottom, absbottom, baseline, left, right and center.</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>aut</code>
                     <code>ostart</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether to auto start playing the <code>audio</code>.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>border</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the width of the border.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Str</code>
                     <code>ing</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>con</code>
                     <code>tent</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the content directly.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.sound.Audio</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>src</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the src.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Str</code>
                     <code>ing</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>isChildable()</code>
                  </para>
               </entry>
               <entry>
                  <para>Determines whether it accepts child components</para>
                  <para>Value: false</para>
                  <para>Note: No child is allowed. </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>pause()</code>
                  </para>
               </entry>
               <entry>
                  <para>Pauses the <code>audio</code> at the client.</para>
               </entry>
               <entry>
                  <para>void</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>play()</para>
               </entry>
               <entry>
                  <para>Plays the <code>audio</code> at the client.</para>
               </entry>
               <entry>
                  <para>void</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>stop()</para>
               </entry>
               <entry>
                  <para>Stops the <code>audio</code> at the client.</para>
               </entry>
               <entry>
                  <para>void</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Auxhead"><title>Auxhead</title>
      <para>Used to define a collection of auxiliary headers (<code>Auxheader</code>).</para>
      <para>
         <graphic fileref="images/auxheader.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;grid&gt;&#xD;    &lt;auxhead&gt;    &#xD;        &lt;auxheader label="H1'07" colspan="6"/&gt;        &#xD;        &lt;auxheader label="H2'07" colspan="6"/&gt;        &#xD;    &lt;/auxhead&gt;    &#xD;    &lt;auxhead&gt;    &#xD;        &lt;auxheader label="Q1" colspan="3"/&gt;        &#xD;        &lt;auxheader label="Q2" colspan="3"/&gt;        &#xD;        &lt;auxheader label="Q3" colspan="3"/&gt;        &#xD;        &lt;auxheader label="Q4" colspan="3"/&gt;        &#xD;    &lt;/auxhead&gt;    &#xD;    &lt;columns&gt;    &#xD;        &lt;column label="Jan"/&gt;&lt;column label="Feb"/&gt;&lt;column label="Mar"/&gt;        &#xD;        &lt;column label="Apr"/&gt;&lt;column label="May"/&gt;&lt;column label="Jun"/&gt;        &#xD;        &lt;column label="Jul"/&gt;&lt;column label="Aug"/&gt;&lt;column label="Sep"/&gt;        &#xD;        &lt;column label="Oct"/&gt;&lt;column label="Nov"/&gt;&lt;column label="Dec"/&gt;        &#xD;    &lt;/columns&gt;    &#xD;    &lt;rows&gt;    &#xD;        &lt;row&gt;        &#xD;        &lt;label value="1,000"/&gt;&lt;label value="1,100"/&gt;&lt;label value="1,200"/&gt;        &#xD;        &lt;label value="1,300"/&gt;&lt;label value="1,400"/&gt;&lt;label value="1,500"/&gt;        &#xD;        &lt;label value="1,600"/&gt;&lt;label value="1,700"/&gt;&lt;label value="1,800"/&gt;        &#xD;        &lt;label value="1,900"/&gt;&lt;label value="2,000"/&gt;&lt;label value="2,100"/&gt;        &#xD;        &lt;/row&gt;        &#xD;    &lt;/rows&gt;    &#xD;</programlisting>
      <para>&lt;/grid&gt;</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Auxhead</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <code> </code>
         <link linkend="Auxheader">
            <code>Auxheader</code>
         </link>
      </para></sect3><sect3><title>Supported Events</title>
      <para> *NONE</para></sect3><sect3><title>Properties</title>
      <para> *NONE</para>
      <para>Methods</para>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>insertBefore(org.zkoss.zk.ui.Component child, org.zkoss.zk.ui.Component insertBefore)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.impl.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="Auxheader"><title>Auxheader</title>
      <para>An auxiliary header.</para>
      <para>
         <graphic fileref="images/auxheader.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;grid&gt;&#xD;    &lt;auxhead&gt;    &#xD;        &lt;auxheader label="H1'07" colspan="6"/&gt;        &#xD;        &lt;auxheader label="H2'07" colspan="6"/&gt;        &#xD;    &lt;/auxhead&gt;    &#xD;    &lt;auxhead&gt;    &#xD;        &lt;auxheader label="Q1" colspan="3"/&gt;        &#xD;        &lt;auxheader label="Q2" colspan="3"/&gt;        &#xD;        &lt;auxheader label="Q3" colspan="3"/&gt;        &#xD;        &lt;auxheader label="Q4" colspan="3"/&gt;        &#xD;    &lt;/auxhead&gt;    &#xD;    &lt;columns&gt;    &#xD;        &lt;column label="Jan"/&gt;&lt;column label="Feb"/&gt;&lt;column label="Mar"/&gt;        &#xD;        &lt;column label="Apr"/&gt;&lt;column label="May"/&gt;&lt;column label="Jun"/&gt;        &#xD;        &lt;column label="Jul"/&gt;&lt;column label="Aug"/&gt;&lt;column label="Sep"/&gt;        &#xD;        &lt;column label="Oct"/&gt;&lt;column label="Nov"/&gt;&lt;column label="Dec"/&gt;        &#xD;    &lt;/columns&gt;    &#xD;    &lt;rows&gt;    &#xD;        &lt;row&gt;        &#xD;        &lt;label value="1,000"/&gt;&lt;label value="1,100"/&gt;&lt;label value="1,200"/&gt;        &#xD;        &lt;label value="1,300"/&gt;&lt;label value="1,400"/&gt;&lt;label value="1,500"/&gt;        &#xD;        &lt;label value="1,600"/&gt;&lt;label value="1,700"/&gt;&lt;label value="1,800"/&gt;        &#xD;        &lt;label value="1,900"/&gt;&lt;label value="2,000"/&gt;&lt;label value="2,100"/&gt;        &#xD;        &lt;/row&gt;        &#xD;    &lt;/rows&gt;    &#xD;</programlisting>
      <para>&lt;/grid&gt;</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Auxheader</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <code> *NONE</code>
      </para></sect3><sect3><title>Supported Events</title>
      <para> *NONE</para></sect3><sect3><title>Properties </title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>colspan</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the number of columns to span this header.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>rowspan</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the number of rows to span this header.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para>Methods</para>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>getOuterAttrs()</para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>setParent(org.zkoss.zk.ui.Component parent)</para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="HeaderElement">
                        <code>org.zkoss.zul.impl.HeaderElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="LabelImageElement">
                        <code>org.zkoss.zul.impl.LabelImageElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="LabelElement">
                        <code>org.zkoss.zul.impl.LabelElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.impl.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link>
                     <code> </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="Bandbox"><title>Bandbox</title>
      <para>A <code>band</code>
         <code>box</code> is a special text box that embeds a customizable popup window (aka., a dropdown window). Like comboboxes, a <code>bandbox</code> consists of an input box and a popup window. The popup window is opened automatically, when users presses Alt+DOWN or clicks the <graphic fileref="images/bandbox-1.png">2
			
		</graphic> button.</para>
      <para>Unlike <code>comboboxes</code>, the popup window of a bandbox could be anything. It is designed to give developers the maximal flexibility. A typical use is to represent the popup window as a search dialog.</para>
      <programlisting>        &lt;bandboxid="bd"&gt;        <inlinegraphic fileref="images/bandbox-2.png" align="right"/>&#xD;        &lt;bandpopup&gt;        &#xD;                &lt;vbox&gt;                &#xD;            &lt;hbox&gt;Search&lt;textbox/&gt;&lt;/hbox&gt;            &#xD;            &lt;listboxwidth="200px"            &#xD;            onSelect="bd.value=self.selectedItem.label;bd.closeDropdown();"&gt;            &#xD;            &lt;listhead&gt;            &#xD;                    &lt;listheaderlabel="Name"/&gt;                    &#xD;                    &lt;listheaderlabel="Description"/&gt;                    &#xD;            &lt;/listhead&gt;            &#xD;            &lt;listitem&gt;            &#xD;                    &lt;listcelllabel="John"/&gt;                    &#xD;                    &lt;listcelllabel="CEO"/&gt;                    &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                    &lt;listcelllabel="Joe"/&gt;                    &#xD;                    &lt;listcelllabel="Engineer"/&gt;                    &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                    &lt;listcelllabel="Mary"/&gt;                    &#xD;                    &lt;listcelllabel="Supervisor"/&gt;                    &#xD;            &lt;/listitem&gt;            &#xD;        &lt;/listbox&gt;        &#xD;        &lt;/vbox&gt;        &#xD;        &lt;/bandpopup&gt;        &#xD;    &lt;/bandbox&gt;    &#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Bandbox</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Bandpopup">Bandpopup</link>
      </para></sect3><sect3><title>Supported Events </title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onOpen</code>
                  </para>
               </entry>
               <entry>
                  <para>Event: <link linkend="OpenEvent">
                        <code>org.zkoss.zk.ui.event.OpenEvent</code>
                     </link>
                  </para>
                  <para>
                     <code>Denotes user has opened or closed a component. Note: unlike onClose, this event is only a notification. The client sends this event after opening or closing the component.</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties </title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>autodrop</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether to automatically drop the list if users is changing this text box.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>buttonVisible</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets whether the button (on the right of the textbox) is visible. </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>true</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>image</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the image URI that is displayed as the button to open Bandpopup.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>"~./zul/img/bandbtn.gif". </code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>clone()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Object</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>closeDropdown()</code>
                  </para>
               </entry>
               <entry>
                  <para>Closes the popup (getDropdown()).</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getDropdown()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the dropdown window belonging to this band box.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Bandpopup</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getInnerAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para>Generates the Client-Side-Action attributes to the interior tag.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns <code>west</code> componennt</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getRealStyleFlags()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns RS_NO_WIDTH|RS_NO_HEIGHT.</para>
               </entry>
               <entry>
                  <para>
                     <code/>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>insertBefore(org.zkoss.zk.ui.Component newChild, org.zkoss.zk.ui.Component refChild)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para>Inherited From </para>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="InputElement">
                        <code>org.zkoss.zul.InputElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="Bandpopup"><title>Bandpopup</title>
      <para>The popup that belongs to a <code>Bandbox</code> instance.</para>
      <para>Developer usually listen to the <code>onOpen</code> event that is sent to <code>Bandbox</code> and then creates proper components as children of this component. </para>
      <programlisting>        &lt;bandboxid="bd"&gt;        <inlinegraphic fileref="images/bandbox-2.png" align="right"/>&#xD;        &lt;bandpopup&gt;        &#xD;                &lt;vbox&gt;                &#xD;            &lt;hbox&gt;Search&lt;textbox/&gt;&lt;/hbox&gt;            &#xD;            &lt;listboxwidth="200px"            &#xD;            onSelect="bd.value=self.selectedItem.label;bd.closeDropdown();"&gt;            &#xD;            &lt;listhead&gt;            &#xD;                    &lt;listheaderlabel="Name"/&gt;                    &#xD;                    &lt;listheaderlabel="Description"/&gt;                    &#xD;            &lt;/listhead&gt;            &#xD;            &lt;listitem&gt;            &#xD;                    &lt;listcelllabel="John"/&gt;                    &#xD;                    &lt;listcelllabel="CEO"/&gt;                    &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                    &lt;listcelllabel="Joe"/&gt;                    &#xD;                    &lt;listcelllabel="Engineer"/&gt;                    &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                    &lt;listcelllabel="Mary"/&gt;                    &#xD;                    &lt;listcelllabel="Supervisor"/&gt;                    &#xD;            &lt;/listitem&gt;            &#xD;        &lt;/listbox&gt;        &#xD;        &lt;/vbox&gt;        &#xD;        &lt;/bandpopup&gt;        &#xD;    &lt;/bandbox&gt;    &#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Bandpopup</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Bandpopup">*NONE</link>
      </para></sect3><sect3><title>Supported Events</title>
      <para> *NONE</para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>visible</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether this component is visible.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>true</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para>Methods</para>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>setParent(org.zkoss.zk.ui.Component parent)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para>Inherited From </para>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="InputElement">
                        <code>org.zkoss.zul.InputElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="Calendar"><title>Calendar</title>
      <para>A calendar displays a 'flat' calendar and allows user to select a day from it.</para>
      <para>
         <graphic fileref="images/calendar.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;hbox&gt;&#xD;    &lt;calendar id="cal" onChange="in.value = cal.value"/&gt;    &#xD;    &lt;datebox id="in" onChange="cal.value = in.value"/&gt;    &#xD;&lt;/hbox&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Calendar</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Bandpopup">*NONE</link>
      </para></sect3><sect3><title>Supported Events</title>
      <para> *NONE</para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>compact</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether to use a compact layout.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>true</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>name</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the name of this component.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>timeZone</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the time zone that this date box belongs to, or null if the default time zone is used.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.util.TimeZone</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Determined by</code>
                     <code> TimeZones.getCurrent() </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>value</code>
                  </para>
               </entry>
               <entry>
                  <para>Assigns a value to this component.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.util.Date</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>today </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>visible</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether this component is visible.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>true</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getOuterAttrs() </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String </code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3></sect2><sect2><title/>
      <para/></sect2><sect2 id="Borderlayout"><title>Borderlayout</title>
      <para>The layout component is a nested component. The parent component is <code>borderlayout</code>, and its children components include north, south, center, west, and east. The combination of children components of <code>borderlayout</code> is free.</para>
      <para>
         <graphic fileref="images/layout.jpg">2
			
		</graphic>
      </para>
      <programlisting>&lt;borderlayout height="500px"&gt;&#xD;    &lt;north size="50%" border="0"&gt;    &#xD;        &lt;borderlayout&gt;        &#xD;            &lt;west size="25%" border="none" flex="true"&gt;            &#xD;                &lt;div style="background:#B8D335"&gt;                &#xD;                    &lt;label value="25%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/west&gt;            &#xD;            &lt;center border="none" flex="true"&gt;            &#xD;                &lt;div style="background:#E6D92C"&gt;                &#xD;                    &lt;label value="25%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/center&gt;            &#xD;            &lt;east size="50%" border="none" flex="true"&gt;            &#xD;                &lt;label value="Here is a non-border"                &#xD;                    style="color:gray;font-size:30px" /&gt;                    &#xD;            &lt;/east&gt;            &#xD;        &lt;/borderlayout&gt;        &#xD;    &lt;/north&gt;    &#xD;    &lt;center border="0"&gt;    &#xD;        &lt;borderlayout&gt;        &#xD;            &lt;west size="30%" flex="true" border="0"&gt;            &#xD;                &lt;div style="background:#E6D92C"&gt;                &#xD;                    &lt;label value="30%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/west&gt;            &#xD;            &lt;center&gt;            &#xD;                &lt;label value="Here is a border"                &#xD;                    style="color:gray;font-size:30px" /&gt;                    &#xD;            &lt;/center&gt;            &#xD;            &lt;east size="30%" flex="true" border="0"&gt;            &#xD;                &lt;div style="background:#B8D335"&gt;                &#xD;                    &lt;label value="30%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/east&gt;            &#xD;        &lt;/borderlayout&gt;        &#xD;    &lt;/center&gt;    &#xD;&lt;/borderlayout&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zkex.zul.Borderlayout</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="North">
            <code>North</code>
         </link>, <link linkend="East">
            <code>East</code>
         </link>, <link linkend="West">West</link>, <link linkend="South">
            <code>South</code>
         </link> , <link linkend="Center">
            <code>Center</code>
         </link> 
      </para></sect3><sect3><title>Supported Events</title>
      <para> *None</para></sect3><sect3><title>Properties</title>
      <para>*None</para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getCenter()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns <code>center</code> component</para>
               </entry>
               <entry>
                  <para>
                     <code>Center</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getEast()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns <code>east</code> component</para>
               </entry>
               <entry>
                  <para>
                     <code>East</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getNorth()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns <code>north</code> component</para>
               </entry>
               <entry>
                  <para>
                     <code>North</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getSouth()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns <code>south</code> component</para>
               </entry>
               <entry>
                  <para>
                     <code>South</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getWest()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns <code>west</code> componennt</para>
               </entry>
               <entry>
                  <para>
                     <code>West</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>insertBefore(org.zkoss.zk.ui.Component child, org.zkoss.zk.ui.Component insertBefore)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>resize()</code>
                  </para>
               </entry>
               <entry>
                  <para>Re-size the layout component.</para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Box"><title>Box</title>
      <para>The box model of XUL is used to divide a portion of the display into a series of boxes. Components inside of a box will orient themselves horizontally or vertically. By combining a series of boxes and separators, you can control the layout of the visual presentation.</para>
      <para>A box can lay out its children in one of two orientations, either horizontally or vertically. A horizontal box lines up its components horizontally and a vertical box orients its components vertically. You can think of a box as one row or one column from an HTML table.</para>
      <para/>
      <para>
         <graphic fileref="images/box.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;zk&gt;&#xD;    &lt;box orient="vertical"&gt;    &#xD;        &lt;button label="Button 1"/&gt;        &#xD;        &lt;button label="Button 2"/&gt;        &#xD;    &lt;/box&gt;    &#xD;    &lt;box orient="horizontal"&gt;    &#xD;        &lt;button label="Button 3"/&gt;        &#xD;        &lt;button label="Button 4"/&gt;        &#xD;    &lt;/box&gt;    &#xD;&lt;/zk&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Box</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*ALL</para></sect3><sect3><title>Supported Events </title>
      <para>*NONE</para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>heights</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the widths/heights, which is a list of numbers separated by comma to denote the width/height of each cell in a box.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>ori</code>
                     <code>ent</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the orient.</para>
                  <para>Values:<code>horizontal</code> | <code>ver</code>
                     <code>tical </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>spacing</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the spacing.(such as "<code>0</code>", "<code>5px</code>", "<code>3pt</code>" or "<code>1em</code>")</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>val</code>
                     <code>ign</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the vertical alignment of the adjacent cells of a box.</para>
                  <para>Value:<code>top|middle|bottom</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>top</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>widths</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the widths/heights, which is a list of numbers separated by comma to denote the width/height of each cell in a box.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;empty&gt;</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getChildInnerAttrs(org.zkoss.zk.ui.Component) </code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the inner attributes used to wrap the children (never null).</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getChildOuterAttrs(org.zkoss.zk.ui.Component) </code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the outer attributes used to wrap the children (never null).</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onDrawNewChild(org.zkoss.zk.ui.Component, java.lang.StringBuffer)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Button"><title>Button</title>
      <para>You could assign a <code>label</code> and an <code>image</code> to a button by the <code>label</code> and <code>image</code> properties. If both are specified, the <code>dir</code> property control which is displayed up front, and the <code>orient</code> property controls whether the layout is horizontal or vertical. </para>
      <para>
         <graphic fileref="images/button.jpg">2
			
		</graphic>
      </para>
      <programlisting>&lt;button label="Left" image="/img/folder.gif" width="125px"/&gt;&#xD;&lt;button label="Right" image="/img/folder.gif" dir="reverse" width="125px"/&gt;&#xD;&lt;button label="Above" image="/img/folder.gif" orient="vertical" width="125px"/&gt;&#xD;&lt;button label="Below" image="/img/folder.gif" orient="vertical" dir="reverse" width="125px"/&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Button</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE </para></sect3><sect3><title>Supported Events</title></sect3><sect3><title/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="MouseEvent">
                        <code/>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes user has clicked the component. </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onRightClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="MouseEvent">
                        <code/>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes user has right-clicked the component.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onDoubleClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="MouseEvent">
                        <code/>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes user has double-clicked the component.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onFocus</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event</code>
                     </link>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes when a component gets the focus.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onBlur</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.even.Event</code>
                     </link>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Description: Denotes when a component loses the focus.</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>dir</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the direction of button</para>
                  <para>Value:<code>normal</code> | <code>reverse</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>normal</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>disabled</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether it is disabled or not</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>href</code>
                  </para>
               </entry>
               <entry>
                  <para>Provides a hyper link</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>&lt;empty string&gt;</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>orient</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the orientation of button</para>
                  <para>Value:<code>horizontal</code> | <code>vertical</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>horizontal</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>target</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the target frame or window</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>&lt;null&gt;</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>tabindex</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the tab order of this component</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>-1 </code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>isChildable()</code>
                  </para>
               </entry>
               <entry>
                  <para>Determines whether it accepts child components</para>
                  <para>Value: <code>false</code>
                  </para>
                  <para>Note: No child is allowed. </para>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="LabelImageElement">org.zkoss.zul.impl.LabelImageElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="LabelElement">org.zkoss.zul.impl.LabelElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Captcha"><title>Captcha</title>
      <para>A <code>captcha</code> component can generate a special distortion image, also called a CAPTCHA (Completely Automated Public Turing test to tell Computers and Humans Apart) image. Developers could set <code>height </code>and <code>width </code>for dimension of captcha. By default, captcha render the image with a randomly generated text, and developers can set <code>value </code>to assign a purposive text.</para>
      <para>
         <graphic fileref="images/captcha.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;vbox&gt;&#xD;&lt;captcha id="cpa" length="5" width="200px" height="50px"/&gt;&#xD;&lt;/vbox&gt;&#xD;</programlisting>
      <para/><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Captcha</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE </para></sect3><sect3><title>Supported Events</title>
      <para/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes user has clicked the component.</code>
                  </para>
                  <para>
                     <code>Use getX(), getY() method get coo</code>
                     <code>rdinates.</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>bgColor</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the background color of the chart. It must be <code>#RRGGBB</code> format (hexdecimal).</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>"#74979B"</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>exclude</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets exclude characters that will not be generated. Note that only digit and character is used in generating text value. If you leave exclude <code>null, </code>the default exclude list will be applied; i.e., 0123456789IilOo (only character (no digits) are used except I, i, l, O(big O), o(small o))</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>"</code>
                     <code>0123456789IOilo</code>
                     <code>"</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>fontColor</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets font color. It must in <code>#RRGGBB</code> format (hexdecimal).</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>#404040</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>height</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets height of captcha, it colud be a px, pt or em value and it will transfer to px. </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>50</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>length</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets length of the autogenerated text value</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>5</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>noise</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the flag of noise generation</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>true</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>value</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the text value to be shown as the distortion captcha</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>Random Value</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>width</code>
                  </para>
               </entry>
               <entry>
                  <para>Set width of captcha, it colud be a px, pt or em value and it will transfer to px. </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>200</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>addFont</code>
                  </para>
               </entry>
               <entry>
                  <para>Adds fonts into fonts list. </para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getBgRGB</code>
                  </para>
               </entry>
               <entry>
                  <para>Gets the background color in int</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getCaptchaEngine</code>
                  </para>
               </entry>
               <entry>
                  <para>Gets the captcha engine.</para>
               </entry>
               <entry>
                  <para>
                     <code>CaptchaEngine</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getDefaultFonts</code>
                  </para>
               </entry>
               <entry>
                  <para>Gets the default font list.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.awt.Font[]</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getFont</code>
                  </para>
               </entry>
               <entry>
                  <para>Gets n-th Font</para>
               </entry>
               <entry>
                  <para>
                     <code>java.awt.Font</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getFontRGB</code>
                  </para>
               </entry>
               <entry>
                  <para>Gets the font color in int.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getFonts</code>
                  </para>
               </entry>
               <entry>
                  <para>Gets fonts list, default provide two fonts.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.util.List</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getIntHeight</code>
                  </para>
               </entry>
               <entry>
                  <para>Gets the captcha int height in pixel; to be used by the derived subclass.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getIntWidth</code>
                  </para>
               </entry>
               <entry>
                  <para>Get the captcha int width in pixel; to be used by the derived subclass.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>newCaptchaEngine</code>
                  </para>
               </entry>
               <entry>
                  <para>Instantiates the default captcha engine.</para>
               </entry>
               <entry>
                  <para>
                     <code>CaptchaEngine</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>randomValue</code>
                  </para>
               </entry>
               <entry>
                  <para>Regenerates new captcha text value and redraw</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setEngine</code>
                  </para>
               </entry>
               <entry>
                  <para>Set the captcha engine instance or by a class name string.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>smartDrawCaptcha</code>
                  </para>
               </entry>
               <entry>
                  <para>Marks a draw flag to inform that this Chart needs update.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Image">org.zkoss.zul.Image</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="Caption"><title>Caption</title>
      <para>A header for a <code>Groupbox</code>. It may contain either a text label, using <code>LabelElement.setLabel(java.lang.String)</code>, or child elements for a more complex caption.</para>
      <para/>
      <para>
         <graphic fileref="images/caption.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;zk&gt;&#xD;&lt;window border="normal" width="350px"&gt;&#xD;&lt;caption label="This is a caption"/&gt;&#xD;        &lt;groupbox width="300px"&gt;        &#xD;                 &lt;caption label="fruits"/&gt;                &#xD;        &lt;radiogroup onCheck="fruit.value = self.selectedItem.label"&gt;        &#xD;        &lt;radio label="Apple"/&gt;        &#xD;    &lt;radio label="Orange"/&gt;    &#xD;    &lt;radio label="Banana"/&gt;     &#xD;        &lt;/radiogroup&gt;        &#xD;        &lt;/groupbox&gt;        &#xD;&lt;/window&gt;&#xD;            &lt;/zk&gt;            &#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Caption</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*ALL</para></sect3><sect3><title>Supported Events </title>
      <para/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="MouseEvent">
                        <code/>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes user has clicked the component. </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onRightClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="MouseEvent">
                        <code/>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes user has right-clicked the component.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onDoubleClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="MouseEvent">
                        <code/>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes user has double-clicked the component.</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <para>*NONE</para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getCompoundLabel()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns a compound label, which is the catenation of parent's title, if the parent is <code>Window</code>, and <code>LabelElement.getLabel()</code>.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getSclass()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the style class.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>invalidate()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>isClosableVisible()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether to display the closable button.</para>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>isLegend()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether the legend mold shall be used.</para>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setParent(org.zkoss.zk.ui.Component) </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="LabelImageElement">org.zkoss.zul.impl.LabelImageElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="LabelElement">org.zkoss.zul.impl.LabelElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Center"><title>Center</title>
      <para>This component is a center region. The default class of CSS is specified "layout-region-center".</para>
      <para/>
      <para>
         <graphic fileref="images/layout.jpg">2
			
		</graphic>
      </para>
      <programlisting>&lt;borderlayout height="500px"&gt;&#xD;    &lt;north size="50%" border="0"&gt;    &#xD;        &lt;borderlayout&gt;        &#xD;            &lt;west size="25%" border="none" flex="true"&gt;            &#xD;                &lt;div style="background:#B8D335"&gt;                &#xD;                    &lt;label value="25%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/west&gt;            &#xD;            &lt;center border="none" flex="true"&gt;            &#xD;                &lt;div style="background:#E6D92C"&gt;                &#xD;                    &lt;label value="25%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/center&gt;            &#xD;            &lt;east size="50%" border="none" flex="true"&gt;            &#xD;                &lt;label value="Here is a non-border"                &#xD;                    style="color:gray;font-size:30px" /&gt;                    &#xD;            &lt;/east&gt;            &#xD;        &lt;/borderlayout&gt;        &#xD;    &lt;/north&gt;    &#xD;    &lt;center border="0"&gt;    &#xD;        &lt;borderlayout&gt;        &#xD;            &lt;west size="30%" flex="true" border="0"&gt;            &#xD;                &lt;div style="background:#E6D92C"&gt;                &#xD;                    &lt;label value="30%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/west&gt;            &#xD;            &lt;center&gt;            &#xD;                &lt;label value="Here is a border"                &#xD;                    style="color:gray;font-size:30px" /&gt;                    &#xD;            &lt;/center&gt;            &#xD;            &lt;east size="30%" flex="true" border="0"&gt;            &#xD;                &lt;div style="background:#B8D335"&gt;                &#xD;                    &lt;label value="30%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/east&gt;            &#xD;        &lt;/borderlayout&gt;        &#xD;    &lt;/center&gt;    &#xD;&lt;/borderlayout&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zkex.zul.Center</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE</para></sect3><sect3><title>Supported Events </title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>OnOpen</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="OpenEvent">
                        <code>org.zkoss.zk.ui.event.OpenEvent</code>
                     </link>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Description: </code>
                     <code>When a layout is collapsed or opened by a user, the onOpen event is sent to the application.</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>size</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the size of this region.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getPosition()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns <code>Borderlayout.NORTH.</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>setWidth(java.lang.String width)</para>
               </entry>
               <entry>
                  <para>The width can't be specified in this component because its width is determined by other region components (West or East).</para>
               </entry>
               <entry>
                  <para>void</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="LayoutRegion">org.zkoss.zkex.zul.LayoutRegion </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2><title>Chart</title>
      <para>A <code>chart</code> is used to show a set of data as a graph. It helps users to judge things with a snapshot. To use a chart component , developers must prepare a <code>ChartModel </code>and a <code>ChartEngine.</code> Developers also set proper chart type, and the threeD (3D) attribute to draw proper chart. The model and type must match to each other; or the result is unpredictable. The 3D chart is not supported on all chart type.</para>
      <para/>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Type</para>
                  </entry>
                  <entry>
                     <para>Model</para>
                  </entry>
                  <entry>
                     <para>3D</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>pie</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>PieModel</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>o</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>ring</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>PieModel</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>x</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>bar</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>CategoryModel</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>o</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>line</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>CategoryModel </code>or<code> XYModel</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>o</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>area</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>CategoryModel </code>or<code> XYModel</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>x</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>stacked_bar </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>CategoryModel</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>o</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>stacked_area </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>CategoryModel </code>or<code> XYModel</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>x</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>waterfall </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>CategoryModel</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>x</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>polar </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>XYModel</code>
                  </para>
               </entry>
               <entry>
                  <para>x</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>scatter </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>XYModel</code>
                  </para>
               </entry>
               <entry>
                  <para>x</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>time_series </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>XYModel</code>
                  </para>
               </entry>
               <entry>
                  <para>x</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>polar </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>XYModel</code>
                  </para>
               </entry>
               <entry>
                  <para>x</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>step_area </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>XYModel</code>
                  </para>
               </entry>
               <entry>
                  <para>x</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>step </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>XYModel</code>
                  </para>
               </entry>
               <entry>
                  <para>x</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>histogram </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>XYModel</code>
                  </para>
               </entry>
               <entry>
                  <para>x</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>candlestick </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>HiLoModel</code>
                  </para>
               </entry>
               <entry>
                  <para>x</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>hilow </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>HiLoModel</code>
                  </para>
               </entry>
               <entry>
                  <para>x</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para>
         <code/>
      </para>
      <para>
         <graphic fileref="images/chart.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;vbox&gt;&#xD;&lt;chart id="mychart" title="Pie Chart Demo" width="500" height="250" type="pie" threeD="true" fgAlpha="128"/&gt;&#xD;&lt;zscript&gt;&#xD;PieModel model = new MyPieModel();&#xD;mychart.setModel(model);&#xD;&lt;/zscript&gt;&#xD;&lt;/vbox&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Chart</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE </para></sect3><sect3><title>Supported Events</title>
      <para/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="MouseEvent">
                        <code/>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes user has clicked the component.</code>
                  </para>
                  <para>
                     <code>Use getX(), getY() method to get coo</code>
                     <code>rdinates.</code>
                  </para>
                  <para>
                     <code>Use getArea() method to get the area component which user clicks on.</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>bgAlpha</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the background alpha (transparency, 0 ~ 255).</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>255</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>bgColor</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the background color of the chart.It must be in <code>#RRGGBB</code> format (hexdecimal).</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>fgAlpha</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the foreground alpha (transparency, 0 ~ 255).</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>255</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>height</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets height of chart, it must be a integer string</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>200</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>orient</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the chart orientation.</para>
                  <para>Values: <code>vertical | horizontal </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>vertical</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>paneAlpha</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the pane alpha (transparency, 0 ~ 255).</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>255</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>panelColor</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the pane color of the chart.It must be <code>#RRGGBB</code> format (hexdecimal).</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>per</code>
                     <code>iod</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the period used in Time Series Chart.</para>
                  <para>Values : millisecond | second | minute | | hour | day | week | month | quarter | year</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>showLegend</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the flag of showing the chart's legend </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>true</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>showTooltiptext</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the flag of showing the chart's tool tip text</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>true</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>threeD</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets true to show three dimensional graph (If a type of chart got no 3d peer, this is ignored).</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>title</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the chart's title.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>type</code>
                  </para>
               </entry>
               <entry>
                  <para>Set the chart's type </para>
                  <para>Values: <code>pie | ring | bar | line | area | stacked_bar</code> | <code>stacked_</code>area | <code>waterfall | polar | scatter | time_series | polar | step_area</code> | <code>step | histogram | candlestick | hilow </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>width</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets width of chart, it must be a integer string</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>400</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>xAxis</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the label in xAxis. </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>yAxis</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the label in yAxis. </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getAreaListener</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the renderer to render each area, or null if the default renderer is used.</para>
               </entry>
               <entry>
                  <para>
                     <code>ChartAreaListener</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getBgRGB</code>
                  </para>
               </entry>
               <entry>
                  <para>Get the background color in int array (0: red, 1: green, 2:blue).</para>
               </entry>
               <entry>
                  <para>
                     <code>int[]</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getEngine</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the implemetation chart engine.</para>
               </entry>
               <entry>
                  <para>
                     <code>ChartEngine</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getIntHeight</code>
                  </para>
               </entry>
               <entry>
                  <para>Get the chart int width in pixel</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getIntWidth</code>
                  </para>
               </entry>
               <entry>
                  <para>Get the chart int width in pixel</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getModel</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the chart model associated with this chart, or null if this chart is not associated with any chart data model</para>
               </entry>
               <entry>
                  <para>
                     <code>ChartModel</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getPaneRGB</code>
                  </para>
               </entry>
               <entry>
                  <para>Get the pane color in int array (0: red, 1: green, 2:blue).</para>
               </entry>
               <entry>
                  <para>
                     <code>int[]</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getTimeZone</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the time zone that this Time Series Chart belongs to, or null if the default time zone is used.</para>
               </entry>
               <entry>
                  <para>
                     <code>TimeZone</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>newChartEngine</code>
                  </para>
               </entry>
               <entry>
                  <para>Instantiates the default chart engine</para>
               </entry>
               <entry>
                  <para>
                     <code>ChartEngine</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setAreaListener</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the renderer which is used to render each area</para>
               </entry>
               <entry>
                  <para>
                     <code/>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setEngine</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the chart engine</para>
               </entry>
               <entry>
                  <para>
                     <code/>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setModel</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the chart model associated with this chart</para>
               </entry>
               <entry>
                  <para>
                     <code/>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setTimeZone</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the time zone that this Time Series Chart belongs to, or null if the default time zone is used</para>
               </entry>
               <entry>
                  <para>
                     <code/>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>smartDrawChart</code>
                  </para>
               </entry>
               <entry>
                  <para>mark a draw flag to inform that this Chart needs update</para>
               </entry>
               <entry>
                  <para>
                     <code/>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Imagemap">org.zkoss.zul.Imagemap</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="Image">org.zkoss.zul.Image</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="Checkbox"><title>Checkbox</title>
      <para>A checkbox.</para>
      <para>
         <graphic fileref="images/checkbox.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="Checkbox demo" border="normal" width="350px"&gt;&#xD;        &lt;checkbox id="apple" label="Apple" onCheck="doChecked()" /&gt;        &#xD;        &lt;checkbox id="orange" label="Orange" onCheck="doChecked()" /&gt;        &#xD;        &lt;checkbox id="banana" label="Banana" onCheck="doChecked()" /&gt;        &#xD;        &lt;hbox&gt;You have selected :&lt;label id="fruit2"/&gt;&lt;/hbox&gt;        &#xD;        &lt;zscript&gt;        &#xD;            void doChecked() {            &#xD;                fruit2.value = (apple.isChecked() ? apple.label+' ' : &amp;quot;&amp;quot;)                 &#xD;                    + (orange.isChecked() ? orange.label+' ' : &amp;quot;&amp;quot;)                     &#xD;                    + (banana.isChecked() ? banana.label+' ' : &amp;quot;&amp;quot;);                    &#xD;            }            &#xD;        &lt;/zscript&gt;        &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Button</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*ALL </para></sect3><sect3><title>Supported Events</title></sect3><sect3><title/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onRightClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="MouseEvent">
                        <code/>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes user has right-clicked the component.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onDoubleClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="MouseEvent">
                        <code/>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes user has double-clicked the component.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onFocus</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event</code>
                     </link>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes when a component gets the focus.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onBlur</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.even.Event</code>
                     </link>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Description: Denotes when a component loses the focus.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>onCheck</para>
               </entry>
               <entry>
                  <para>
                     <link linkend="CheckEvent">
                        <code>org.zkoss.zk.ui.event.CheckEvent</code>
                     </link>
                  </para>
                  <para>
                     <code>Description: Denotes when a component loses the focus.</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>checked</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets whether it is checked.</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>dis</code>
                     <code>abled</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether it is disabled.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>name</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the name of this component.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>tabindex</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the tab order of this component. </para>
               </entry>
               <entry>
                  <para>
                     <code>int </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>-1</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getInnerAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para>Appends interior attributes for generating the HTML <code>checkbox</code> tag (the name, disabled and other attribute).</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getLabelAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the attributes used by the embedded HTML LABEL tag.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para>Appends exterior attributes for generating the HTML span tag (the event relevant attribute). </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="LabelImageElement">org.zkoss.zul.impl.LabelImageElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="LabelElement">org.zkoss.zul.impl.LabelElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Column"><title>Column</title>
      <para>A single <code>column</code> in a <code>Columns</code> element. Each child of the <code>Column</code> element is placed in each successive cell of the <code>grid</code>. The <code>column</code> with the most child elements determines the number of rows in each <code>column</code>. The use of column is mainly to define attributes for each cell in the <code>grid</code>. </para>
      <para>
         <graphic fileref="images/grid.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="Grid Demo" border="normal" width="360px"&gt;&#xD;    &lt;zscript&gt;    &#xD;    class Comp implements Comparator {    &#xD;        private boolean _asc;        &#xD;        public Comp(boolean asc) {        &#xD;            _asc = asc;            &#xD;        }        &#xD;        public int compare(Object o1, Object o2) {        &#xD;            String s1 = o1.getChildren().get(0).getValue(),            &#xD;                s2 = o2.getChildren().get(0).getValue();                &#xD;            int v = s1.compareTo(s2);            &#xD;            return _asc ? v: -v;            &#xD;        }        &#xD;    }    &#xD;    Comp asc = new Comp(true), dsc = new Comp(false);    &#xD;    &lt;/zscript&gt;    &#xD;    &lt;grid&gt;    &#xD;        &lt;columns sizable="true"&gt;        &#xD;            &lt;column label="Type" sortAscending="&amp;#36;{asc}" sortDescending="&amp;#36;{dsc}"/&gt;            &#xD;            &lt;column label="Content"/&gt;            &#xD;        &lt;/columns&gt;        &#xD;        &lt;rows&gt;        &#xD;            &lt;row&gt;            &#xD;                &lt;label value="File:"/&gt;                &#xD;                &lt;textbox width="99%"/&gt;                &#xD;            &lt;/row&gt;            &#xD;            &lt;row&gt;            &#xD;                &lt;label value="Type:"/&gt;                &#xD;                &lt;hbox&gt;                &#xD;                    &lt;listbox rows="1" mold="select"&gt;                    &#xD;                        &lt;listitem label="Java Files,(*.java)"/&gt;                        &#xD;                        &lt;listitem label="All Files,(*.*)"/&gt;                        &#xD;                    &lt;/listbox&gt;                    &#xD;                    &lt;button label="Browse..."/&gt;                    &#xD;                &lt;/hbox&gt;                &#xD;            &lt;/row&gt;            &#xD;            &lt;row&gt;            &#xD;                &lt;label value="Options:"/&gt;                &#xD;                &lt;textbox rows="3" width="99%"/&gt;                &#xD;            &lt;/row&gt;            &#xD;        &lt;/rows&gt;        &#xD;    &lt;/grid&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Column</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*ALL</para></sect3><sect3><title>Supported Events</title></sect3><sect3><title/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="MouseEvent">
                        <code/>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes user has clicked the component. </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onRightClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="MouseEvent">
                        <code/>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes user has right-clicked the component.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onDoubleClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="MouseEvent">
                        <code/>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes user has double-clicked the component.</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>sortAscending</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the ascending sorter, or null for no sorter for the ascending order.</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.util.Comparator </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>sortDescending</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the descending sorter, or null for no sorter for the descending order. </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.util.Comparator</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>sortDirection</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the sort direction. </para>
                  <para>Value: ascending|descending|natural</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>natural</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <colspec colnum="1" colname="c1"/>
            <colspec colnum="2" colname="c2"/>
            <colspec colnum="3" colname="c3"/>
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getGrid()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the <code>grid</code> that contains this column. </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Grid</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getSclass()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the style class.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onSort()</code>
                  </para>
               </entry>
               <entry>
                  <para>It invokes <code>sort(boolean)</code> to sort list items and maintain <code>getSortDirection()</code>.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setParent(org.zkoss.zk.ui.Component parent) </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setSortAscending(java.lang.String) </code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the ascending sorter with the class name, or null for no sorter for the ascending order.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setSortDescending(java.lang.String) </code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the descending sorter with the class name, or null for no sorter for the descending order.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>sort(boolean)</code>
                  </para>
               </entry>
               <entry>
                  <para>Sorts the rows (<code>Row</code>) based on <code>getSortAscending()</code> and <code>getSortDescending()</code>, if <code>getSortDirection()</code> doesn't matches the ascending argument.</para>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>sort(boolean, boolean) </code>
                  </para>
               </entry>
               <entry>
                  <para>Sorts the rows (<code>Row</code>) based on <code>getSortAscending()</code> and <code>getSortDescending()</code>.</para>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="HeaderElement">org.zkoss.zul.impl.HeaderElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Columnchildren"><title>Columnchildren</title>
      <para>Child of Columnchildren only can be Panel. </para>
      <para>
         <graphic fileref="images/ColumnLayout.PNG">2
			
		</graphic>
      </para>
      <para/>
      <programlisting>&lt;columnlayout&gt;&#xD;    &lt;columnchildren width="30%" style="padding: 5px"&gt;    &#xD;        &lt;panel height="100px" style="margin-bottom:10px"        &#xD;            title="column1-1" border="normal" maximizable="true" collapsible="true"&gt;            &#xD;            &lt;panelchildren&gt;Panel&lt;/panelchildren&gt;            &#xD;        &lt;/panel&gt;        &#xD;        &lt;panel height="100px" framable="true" title="column1-2"        &#xD;            border="normal" maximizable="true" style="margin-bottom:10px"&gt;            &#xD;            &lt;panelchildren&gt;Panel&lt;/panelchildren&gt;            &#xD;        &lt;/panel&gt;        &#xD;        &lt;panel height="100px" title="column1-3" border="normal" closable="true"&gt;        &#xD;            &lt;panelchildren&gt;Panel&lt;/panelchildren&gt;            &#xD;        &lt;/panel&gt;        &#xD;    &lt;/columnchildren&gt;    &#xD;    &lt;columnchildren width="40%" style="padding: 10px"&gt;    &#xD;        &lt;panel title="Data" maximizable="true" border="normal" style="margin-bottom:10px"&gt;        &#xD;            &lt;panelchildren&gt;            &#xD;                &lt;grid fixedLayout="true" style="border:0px" height="100%"&gt;                &#xD;                    &lt;columns&gt;                    &#xD;                        &lt;column label="category" /&gt;                        &#xD;                        &lt;column label="value" /&gt;                        &#xD;                    &lt;/columns&gt;                    &#xD;                    &lt;rows&gt;                    &#xD;                        &lt;row&gt;                        &#xD;                            &lt;label id="c0" value="C/C++" /&gt;                            &#xD;                            &lt;decimalbox id="v0" value="21.2"                            &#xD;                                constraint="no empty" onChange="update(0)" /&gt;                                &#xD;                        &lt;/row&gt;                        &#xD;                        &lt;row&gt;                        &#xD;                            &lt;label id="c1" value="VB" /&gt;                            &#xD;                            &lt;decimalbox id="v1" value="10.2"                            &#xD;                                constraint="no empty" onChange="update(1)" /&gt;                                &#xD;                        &lt;/row&gt;                        &#xD;                        &lt;row&gt;                        &#xD;                            &lt;label id="c2" value="Java" /&gt;                            &#xD;                            &lt;decimalbox id="v2" value="40.4"                            &#xD;                                constraint="no empty" onChange="update(2)" /&gt;                                &#xD;                        &lt;/row&gt;                        &#xD;                        &lt;row&gt;                        &#xD;                            &lt;label id="c3" value="PHP" /&gt;                            &#xD;                            &lt;decimalbox id="v3" value="28.2"                            &#xD;                                constraint="no empty" onChange="update(3)" /&gt;                                &#xD;                        &lt;/row&gt;                        &#xD;                    &lt;/rows&gt;                    &#xD;                &lt;/grid&gt;                &#xD;            &lt;/panelchildren&gt;            &#xD;        &lt;/panel&gt;        &#xD;        &lt;panel border="normal"&gt;        &#xD;            &lt;panelchildren&gt;            &#xD;                &lt;checkbox label="3D Chart" checked="true"                &#xD;                    onCheck="mychart.setThreeD(self.isChecked())" /&gt;                    &#xD;                &lt;chart id="mychart" title="Pie Chart Demo" width="320px"                &#xD;                    type="pie" threeD="true" fgAlpha="128"&gt;                    &#xD;                    &lt;attribute name="onClick"&gt;                    &#xD;                            String areaid = event.getArea();                             &#xD;                            if (areaid!= null) {                             &#xD;                            Area area = self.getFellow(areaid);                            &#xD;                            alert(""+area.getAttribute("entity")+":"+area.getTooltiptext());                            &#xD;                            }                            &#xD;                        &lt;/attribute&gt;                        &#xD;                    &lt;zscript&gt;                    &#xD;                            void update(int rowIndex) {                             &#xD;                            Label lb = (Label) self.getFellow("c"+rowIndex);                            &#xD;                            Decimalbox db = (Decimalbox)self.getFellow("v"+rowIndex);                            &#xD;                            model.setValue(lb.value, newDouble(db.getValue().doubleValue())); }                            &#xD;                            PieModel model = new SimplePieModel();                            &#xD;                            for(int j=0; j &amp;lt; 4; ++j) { update(j); }                            &#xD;                            mychart.setModel(model);                            &#xD;                        &lt;/zscript&gt;                        &#xD;                &lt;/chart&gt;                &#xD;            &lt;/panelchildren&gt;            &#xD;        &lt;/panel&gt;        &#xD;    &lt;/columnchildren&gt;    &#xD;&lt;/columnlayout&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zkex.zul.Columnchildren</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Panel">
            <code>Panel</code>
         </link>
      </para></sect3><sect3><title>Supported Events </title>
      <para>*None</para></sect3><sect3><title>Properties</title>
      <para>*None</para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>getMoldSclass() </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>String</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>insertBefore(org.zkoss.zk.ui.Component child, org.zkoss.zk.ui.Component insertBefore)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>boolean</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setParent(org.zkoss.zk.ui.Component parent)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2><title/></sect2><sect2><title>Columnlayout</title>
      <para>A columnlayout lays out a container which can have multiple columns, and each column may contain one or more panel.Use Columnlayout need assign width (either present or pixel) on every Columnchildren, or we cannot make sure about layout look. </para>
      <para>
         <graphic fileref="images/ColumnLayout.PNG">2
			
		</graphic>
      </para>
      <programlisting>&lt;columnlayout&gt;&#xD;    &lt;columnchildren width="30%" style="padding: 5px"&gt;    &#xD;        &lt;panel height="100px" style="margin-bottom:10px"        &#xD;            title="column1-1" border="normal" maximizable="true" collapsible="true"&gt;            &#xD;            &lt;panelchildren&gt;Panel&lt;/panelchildren&gt;            &#xD;        &lt;/panel&gt;        &#xD;        &lt;panel height="100px" framable="true" title="column1-2"        &#xD;            border="normal" maximizable="true" style="margin-bottom:10px"&gt;            &#xD;            &lt;panelchildren&gt;Panel&lt;/panelchildren&gt;            &#xD;        &lt;/panel&gt;        &#xD;        &lt;panel height="100px" title="column1-3" border="normal" closable="true"&gt;        &#xD;            &lt;panelchildren&gt;Panel&lt;/panelchildren&gt;            &#xD;        &lt;/panel&gt;        &#xD;    &lt;/columnchildren&gt;    &#xD;    &lt;columnchildren width="40%" style="padding: 10px"&gt;    &#xD;        &lt;panel title="Data" maximizable="true" border="normal" style="margin-bottom:10px"&gt;        &#xD;            &lt;panelchildren&gt;            &#xD;                &lt;grid fixedLayout="true" style="border:0px" height="100%"&gt;                &#xD;                    &lt;columns&gt;                    &#xD;                        &lt;column label="category" /&gt;                        &#xD;                        &lt;column label="value" /&gt;                        &#xD;                    &lt;/columns&gt;                    &#xD;                    &lt;rows&gt;                    &#xD;                        &lt;row&gt;                        &#xD;                            &lt;label id="c0" value="C/C++" /&gt;                            &#xD;                            &lt;decimalbox id="v0" value="21.2"                            &#xD;                                constraint="no empty" onChange="update(0)" /&gt;                                &#xD;                        &lt;/row&gt;                        &#xD;                        &lt;row&gt;                        &#xD;                            &lt;label id="c1" value="VB" /&gt;                            &#xD;                            &lt;decimalbox id="v1" value="10.2"                            &#xD;                                constraint="no empty" onChange="update(1)" /&gt;                                &#xD;                        &lt;/row&gt;                        &#xD;                        &lt;row&gt;                        &#xD;                            &lt;label id="c2" value="Java" /&gt;                            &#xD;                            &lt;decimalbox id="v2" value="40.4"                            &#xD;                                constraint="no empty" onChange="update(2)" /&gt;                                &#xD;                        &lt;/row&gt;                        &#xD;                        &lt;row&gt;                        &#xD;                            &lt;label id="c3" value="PHP" /&gt;                            &#xD;                            &lt;decimalbox id="v3" value="28.2"                            &#xD;                                constraint="no empty" onChange="update(3)" /&gt;                                &#xD;                        &lt;/row&gt;                        &#xD;                    &lt;/rows&gt;                    &#xD;                &lt;/grid&gt;                &#xD;            &lt;/panelchildren&gt;            &#xD;        &lt;/panel&gt;        &#xD;        &lt;panel border="normal"&gt;        &#xD;            &lt;panelchildren&gt;            &#xD;                &lt;checkbox label="3D Chart" checked="true"                &#xD;                    onCheck="mychart.setThreeD(self.isChecked())" /&gt;                    &#xD;                &lt;chart id="mychart" title="Pie Chart Demo" width="320px"                &#xD;                    type="pie" threeD="true" fgAlpha="128"&gt;                    &#xD;                    &lt;attribute name="onClick"&gt;                    &#xD;                            String areaid = event.getArea();                             &#xD;                            if (areaid!= null) {                             &#xD;                            Area area = self.getFellow(areaid);                            &#xD;                            alert(""+area.getAttribute("entity")+":"+area.getTooltiptext());                            &#xD;                            }                            &#xD;                        &lt;/attribute&gt;                        &#xD;                    &lt;zscript&gt;                    &#xD;                            void update(int rowIndex) {                             &#xD;                            Label lb = (Label) self.getFellow("c"+rowIndex);                            &#xD;                            Decimalbox db = (Decimalbox)self.getFellow("v"+rowIndex);                            &#xD;                            model.setValue(lb.value, newDouble(db.getValue().doubleValue())); }                            &#xD;                            PieModel model = new SimplePieModel();                            &#xD;                            for(int j=0; j &amp;lt; 4; ++j) { update(j); }                            &#xD;                            mychart.setModel(model);                            &#xD;                        &lt;/zscript&gt;                        &#xD;                &lt;/chart&gt;                &#xD;            &lt;/panelchildren&gt;            &#xD;        &lt;/panel&gt;        &#xD;    &lt;/columnchildren&gt;    &#xD;&lt;/columnlayout&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zkex.zul.Columnlayout</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Columnchildren">
            <code>Columnchildern</code>
         </link>
      </para></sect3><sect3><title>Supported Events</title>
      <para>*None</para></sect3><sect3><title>Properties</title>
      <para>*None</para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>getMoldSclass() </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>String</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>insertBefore(org.zkoss.zk.ui.Component child, org.zkoss.zk.ui.Component insertBefore)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>boolean</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setParent(org.zkoss.zk.ui.Component parent)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="Columns"><title>Columns</title>
      <para>Defines the <code>columns</code> of a <code>grid</code>. </para>
      <para>Each child of a <code>columns</code> element should be a <code>org.zkoss.zul.Column</code> element.</para>
      <para>
         <graphic fileref="images/grid.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="Grid Demo" border="normal" width="360px"&gt;&#xD;    &lt;zscript&gt;    &#xD;    class Comp implements Comparator {    &#xD;        private boolean _asc;        &#xD;        public Comp(boolean asc) {        &#xD;            _asc = asc;            &#xD;        }        &#xD;        public int compare(Object o1, Object o2) {        &#xD;            String s1 = o1.getChildren().get(0).getValue(),            &#xD;                s2 = o2.getChildren().get(0).getValue();                &#xD;            int v = s1.compareTo(s2);            &#xD;            return _asc ? v: -v;            &#xD;        }        &#xD;    }    &#xD;    Comp asc = new Comp(true), dsc = new Comp(false);    &#xD;    &lt;/zscript&gt;    &#xD;    &lt;grid&gt;    &#xD;        &lt;columns sizable="true"&gt;        &#xD;            &lt;column label="Type" sortAscending="&amp;#36;{asc}" sortDescending="&amp;#36;{dsc}"/&gt;            &#xD;            &lt;column label="Content"/&gt;            &#xD;        &lt;/columns&gt;        &#xD;        &lt;rows&gt;        &#xD;            &lt;row&gt;            &#xD;                &lt;label value="File:"/&gt;                &#xD;                &lt;textbox width="99%"/&gt;                &#xD;            &lt;/row&gt;            &#xD;            &lt;row&gt;            &#xD;                &lt;label value="Type:"/&gt;                &#xD;                &lt;hbox&gt;                &#xD;                    &lt;listbox rows="1" mold="select"&gt;                    &#xD;                        &lt;listitem label="Java Files,(*.java)"/&gt;                        &#xD;                        &lt;listitem label="All Files,(*.*)"/&gt;                        &#xD;                    &lt;/listbox&gt;                    &#xD;                    &lt;button label="Browse..."/&gt;                    &#xD;                &lt;/hbox&gt;                &#xD;            &lt;/row&gt;            &#xD;            &lt;row&gt;            &#xD;                &lt;label value="Options:"/&gt;                &#xD;                &lt;textbox rows="3" width="99%"/&gt;                &#xD;            &lt;/row&gt;            &#xD;        &lt;/rows&gt;        &#xD;    &lt;/grid&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Columns</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*<link linkend="Column">Column</link>
      </para></sect3><sect3><title>Supported Events</title></sect3><sect3><title/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onColSize</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="ColSizeEvent">
                        <code>org.zkoss.zul.event.ColSizeEvent</code>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> </code>
                     <code>Notifies the parent of a group of headers that the widths</code>
                  </para>
                  <para>of two of its children are changed by the user.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <para>*NONE</para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>ins</code>
                     <code>ertBefore(org.zkoss.zk.ui.Component, org.zkoss.zk.ui.Component) </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>removeChild(org.zkoss.zk.ui.Component) </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setParent(org.zkoss.zk.ui.Component) </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="HeadersElement">org.zkoss.zul.impl.HeadersElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Combobox"><title>Combobox</title>
      <para>Components: <code>combobox</code> and <code>comboitem</code>.</para>
      <para>A <code>combobox</code> is a special text box that embeds a drop-down list. With <code>comboboxes</code>, users are allowed to select from a drop-down list, in addition to entering the text manually. </para>
      <para>
         <graphic fileref="images/combobox.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;combobox&gt;&#xD;    &lt;comboitem label="Simple and Rich"/&gt;    &#xD;    &lt;comboitem label="Cool!"/&gt;    &#xD;    &lt;comboitem label="Ajax and RIA"/&gt;    &#xD;&lt;/combobox&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Combobox</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Comboitem">Comboitem</link> 
      </para></sect3><sect3><title>Supported Events</title></sect3><sect3><title/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onChange</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="InputEvent">
                        <code>org.zkoss.zk.ui.event.InputEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="MouseEvent">
                        <code/>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> </code>
                     <code>Denotes the content of an input component has been</code>
                  </para>
                  <para>modified by the user.<code> </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>onChanging</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="InputEvent">
                        <code>org.zkoss.zk.ui.event.InputEvent</code>
                     </link>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> </code>
                     <code>Denotes that user is changing the content of an input </code>component. Notice that the component's content (at the server) won't be changed until <code>onChange</code> is received.</para>
                  <para>Thus, you have to invoke the <code>getValue</code> method in the <code>InputEvent</code> class to retrieve the temporary value.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onSelection</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="SelectionEvent">
                        <code>org.zkoss.zk.ui.event.SelectionEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="MouseEvent">
                        <code/>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> </code>
                     <code>Denotes that user is selecting a portion of the text of an </code>input component. You can retrieve the start and end position of the selected text by use of the <code>getStart</code> and <code>getEnd</code> methods.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onFocus</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event</code>
                     </link>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes when a component gets the focus.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onBlur</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.even.Event</code>
                     </link>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes when a component loses the focus.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onOpen</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="OpenEvent">
                        <code>org.zkoss.zk.ui.event.OpenEvent</code>
                     </link>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> </code>
                     <code>Denotes user has opened or closed a component. Note:</code>
                  </para>
                  <para>unlike <code>onClose</code>, this event is only a notification. The</para>
                  <para>client sends this event after opening or closing the</para>
                  <para>component.</para>
                  <para>It is useful to implement load-on-demand by listening to</para>
                  <para>the <code>onOpen</code> event, and creating components when the</para>
                  <para>first time the component is opened.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onSelect</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="SelectEvent">
                        <code>org.zkoss.zul.event.SelectEvent</code>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Represents an event cause by user's the list selection is changed at the client. </code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>aut</code>
                     <code>ocomplete</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets whether to automatically complete this text box by matching the nearest item. </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>aut</code>
                     <code>odrop</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether to automatically drop the list if users is changing this text box. </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>buttonVisible</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether the button (on the right of the textbox) is visible. </para>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>true</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>image</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the URI of the button image. </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>isChildable()</code>
                  </para>
               </entry>
               <entry>
                  <para>Determines whether it accepts child components</para>
                  <para>Value: <code>true</code>
                  </para>
                  <para>Note: child is allowed. </para>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>appendItem(java.lang.String)</code>
                  </para>
               </entry>
               <entry>
                  <para>Appends an item. </para>
               </entry>
               <entry>
                  <para>
                     <code>org</code>
                     <code>.zkoss.zul.Comboitem</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getInnerAttrs() </code>
                  </para>
               </entry>
               <entry>
                  <para>Generates the Client-Side-Action attributes to the interior tag. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Str</code>
                     <code>ing</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getItemAtIndex(int) </code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the item at the specified index. </para>
               </entry>
               <entry>
                  <para>
                     <code>org</code>
                     <code>.zkoss.zul.Comboitem</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getItemCount()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the number of items.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getItems()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns a 'live' list of all org.zkoss.zul.Comboitem.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.util.List</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getSelectedItem()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the selected item, or null if no matched. </para>
               </entry>
               <entry>
                  <para>
                     <code>org</code>
                     <code>.zkoss.zul.Comboitem</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>ins</code>
                     <code>ertBefore(org.zkoss.zk.ui.Component)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onChildAdded(org.zkoss.zk.ui.Component) </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onChildRemoved(org.zkoss.zk.ui.Component) </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>removeItemAt(int)</code>
                  </para>
               </entry>
               <entry>
                  <para>Removes the child item in the list box at the given index. </para>
               </entry>
               <entry>
                  <para>
                     <code>org</code>
                     <code>.zkoss.zul.Comboitem</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setMultiline(boolean)</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether it is multiline.</para>
                  <para>Note: Combobox doesn't support multiline.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setRows(int)</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the rows.</para>
                  <para>Note: Combobox doesn't support multiple rows.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Textbox">org.zkoss.zul.Textbox</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="InputElement">org.zkoss.zul.impl.InputElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Comboitem"><title>Comboitem</title>
      <para>An item of a combo box.</para>
      <para>
         <graphic fileref="images/combobox.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;combobox&gt;&#xD;    &lt;comboitem label="Simple and Rich"/&gt;    &#xD;    &lt;comboitem label="Cool!"/&gt;    &#xD;    &lt;comboitem label="Ajax and RIA"/&gt;    &#xD;&lt;/combobox&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.C</code>
         <code>omboitem</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE</para></sect3><sect3><title>Supported Events</title>
      <para>*NONE</para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>value</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Associate the value with this combo item. </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Object</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>des</code>
                     <code>cription</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the description.</para>
               </entry>
               <entry>
                  <para>java.lang.String</para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;empty&gt;</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>isChildable()</code>
                  </para>
               </entry>
               <entry>
                  <para>Determines whether it accepts child components</para>
                  <para>Value: <code>false</code>
                  </para>
                  <para>Note: No child is allowed. </para>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setParent(org.zkoss.zk.ui.Component)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="LabelImageElement">org.zkoss.zul.impl.LabelImageElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="LabelElement">org.zkoss.zul.impl.LabelElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Datebox"><title>Datebox</title>
      <para>An edit box for holding a date. After click on the calender, a <code>calender</code> will pop-up for inputting date.</para>
      <para>Mouseless Entry <code>datebox</code>
      </para>
      <para>• Alt+DOWN to pop up the <code>calendar.</code>
      </para>
      <para>• LEFT, RIGHT, UP and DOWN to change the selected day from the <code>calendar.</code>
      </para>
      <para>• ENTER to activate the selection by copying the selected day to the <code>datebox</code> control.</para>
      <para>• Alt+UP or ESC to give up the selection and close the <code>calendar</code>.</para>
      <para>
         <graphic fileref="images/datebox.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;datebox lenient="true" image="newButton.jpg" buttonVisible="false" /&gt;&#xD;&lt;datebox lenient="false" compact="false" buttonVisible="true" /&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Datebox</code> 
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE </para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>OnClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="MouseEvent">
                        <code/>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes user has clicked the component. </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>OnSelection</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="SelectionEvent">
                        <code>org.zkoss.zk.ui.event.SelectionEvent</code>
                     </link>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes that user is selecting a portion of the text of an input component. You can retrieve the start and end position of the selected text by use of the getStart and getEnd methods.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>OnFocus</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event</code>
                     </link>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes when a component gets the focus.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>OnBlur</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.even.Event</code>
                     </link>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Description: Denotes when a component loses the focus.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>OnChange</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="InputEvent">
                        <code>org.zkoss.zk.ui.even.InputEvent</code>
                     </link>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> An input control notifies the application with the onChange event if its content is changed</code>
                  </para>
                  <para>
                     <code>by the user.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>OnChanging</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="InputEvent">
                        <code>org.zkoss.zk.ui.even.InputEvent</code>
                     </link>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Desczription:</code>
                     <code> An input control also notifies the application with the onChanging event, when user is</code>
                  </para>
                  <para>
                     <code>changing the content.</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Attributes</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>image</code>
                  </para>
               </entry>
               <entry>
                  <para>the URI of the button image</para>
                  <para>Values: <code>url</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;empty string&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>lenient</code>
                  </para>
               </entry>
               <entry>
                  <para>whether or not date/time parsing is to be lenient</para>
                  <para>With lenient parsing, the parser may use heuristics to interpret inputs that do not precisely match this object's format.</para>
                  <para>With strict parsing, inputs must match this object's format</para>
                  <para>Values:<code>true|false</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>true</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>compact</code>
                  </para>
               </entry>
               <entry>
                  <para>whether to use a compact layout</para>
                  <para>Values:<code>true|false</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>buttonVisible</code>
                  </para>
               </entry>
               <entry>
                  <para>whether the button (on the right of the textbox) is visible</para>
                  <para>Values:<code>true|false</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>true</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>timezone</code>
                  </para>
               </entry>
               <entry>
                  <para>the time zone that this date box belongs to, or <code>null</code> if the default time zone is used.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.util.TimeZone </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>Value</code>
                  </para>
               </entry>
               <entry>
                  <para>the value (in Date)</para>
               </entry>
               <entry>
                  <para>
                     <code>java.util.Date</code>
                     <code> </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;empty string&gt;</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Methods</title>
      <para/>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getDateFormat()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the date format of the specified format Default: it uses <code>SimpleDateFormat </code>to format the date. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.text.Dateformat</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getDefaultFormat()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the default format, which is used when constructing a d<code>atebox. </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getRealStyleFlags()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns RS_NO_WIDTH|RS_NO_HEIGHT </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>GetInnerAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="FormatInputElement">
                        <code>org.zkoss.zul.impl.FormatInputElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="InputElement">
                        <code>org.zkoss.zul.impl.InputElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.impl.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link>
                     <code> </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Detail"><title>Detail</title>
      <para>The detail component is used to display a detailed section where a master row and </para>
      <para>multiple detail rows are on the same row. </para>
      <para/>
      <para>
         <graphic fileref="images/detail.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xD;&lt;zk&gt;&#xD;    Please open/close the +/- button, and the layout of this page shows properly.    &#xD;    &lt;grid fixedLayout="true" width="600px"&gt;    &#xD;        &lt;columns&gt;        &#xD;            &lt;column width="25px" /&gt;            &#xD;            &lt;column&gt;Product Name&lt;/column&gt;            &#xD;            &lt;column&gt;Price&lt;/column&gt;            &#xD;            &lt;column&gt;Item location&lt;/column&gt;            &#xD;        &lt;/columns&gt;        &#xD;        &lt;rows&gt;        &#xD;            &lt;row&gt;            &#xD;                &lt;detail&gt;                &#xD;                                            &lt;hbox&gt;                                            &#xD;                        &lt;image width="200px" height="200px" src="/img/icon_update.png"/&gt;                        &#xD;                        &lt;vbox&gt;                        &#xD;                            &lt;label value="Item Specifics - Item Condition"                            &#xD;                                style="font-weight:bold;font-style: italic;" /&gt;                                &#xD;                        &lt;hbox&gt;                        &#xD;                            &lt;label value="Condition:" /&gt;                            &#xD;                            &lt;label value="Used"                            &#xD;                                style="font-weight:bold;" /&gt;                                &#xD;                        &lt;/hbox&gt;                        &#xD;                        &lt;hbox&gt;                        &#xD;                            &lt;label value="Brand:" /&gt;                            &#xD;                            &lt;label value="Apple"                            &#xD;                                style="font-weight:bold;" /&gt;                                &#xD;                        &lt;/hbox&gt;                        &#xD;                        &lt;hbox&gt;                        &#xD;                            &lt;label value="Technology:" /&gt;                            &#xD;                            &lt;label value="DVI"                            &#xD;                                style="font-weight:bold;" /&gt;                                &#xD;                        &lt;/hbox&gt;                        &#xD;                        &lt;hbox&gt;                        &#xD;                            &lt;label value="Monitor Type:" /&gt;                            &#xD;                            &lt;label value="LCD/Flat Panel"                            &#xD;                                style="font-weight:bold;" /&gt;                                &#xD;                        &lt;/hbox&gt;                        &#xD;                        &lt;/vbox&gt;                        &#xD;                    &lt;/hbox&gt;                    &#xD;                &lt;/detail&gt;                &#xD;                &lt;label value="Apple 20-inch Aluminum Cinema Display M9177/A" /&gt;                &#xD;                &lt;label style="color:green;float:right;" value="US $202.50" /&gt;                &#xD;                &lt;label value="tulsa, ok, United States" /&gt;                &#xD;            &lt;/row&gt;            &#xD;        &lt;/rows&gt;        &#xD;    &lt;/grid&gt;    &#xD;&lt;/zk&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Detail</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*ALL</para></sect3><sect3><title>Supported Events</title></sect3><sect3><title/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead>
         </tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>contentStyle</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the CSS style for the content block of the window.</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>jave.lang.String </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code/>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>image</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the URI of the button image. </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>jave.lang.String </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code/>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>open</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether the detail is open.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code/>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead>
         </tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="HeadersElement">org.zkoss.zul.impl.HeadersElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="Doublebox"><title>Doublebox</title>
      <para>An edit box for holding an float point value (double).</para>
      <para>
         <graphic fileref="images/doublebox.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;doublebox value="2.3"/&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Doublebox</code> 
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE </para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>OnClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Description: </code>
                     <code>Denotes user has clicked the component.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>OnSelection</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="SelectionEvent">
                        <code>org.zkoss.zk.ui.event.SelectionEvent</code>
                     </link>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Description: </code>
                     <code>Denotes that user is selecting a portion of the text of an input component. You can retrieve the start and end position of the selected text by use of the getStart and getEnd methods.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>OnFocus</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event</code>
                     </link>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes when a component gets the focus.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>OnBlur</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.even.Event</code>
                     </link>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes when a component loses the focus.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>OnChange</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zk.ui.even.InputEvent</code>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Description: </code>
                     <code>An input control notifies the application with the onChange event if its content is changed</code>
                  </para>
                  <para>
                     <code>by the user.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>OnChanging</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="InputEvent">
                        <code>org.zkoss.zk.ui.even.InputEvent</code>
                     </link>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> An input control also notifies the application with the onChanging event, when user is</code>
                  </para>
                  <para>
                     <code>changing the content.</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Attributes</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>value</code>
                  </para>
               </entry>
               <entry>
                  <para>the value (in <code>Double</code>), might be null unless a constraint stops it. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.math.BigDecimal</code>
                     <code> </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>0</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Methods</title>
      <para/>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>intValue()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the value in integer. </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>longValue()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the value in long. </para>
               </entry>
               <entry>
                  <para>
                     <code>long</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>doubleValue()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the value in double. </para>
               </entry>
               <entry>
                  <para>
                     <code>double</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>shortValue()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the value in short.</para>
               </entry>
               <entry>
                  <para>
                     <code>short</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="NumberInputElement">
                        <code>org.zkoss.zul.impl.NumberInputElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="FormatInputElement">
                        <code>org.zkoss.zul.impl.FormatInputElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="InputElement">
                        <code>org.zkoss.zul.impl.InputElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.impl.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link>
                     <code> </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/>
      <para/></sect3></sect2><sect2><title>Div</title>
      <para>The same as <code>HTML DIV </code>tag.</para>
      <para>An extension. It has the same effect as<code> &lt;h:div xmlns:h="http://www.w3.org/1999/xhtml"&gt;</code>. Note: a Window without title and caption has the same visual effect as <code>Div</code>, but <code>Div</code> doesn't implement <code>IdSpace</code>. In other words, <code>Div</code> won't affect the uniqueness of identifiers. </para>
      <para>
         <graphic fileref="images/Div.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;div align="left" width="300px"&gt;&#xD;    &lt;doublebox /&gt;    &#xD;&lt;/div&gt;&#xD;&lt;div align="right" width="300px"&gt;&#xD;    &lt;doublebox /&gt;    &#xD;&lt;/div&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Div</code>
         <code> </code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*All</para></sect3><sect3><title>Supported Events</title>
      <para>*NONE </para></sect3><sect3><title>Attributes</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>align</code>
                  </para>
               </entry>
               <entry>
                  <para>The alignment</para>
                  <para>Values: <code>one of left, center, right, ustify.</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt; </code>
                  </para>
                  <para>
                     <code>Description: use browser default</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.impl.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link>
                     <code> </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="East"><title>East</title>
      <para>This component is a east region. The default class of CSS is specified "layout-region-east".</para>
      <para/>
      <para>
         <graphic fileref="images/layout.jpg">2
			
		</graphic>
      </para>
      <programlisting>&lt;borderlayout height="500px"&gt;&#xD;    &lt;north size="50%" border="0"&gt;    &#xD;        &lt;borderlayout&gt;        &#xD;            &lt;west size="25%" border="none" flex="true"&gt;            &#xD;                &lt;div style="background:#B8D335"&gt;                &#xD;                    &lt;label value="25%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/west&gt;            &#xD;            &lt;center border="none" flex="true"&gt;            &#xD;                &lt;div style="background:#E6D92C"&gt;                &#xD;                    &lt;label value="25%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/center&gt;            &#xD;            &lt;east size="50%" border="none" flex="true"&gt;            &#xD;                &lt;label value="Here is a non-border"                &#xD;                    style="color:gray;font-size:30px" /&gt;                    &#xD;            &lt;/east&gt;            &#xD;        &lt;/borderlayout&gt;        &#xD;    &lt;/north&gt;    &#xD;    &lt;center border="0"&gt;    &#xD;        &lt;borderlayout&gt;        &#xD;            &lt;west size="30%" flex="true" border="0"&gt;            &#xD;                &lt;div style="background:#E6D92C"&gt;                &#xD;                    &lt;label value="30%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/west&gt;            &#xD;            &lt;center&gt;            &#xD;                &lt;label value="Here is a border"                &#xD;                    style="color:gray;font-size:30px" /&gt;                    &#xD;            &lt;/center&gt;            &#xD;            &lt;east size="30%" flex="true" border="0"&gt;            &#xD;                &lt;div style="background:#B8D335"&gt;                &#xD;                    &lt;label value="30%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/east&gt;            &#xD;        &lt;/borderlayout&gt;        &#xD;    &lt;/center&gt;    &#xD;&lt;/borderlayout&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zkex.zul.East</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE</para></sect3><sect3><title>Supported Events </title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>OnOpen</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="OpenEvent">
                        <code>org.zkoss.zk.ui.event.OpenEvent</code>
                     </link>
                  </para>
                  <para>
                     <code>Description: </code>
                     <code>When a layout is collapsed or opened by a user, the </code>
                     <code>onOpen</code>
                     <code> event is sent to the application.</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>size</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the size of this region.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getPosition()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns <code>Borderlayout.NORTH.</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>setWidth(java.lang.String width)</para>
               </entry>
               <entry>
                  <para>The width can't be specified in this component because its width is determined by other region components (West or East).</para>
               </entry>
               <entry>
                  <para>void</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="LayoutRegion">org.zkoss.zkex.zul.LayoutRegion </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2><title>Fisheyebar</title>
      <para>A fisheye bar is a bar of fisheye that is a menu similar to the fish eye menu on the Mac OS.</para>
      <para/>
      <para>
         <graphic fileref="images/fisheyebar.PNG">2
			
		</graphic>
      </para>
      <programlisting>&lt;window&gt;&#xD;        Click "Change orient" button and move cursor over the fisheyebar before it changes.        &#xD;    &lt;separator/&gt;    &#xD;    Fisheyebar will be out of expected.(That is wrong)    &#xD;    &lt;fisheyebar id="fish" style="position: absolute; top: 50px;    &#xD;        left:100px;margin:20px;" attachEdge="top"&gt;        &#xD;        &lt;fisheye image="/img/icon_browser.png" label="Web Browser"        &#xD;            onClick="alert(self.label)" /&gt;            &#xD;        &lt;fisheye image="/img/icon_calendar.png" label="Calendar"        &#xD;            onClick="alert(self.label)" /&gt;            &#xD;        &lt;fisheye image="/img/icon_email.png" label="Email"        &#xD;            onClick="alert(self.label)" /&gt;            &#xD;        &lt;fisheye image="/img/icon_texteditor.png" label="Text Editor"        &#xD;            onClick="alert(self.label)" /&gt;            &#xD;        &lt;fisheye image="/img/icon_update.png" label="Software Update"        &#xD;            onClick="alert(self.label)" /&gt;            &#xD;        &lt;fisheye image="/img/icon_users.png" label="Users"        &#xD;            onClick="alert(self.label)" /&gt;            &#xD;    &lt;/fisheyebar&gt;    &#xD;    &lt;button label="Change orient"&gt;    &#xD;        &lt;attribute name="onClick"&gt;        &#xD;            if (fish.orient.equals("horizontal")) {            &#xD;                fish.orient = "vertical";                &#xD;            } else {            &#xD;                fish.orient = "horizontal";                &#xD;            }            &#xD;        &lt;/attribute&gt;        &#xD;    &lt;/button&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zkex.zul.Fisheyebar</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*org.zkoss.zzulkex..fisheye</para></sect3><sect3><title>Supported Events</title></sect3><sect3><title/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead>
         </tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>orient</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the orientation of fisheye.</code>
                  </para>
                  <para>
                     <code>Value: </code>
                     <code>horizontal</code>
                     <code>|vertical</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>jave.lang.String </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>horizontal</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>attachEdge</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Returns the attach edge.</code>
                  </para>
                  <para>
                     <code>Value: </code>
                     <code>center</code>
                     <code>|left|right|top|bottom</code>
                     <code> </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>jave.lang.String </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>center</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>labelEdge</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the label edge. </para>
                  <para>Value: <code>center</code>|left|right|top|bottom</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>bottom</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead>
         </tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="HeadersElement">org.zkoss.zul.impl.HeadersElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="Fisheye"><title>Fisheye</title>
      <para>A fisheye item.</para>
      <para/>
      <para>
         <graphic fileref="images/fisheyebar.PNG">2
			
		</graphic>
      </para>
      <programlisting>&lt;window&gt;&#xD;        Click "Change orient" button and move cursor over the fisheyebar before it changes.        &#xD;    &lt;separator/&gt;    &#xD;    Fisheyebar will be out of expected.(That is wrong)    &#xD;    &lt;fisheyebar id="fish" style="position: absolute; top: 50px;    &#xD;        left:100px;margin:20px;" attachEdge="top"&gt;        &#xD;        &lt;fisheye image="/img/icon_browser.png" label="Web Browser"        &#xD;            onClick="alert(self.label)" /&gt;            &#xD;        &lt;fisheye image="/img/icon_calendar.png" label="Calendar"        &#xD;            onClick="alert(self.label)" /&gt;            &#xD;        &lt;fisheye image="/img/icon_email.png" label="Email"        &#xD;            onClick="alert(self.label)" /&gt;            &#xD;        &lt;fisheye image="/img/icon_texteditor.png" label="Text Editor"        &#xD;            onClick="alert(self.label)" /&gt;            &#xD;        &lt;fisheye image="/img/icon_update.png" label="Software Update"        &#xD;            onClick="alert(self.label)" /&gt;            &#xD;        &lt;fisheye image="/img/icon_users.png" label="Users"        &#xD;            onClick="alert(self.label)" /&gt;            &#xD;    &lt;/fisheyebar&gt;    &#xD;    &lt;button label="Change orient"&gt;    &#xD;        &lt;attribute name="onClick"&gt;        &#xD;            if (fish.orient.equals("horizontal")) {            &#xD;                fish.orient = "vertical";                &#xD;            } else {            &#xD;                fish.orient = "horizontal";                &#xD;            }            &#xD;        &lt;/attribute&gt;        &#xD;    &lt;/button&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zkex.zul.Fisheye</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*None</para></sect3><sect3><title>Supported Events</title></sect3><sect3><title/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead>
         </tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>label</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the label.</code>
                  </para>
                  <para>
                     <code/>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>jave.lang.String </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code/>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>image</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Returns the image URI.</code>
                  </para>
                  <para>
                     <code/>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>jave.lang.String </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead>
         </tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="">org.zkoss.zul.impl.HeadersElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="Flash"><title>Flash</title>
      <para>A generic flash component.</para>
      <para>
         <graphic fileref="images/flash.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;flash src="SWF/cc.milestones.121503.swf" height="320" width="620"&gt;&lt;/flash&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Flash</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para> *NONE</para></sect3><sect3><title>Supported Events</title>
      <para> *NONE</para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>autoPlay</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets wether the song Flash movie playing automatically</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>bgcolor</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the background color of Flash movie</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;empty string&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>loop</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether the Flash movie plays repeatly</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>true</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>src</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the source path of Flash movie and redraw the component</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;empty string&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>wode</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the Window Mode property of the Flash movie for transparency, layering, and positioning in the browser.</para>
                  <para>values:</para>
                  <itemizedlist>
                     <listitem>
                        <para>
                           <code>window</code> - movie plays in its own rectangular window on a web page.</para>
                     </listitem>
                     <listitem>
                        <para>
                           <code>opaque</code> - the movie hides everything on the page behind it.</para>
                     </listitem>
                     <listitem>
                        <para>
                           <code>transparent</code> - the background of the HTML page shows through all transparent portions of the movie, this may slow animation performance.</para>
                     </listitem>
                  </itemizedlist>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>transparent</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para>Methods</para>
      <para>*NONE</para></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="Footer"><title>Footer</title>
      <para>A column of the footer of a grid (<code>Grid</code>). Its parent must be <code>Foot</code>.</para>
      <para>Unlike <code>Column</code>, you could place any child in a grid footer. </para>
      <para>
         <graphic fileref="images/grid-2.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;grid&gt;&#xD;    &lt;columns&gt;    &#xD;        &lt;column label="Type"/&gt;        &#xD;        &lt;column label="Content"/&gt;        &#xD;    &lt;/columns&gt;    &#xD;    &lt;rows&gt;    &#xD;        &lt;row&gt;        &#xD;            &lt;label value="File:"/&gt;            &#xD;            &lt;textbox width="99%"/&gt;            &#xD;        &lt;/row&gt;        &#xD;        &lt;row&gt;        &#xD;            &lt;label value="Type:"/&gt;            &#xD;            &lt;hbox&gt;            &#xD;                &lt;listbox rows="1" mold="select"&gt;                &#xD;                    &lt;listitem label="Java Files,(*.java)"/&gt;                    &#xD;                    &lt;listitem label="All Files,(*.*)"/&gt;                    &#xD;                &lt;/listbox&gt;                &#xD;                &lt;button label="Browse..."/&gt;                &#xD;            &lt;/hbox&gt;            &#xD;        &lt;/row&gt;        &#xD;    &lt;/rows&gt;    &#xD;    &lt;foot&gt;    &#xD;        &lt;footer&gt;footer1&lt;/footer&gt;        &#xD;        &lt;footer&gt;footer2&lt;/footer&gt;        &#xD;    &lt;foot&gt;    &#xD;&lt;/grid&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Footer</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para> *ALL</para></sect3><sect3><title>Supported Events</title>
      <para> *NONE</para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>span</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets wether the song Flash movie playing automatically</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>1</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para>Methods</para>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getColumn()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the column that is in the same column as this footer, or null if not available.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Column</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getColumnIndex()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the column index, starting from 0.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getGrid()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the grid that this belongs to.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Grid</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setParent(org.zkoss.zk.ui.Component parent)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para>Inherited From </para>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="LabelElement">
                        <code>org.zkoss.zul.impl.LabelElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="LabelImageElement">
                        <code>org.zkoss.zul.impl.LabelImageElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.impl.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="Foot"><title>Foot</title>
      <para>Defines a set of footers (Footer) for a grid (Grid).</para>
      <para>
         <graphic fileref="images/grid-2.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;grid&gt;&#xD;    &lt;columns&gt;    &#xD;        &lt;column label="Type"/&gt;        &#xD;        &lt;column label="Content"/&gt;        &#xD;    &lt;/columns&gt;    &#xD;    &lt;rows&gt;    &#xD;        &lt;row&gt;        &#xD;            &lt;label value="File:"/&gt;            &#xD;            &lt;textbox width="99%"/&gt;            &#xD;        &lt;/row&gt;        &#xD;        &lt;row&gt;        &#xD;            &lt;label value="Type:"/&gt;            &#xD;            &lt;hbox&gt;            &#xD;                &lt;listbox rows="1" mold="select"&gt;                &#xD;                    &lt;listitem label="Java Files,(*.java)"/&gt;                    &#xD;                    &lt;listitem label="All Files,(*.*)"/&gt;                    &#xD;                &lt;/listbox&gt;                &#xD;                &lt;button label="Browse..."/&gt;                &#xD;            &lt;/hbox&gt;            &#xD;        &lt;/row&gt;        &#xD;    &lt;/rows&gt;    &#xD;    &lt;foot&gt;    &#xD;        &lt;footer&gt;footer1&lt;/footer&gt;        &#xD;        &lt;footer&gt;footer2&lt;/footer&gt;        &#xD;    &lt;foot&gt;    &#xD;&lt;/grid&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Foot</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para> 
         <link linkend="Footer">Footer</link>
      </para></sect3><sect3><title>Supported Events</title>
      <para> *NONE</para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>value</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the current value of the progress meter. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.langString</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para>Methods</para>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getGrid()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the grid that this belongs to.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Grid</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>insertBefore(org.zkoss.zk.ui.Component child, org.zkoss.zk.ui.Component insertBefore)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setParent(org.zkoss.zk.ui.Component parent)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.impl.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="Grid"><title>Grid</title>
      <para>Components: <code>grid, columns, column, rows and row.</code>
      </para>
      <para>A <code>grid</code> contains components that are aligned in rows like tables. Inside a <code>grid</code>, you declare two things, the <code>columns</code>, that define the header and <code>column</code> attributes, and the <code>rows</code>, that provide the content. To declare a set of rows, use the <code>rows</code> component, which should be a child element of <code>grid</code>. Inside that you should add <code>row</code> components, which are used for each <code>row</code>. Inside the <code>row</code> element, you should place the content that you want inside that <code>row</code>. Each child is a <code>column</code> of the specific <code>row</code>. Similarly, the <code>columns</code> are declared with the <code>columns</code> component, which should be placed as a child element of the <code>grid</code>. Unlike <code>row</code> is used to hold the content of each <code>row</code>, <code>column</code> declares the common attributes of each <code>column</code>, such as the width and alignment, and and optional headers, i.e., label and/or image. </para>
      <para>
         <graphic fileref="images/grid.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="Grid Demo" border="normal" width="360px"&gt;&#xD;    &lt;zscript&gt;    &#xD;    class Comp implements Comparator {    &#xD;        private boolean _asc;        &#xD;        public Comp(boolean asc) {        &#xD;            _asc = asc;            &#xD;        }        &#xD;        public int compare(Object o1, Object o2) {        &#xD;            String s1 = o1.getChildren().get(0).getValue(),            &#xD;                s2 = o2.getChildren().get(0).getValue();                &#xD;            int v = s1.compareTo(s2);            &#xD;            return _asc ? v: -v;            &#xD;        }        &#xD;    }    &#xD;    Comp asc = new Comp(true), dsc = new Comp(false);    &#xD;    &lt;/zscript&gt;    &#xD;    &lt;grid&gt;    &#xD;        &lt;columns sizable="true"&gt;        &#xD;            &lt;column label="Type" sortAscending="&amp;#36;{asc}" sortDescending="&amp;#36;{dsc}"/&gt;            &#xD;            &lt;column label="Content"/&gt;            &#xD;        &lt;/columns&gt;        &#xD;        &lt;rows&gt;        &#xD;            &lt;row&gt;            &#xD;                &lt;label value="File:"/&gt;                &#xD;                &lt;textbox width="99%"/&gt;                &#xD;            &lt;/row&gt;            &#xD;            &lt;row&gt;            &#xD;                &lt;label value="Type:"/&gt;                &#xD;                &lt;hbox&gt;                &#xD;                    &lt;listbox rows="1" mold="select"&gt;                    &#xD;                        &lt;listitem label="Java Files,(*.java)"/&gt;                        &#xD;                        &lt;listitem label="All Files,(*.*)"/&gt;                        &#xD;                    &lt;/listbox&gt;                    &#xD;                    &lt;button label="Browse..."/&gt;                    &#xD;                &lt;/hbox&gt;                &#xD;            &lt;/row&gt;            &#xD;            &lt;row&gt;            &#xD;                &lt;label value="Options:"/&gt;                &#xD;                &lt;textbox rows="3" width="99%"/&gt;                &#xD;            &lt;/row&gt;            &#xD;        &lt;/rows&gt;        &#xD;    &lt;/grid&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Grid</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Columns">Columns</link> 
         <link linkend="Rows">Rows</link>
      </para></sect3><sect3><title>Supported Events</title></sect3><sect3><title/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onPaging</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="PagingEvent">
                        <code>org.zkoss.zul.event.PagingEvent</code>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Notifies one of the pages of a multi-page component is</code>
                  </para>
                  <para>
                     <code>selected by the user. </code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>align</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the horizontal alignment of the whole grid.</code>
                  </para>
                  <para>
                     <code>Val</code>
                     <code>ue:</code>
                     <code> left|center|right</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>mod</code>
                     <code>el</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the list model associated with this grid.</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.ListModel</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>pageSize</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the page size, aka., the number rows per page. </para>
                  <para>Note: Available only the paging mold</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>paginal</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.ext.Paginal</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>pre</code>
                     <code>loadSize</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the number of rows to preload when receiving the rendering request from the client. </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>7</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>rowrenderer</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the renderer which is used to render each row if getModel() is not null.</para>
               </entry>
               <entry>
                  <para>
                     <code>org</code>
                     <code>.zkoss.zul.RowRenderer</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>clone()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Object</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getCell(int, int)</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the specified cell, or null if not available. </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zk.ui.Component</code>
                     <code> </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getColumns()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the columns.</para>
               </entry>
               <entry>
                  <para>
                     <code>org</code>
                     <code>.zkoss.zul.Columns</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getFoot()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the foot.</para>
               </entry>
               <entry>
                  <para>
                     <code>org</code>
                     <code>.zkoss.zul.Foot</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getPaging()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the child paging controller that is created automatically, or null if mold is not "paging", or the controller is specified externally by setPaginal(org.zkoss.zul.ext.Paginal).</para>
               </entry>
               <entry>
                  <para>
                     <code>org</code>
                     <code>.zkoss.zul.Paging</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getRows()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the rows.</para>
               </entry>
               <entry>
                  <para>
                     <code>org</code>
                     <code>.zkoss.zul.Rows</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>ins</code>
                     <code>ertBefore(org.zkoss.zk.ui.Component, org.zkoss.zk.ui.Component) </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onInitRender()</code>
                  </para>
               </entry>
               <entry>
                  <para>Handles a private event, onInitRender. </para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onPaging()</code>
                  </para>
               </entry>
               <entry>
                  <para>Called when the onPaging event is received (from getPaginal()).</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>removeChild(org.zkoss.zk.ui.Component) </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>renderAll()</code>
                  </para>
               </entry>
               <entry>
                  <para>Renders all Row if not loaded yet, with getRowRenderer().</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>renderItems(java.util.Set)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>renderRow(Row)</code>
                  </para>
               </entry>
               <entry>
                  <para>Renders the specified Row if not loaded yet, with getRowRenderer().</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>renderRows(java.util.Set) </code>
                  </para>
               </entry>
               <entry>
                  <para>Renders a set of specified rows.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setMold(ListModel)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setRowRenderer(java.lang.String)</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the renderer by use of a class name.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2><title>Group</title>
      <para>Adds the ability for single level grouping to the Grid.</para>
      <para>Default getSclass(): the same as grid's sclass. </para>
      <para>
         <graphic fileref="images/Groupfoot.PNG">2
			
		</graphic>
      </para>
      <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xD;&lt;zk&gt;&#xD;    Grid support Groupfoot in Group    &#xD;&#xD;    &lt;grid id="grid"&gt;    &#xD;        &lt;columns id="h" sizable="true"&gt;        &#xD;            &lt;column id="col1" label="Type"/&gt;            &#xD;            &lt;column id="col2" label="Content"/&gt;            &#xD;        &lt;/columns&gt;        &#xD;        &lt;rows id="rows"&gt;        &#xD;            &lt;group id="gp1"&gt;            &#xD;            &lt;label value="Group1: (gp1)"/&gt;            &#xD;            &lt;label value="Group1:"/&gt;            &#xD;            &lt;/group&gt;            &#xD;            &lt;row&gt;            &#xD;                &lt;label value="File:"/&gt;                &#xD;                &lt;label value="File:"/&gt;                &#xD;            &lt;/row&gt;            &#xD;            &lt;row id="row1"&gt;            &#xD;                &lt;label value="Type:"/&gt;                &#xD;                &lt;hbox&gt;                &#xD;                    &lt;listbox rows="1" mold="select"&gt;                    &#xD;                        &lt;listitem label="Java Files,(*.java)"/&gt;                        &#xD;                        &lt;listitem label="All Files,(*.*)"/&gt;                        &#xD;                    &lt;/listbox&gt;                    &#xD;                    &lt;button label="Browse..."/&gt;                    &#xD;                &lt;/hbox&gt;                &#xD;            &lt;/row&gt;            &#xD;            &lt;groupfoot&gt;            &#xD;                &lt;label value="2 Java Files"/&gt;                &#xD;                &lt;label value="10 Files"/&gt;                &#xD;            &lt;/groupfoot&gt;            &#xD;            &lt;group id="gp2" label="Group 2 (gp2)" onOpen='alert("Group is open: "+self.open);'/&gt;            &#xD;            &lt;row&gt;            &#xD;                &lt;label value="Options:"/&gt;                &#xD;                &lt;label value="Options:"/&gt;                &#xD;            &lt;/row&gt;            &#xD;                &lt;groupfoot&gt;                &#xD;                &lt;label value="2 Options"/&gt;                &#xD;                &lt;label value="10 Options"/&gt;                &#xD;            &lt;/groupfoot&gt;            &#xD;        &lt;/rows&gt;        &#xD;    &lt;/grid&gt;    &#xD;&lt;/zk&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Group</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*ALL</para></sect3><sect3><title>Supported Events</title>
      <para>*NONE</para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>align</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the horizontal alignment of the whole grid.</code>
                  </para>
                  <para>
                     <code>Val</code>
                     <code>ue:</code>
                     <code> left|center|right</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>nowrap</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the nowrap.</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>sclass</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the style class.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>spans</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the spans, which is a list of numbers separated by comma. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>valign</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the vertical alignment of the whole row. </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>val</code>
                     <code>ue</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the value.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Object</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>label</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the value of the Label it contains</para>
               </entry>
               <entry>
                  <para>java.lang.String</para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getChildAttrs(int) </code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the HTML attributes for the child of the specified index. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getGrid()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the grid that contains this row. </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Grid</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onDrawNewChild(org.zkoss.zk.ui.Component, java.lang.StringBuffer) </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setParent(org.zkoss.zk.ui.Component)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setStyle(java.lang.String)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="Groupbox"><title>Groupbox</title>
      <para>Components: <code>groupbox</code>.</para>
      <para>A group box is used to group components together. A border is typically drawn around the components to show that they are related. The label across the top of the group box can be created by using the <code>caption</code> component. It works much like the HTML legend element. Unlike windows, a group box is not an owner of the ID space. It cannot be overlapped or popup.</para>
      <para>
         <graphic fileref="images/groupbox.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;groupbox width="250px"&gt;&#xD;    &lt;caption label="Fruits"/&gt;    &#xD;    &lt;radiogroup&gt;    &#xD;        &lt;radio label="Apple"/&gt;        &#xD;        &lt;radio label="Orange"/&gt;        &#xD;        &lt;radio label="Banana"/&gt;        &#xD;    &lt;/radiogroup&gt;    &#xD;&lt;/groupbox&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Groupbox</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*ALL </para></sect3><sect3><title>Supported Events</title></sect3><sect3><title/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="MouseEvent">
                        <code/>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes user has clicked the component. </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onRightClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="MouseEvent">
                        <code/>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes user has right-clicked the component.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onDoubleClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="MouseEvent">
                        <code/>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes user has double-clicked the component.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onOpen</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="OpenEvent">
                        <code>org.zkoss.zk.ui.event.OpenEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="MouseEvent">
                        <code/>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> </code>
                     <code>Denotes user has opened or closed a component. Note:</code>
                  </para>
                  <para>unlike <code>onClose</code>, this event is only a notification. The client sends this event after opening or closing the component.</para>
                  <para>It is useful to implement load-on-demand by listening to the <code>onOpen</code> event, and creating components when the first time the component is opened.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>closable</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets whether user can open or close the group box. </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>true</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>con</code>
                     <code>tentStyle</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the CSS style for the content block of the groupbox. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Str</code>
                     <code>ing</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>ope</code>
                     <code>n</code>
                  </para>
               </entry>
               <entry>
                  <para>Opens or closes this groupbox. </para>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>true</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getCaption()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the caption of this groupbox. </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Caption</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>get</code>
                     <code>ContentSclass()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the style class used for the content block of the groupbox. </para>
               </entry>
               <entry>
                  <para>
                     <code>jav</code>
                     <code>a.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>get</code>
                     <code>OuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>jav</code>
                     <code>a.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>ins</code>
                     <code>ertBefore(org.zkoss.zk.ui.Component, org.zkoss.zk.ui.Component) </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onChildRemoved(org.zkoss.zk.ui.Component)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2><title>Groupfoot</title>
      <para>Adds the ability for single level grouping to the Grid.</para>
      <para>Default getSclass(): the same as grid's sclass. </para>
      <para>
         <graphic fileref="images/Groupfoot.PNG">2
			
		</graphic>
      </para>
      <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xD;&lt;zk&gt;&#xD;    Grid support Groupfoot in Group    &#xD;&#xD;    &lt;grid id="grid"&gt;    &#xD;        &lt;columns id="h" sizable="true"&gt;        &#xD;            &lt;column id="col1" label="Type"/&gt;            &#xD;            &lt;column id="col2" label="Content"/&gt;            &#xD;        &lt;/columns&gt;        &#xD;        &lt;rows id="rows"&gt;        &#xD;            &lt;group id="gp1"&gt;            &#xD;            &lt;label value="Group1: (gp1)"/&gt;            &#xD;            &lt;label value="Group1:"/&gt;            &#xD;            &lt;/group&gt;            &#xD;            &lt;row&gt;            &#xD;                &lt;label value="File:"/&gt;                &#xD;                &lt;label value="File:"/&gt;                &#xD;            &lt;/row&gt;            &#xD;            &lt;row id="row1"&gt;            &#xD;                &lt;label value="Type:"/&gt;                &#xD;                &lt;hbox&gt;                &#xD;                    &lt;listbox rows="1" mold="select"&gt;                    &#xD;                        &lt;listitem label="Java Files,(*.java)"/&gt;                        &#xD;                        &lt;listitem label="All Files,(*.*)"/&gt;                        &#xD;                    &lt;/listbox&gt;                    &#xD;                    &lt;button label="Browse..."/&gt;                    &#xD;                &lt;/hbox&gt;                &#xD;            &lt;/row&gt;            &#xD;            &lt;groupfoot&gt;            &#xD;                &lt;label value="2 Java Files"/&gt;                &#xD;                &lt;label value="10 Files"/&gt;                &#xD;            &lt;/groupfoot&gt;            &#xD;            &lt;group id="gp2" label="Group 2 (gp2)" onOpen='alert("Group is open: "+self.open);'/&gt;            &#xD;            &lt;row&gt;            &#xD;                &lt;label value="Options:"/&gt;                &#xD;                &lt;label value="Options:"/&gt;                &#xD;            &lt;/row&gt;            &#xD;                &lt;groupfoot&gt;                &#xD;                &lt;label value="2 Options"/&gt;                &#xD;                &lt;label value="10 Options"/&gt;                &#xD;            &lt;/groupfoot&gt;            &#xD;        &lt;/rows&gt;        &#xD;    &lt;/grid&gt;    &#xD;&lt;/zk&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Groupfoot</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*ALL</para></sect3><sect3><title>Supported Events</title>
      <para>*NONE</para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>align</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the horizontal alignment of the whole grid.</code>
                  </para>
                  <para>
                     <code>Val</code>
                     <code>ue:</code>
                     <code> left|center|right</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>nowrap</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the nowrap.</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>sclass</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the style class.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>spans</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the spans, which is a list of numbers separated by comma. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>valign</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the vertical alignment of the whole row. </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>val</code>
                     <code>ue</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the value.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Object</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>label</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the value of the Label it contains</para>
               </entry>
               <entry>
                  <para>java.lang.String</para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getChildAttrs(int) </code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the HTML attributes for the child of the specified index. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getGrid()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the grid that contains this row. </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Grid</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onDrawNewChild(org.zkoss.zk.ui.Component, java.lang.StringBuffer) </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setParent(org.zkoss.zk.ui.Component)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setStyle(java.lang.String)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="Hbox"><title>Hbox</title>
      <para>The <code>hbox</code> component is used to create a horizontally oriented box. Each component placed in the hbox will be placed horizontally in a row.</para>
      <para/>
      <para>
         <graphic fileref="images/box.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;zk&gt;&#xD;    &lt;vbox&gt;    &#xD;        &lt;button label="Button 1"/&gt;        &#xD;        &lt;button label="Button 2"/&gt;        &#xD;    &lt;/vbox&gt;    &#xD;    &lt;hbox&gt;    &#xD;        &lt;button label="Button 3"/&gt;        &#xD;        &lt;button label="Button 4"/&gt;        &#xD;    &lt;/hbox&gt;    &#xD;&lt;/zk&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Hbox</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*ALL</para></sect3><sect3><title>Supported Events </title>
      <para>*NONE</para></sect3><sect3><title>Properties</title>
      <para> *NONE</para></sect3><sect3><title>Methods</title>
      <para>*NONE</para></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Box">org.zkoss.zul.Box</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Html"><title>Html</title>
      <para>The simplest way is to use a XUL component called <code>html</code> to embed whatever HTML tags you want to send directly to the browser. To avoid ZK from interpreting the HTML tags, you usually enclose them with <code>&lt;![CDATA[</code> and <code>]]&gt;</code>. In other words, they are not the child component. Rather, they are stored in the <code>content</code> property. Notice you can use EL expressions in it.</para>
      <para>
         <graphic fileref="images/Html.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window id="win" title="Html Demo"&gt;&#xD;&lt;html&gt;&lt;![CDATA[&#xD;&lt;h4&gt;Hi, ${win.title}&lt;/h4&gt;&#xD;&lt;p&gt;It is the content of the html component.&lt;/p&gt;&#xD;]]&gt;&lt;/html&gt;&#xD;&lt;/window&gt;&#xD;</programlisting>
      <para>where <code>&lt;h4&gt;...&lt;/p&gt;</code> will become the content of the <code>html</code> element (see also the <code>getContent</code> method of the <code>org.zkoss.zul.Html</code> class).</para>
      <para>The <code>html</code> component generates the HTML <code>SPAN</code> tag to enclose the content. In other words, it generates the following HTML tags when rendered to the browser.</para>
      <programlisting>&lt;span id=”...”&gt;&#xD;&lt;h4&gt;Hi, Html Demo&lt;/h4&gt;&#xD;&lt;p&gt;It is the content of the html component.&lt;/p&gt;&#xD;&lt;/span&gt;&#xD;</programlisting>
      <para>
         <code/>
      </para>
      <para/><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Html</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE </para></sect3><sect3><title>Supported Events</title>
      <para>*NONE </para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>content</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the embedded content (i.e., HTML tags).</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>empty ("")</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>IsChildable</code>
                  </para>
                  <para>
                     <code>(Source Text)</code>
                  </para>
               </entry>
               <entry>
                  <para>Determines whether it accepts child components</para>
                  <para>Note: No child is allowed. </para>
               </entry>
               <entry>
                  <para>
                     <code>Boolean</code>
                  </para>
                  <para>
                     <code>(Source Text)</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Iframe"><title>Iframe</title>
      <para>The iframe component uses the HTML IFRAME tag to delegate a portion of the display to</para>
      <para>another URL. Though the appearance looks similar to the include component. The concept and meaning of the iframe component is different.</para>
      <para>The content included by the include component is a fragment of the whole HTML page.</para>
      <para>Because the content is part of the HTML page, the content is part of the desktop and you</para>
      <para>could access any components, if any, inside of the include component. The inclusion is</para>
      <para>done at the server, and the browser knows nothing about it. It means the URL specified by</para>
      <para>the src property could be any internal resource.</para>
      <para>The content of the iframe component is loaded by the browser as a separate page. Because</para>
      <para>it is loaded as a separate page, the format of the content could be different from HTML. For</para>
      <para>example, you could embed an PDF file.</para>
      <para>
         <graphic fileref="images/iframe.png">2
			
		</graphic>
      </para>
      <para/>
      <programlisting>&lt;window id="win" title="This is an Iframe Demo!"&gt;&#xD;&lt;iframe style="width:99%; height:400px;border:3px inset;" &#xD;src="/zk-devguide.pdf" /&gt;&#xD;&lt;/window&gt;&#xD;</programlisting>
      <para/>
      <para>The embedding is done by the browser, when it interprets the HTML page containing the</para>
      <para>IFRAME tag. It also implies that the URL must be a resource that you can access from the</para>
      <para>browser.</para>
      <para>Like the image and <code>audio</code> components47, you could specify the dynamically generated</para>
      <para>content. A typical example is you could use JasperReport to generate a PDF report in a</para>
      <para>binary array or stream, and then pass the report to an <code>iframe</code> component by wrapping the</para>
      <para>result with the <code>org.zkoss.util.media.AMedia</code> class.</para>
      <para>In the following example, we illustrate that you could embed any content by use of <code>iframe</code>,</para>
      <para>as long as the client supports its format.</para>
      <para/><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Iframe</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE </para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onURIChange</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.URIEvent</code>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes the associated URI (</code>
                     <code>src</code>
                     <code>) has been changed by user.</code>
                  </para>
                  <para>
                     <code>Use </code>
                     <code>getURI()</code>
                     <code> to retrieve the URI being changed to</code>
                     <code>.</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para>Properties</para>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>content</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.util.media.Media</code> any binary content that client side browser accept (i.e., mp3, pdf...).</para>
               </entry>
               <entry>
                  <para>
                     <code>Media </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>IsChildable</code>
                  </para>
               </entry>
               <entry>
                  <para>Determines whether it accepts child components</para>
                  <para>Note: No child is allowed. </para>
               </entry>
               <entry>
                  <para>
                     <code>Boolean</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Image"><title>Image</title>
      <para>An <code>image</code> component is used to display an image at the browser. There are two ways to</para>
      <para>assign an image to an <code>image</code> component. First, you could use the <code>src</code> property to specify a</para>
      <para>URI where the image is located. This approach is similar to what HTML supports. It is useful</para>
      <para>if you want to display a static image, or any image that can be identified by URL.</para>
      <programlisting>&lt;image src="/my.png"&gt;&#xD;</programlisting>
      <para>Like using any other properties that accept an URI, you could specify "*" for identifying a</para>
      <para>Locale dependent image. For example, if you have different image for different Locales,</para>
      <para>you could use as follows.</para>
      <programlisting>&lt;image src="/my*.png"&gt;&#xD;</programlisting>
      <para>Then, assume one of your users is visiting your page with <code>de_DE</code> as the preferred Locale.</para>
      <para>Zk will try to locate the image file called <code>/my_de_DE.png</code>. If not found, it will try</para>
      <para>
         <code>/my_de.png </code>and finally <code>/my.png</code>.</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Image</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE </para></sect3><sect3><title>Supported Events</title>
      <para>*NONE </para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>content</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.image.Image </code>an image object (i.e., jpeg, png...).</para>
               </entry>
               <entry>
                  <para>
                     <code>Image </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>IsChildable</code>
                  </para>
               </entry>
               <entry>
                  <para>Determines whether it accepts child components</para>
                  <para>Note: No child is allowed. </para>
               </entry>
               <entry>
                  <para>
                     <code>Boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Imagemap"><title>Imagemap</title>
      <para>A <code>imagemap</code> component is a special image. It accepts whatever properties an <code>image </code>component accepts. However, unlike <code>image</code>, if a user clicks on the image, an <code>onClick</code> event is sent back to the server with the coordinates of the mouse position. In contrast, the <code>onClick </code>event sent by <code>image</code> doesn't contain the coordinates.</para>
      <para>The coordinates of the mouse position are screen pixels counted from the upper-left corner of the image beginning with (0, 0). It is stored as instance of <code>org.zkoss.zk.ui.event .MouseEvent</code>. Once the application receives the <code>onClick</code> event, it could examine the coordinates of the mouse position from the <code>getX</code> and <code>getY</code> methods.</para>
      <para>For example, if a user clicks 208 pixels over and 205 pixels down from the upper-left corner</para>
      <para>of the image displayed from the following statement.</para>
      <programlisting>&lt;imagemap src="/img/sun.jpg" onClick="alert(event.x + &amp;quot;, &amp;quot; +event.y)"/&gt;&#xD;</programlisting>
      <para>
         <graphic fileref="images/imagemap.png">2
			
		</graphic>Then, the user gets the result as depicted below.</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Imagemap</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE </para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes user has clicked the component.</code>
                  </para>
                  <para>
                     <code>Use getX(), getY() method get coo</code>
                     <code>rdinates.</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>content</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.image.Image </code>an image object (i.e., jpeg, png...).</para>
               </entry>
               <entry>
                  <para>
                     <code>Image </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>IsChildable</code>
                  </para>
               </entry>
               <entry>
                  <para>Determines whether it accepts child components</para>
                  <para>Note: No child is allowed. </para>
               </entry>
               <entry>
                  <para>
                     <code>Boolean</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Image">org.zkoss.zul.Image</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Include"><title>Include</title>
      <para>The <code>include</code> component is used to include the output generated by another servlet. The servlet could be anything including JSF, JSP and even another ZUML page.</para>
      <programlisting>&lt;window title="include demo" border="normal" width="300px"&gt;&#xD;    Hello, World!    &#xD;    &lt;include src="/userguide/misc/includedHello.zul"/&gt;    &#xD;    &lt;include src="/html/frag.html?some=any"/&gt;    &#xD;    &lt;include src="mypage" argument="${anyValue}" other="${anotherValue}"/&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting>
      <para>Like all other properties, you could dynamically change the <code>src</code> attribute to include the output from a different servlet at the run time.</para>
      <para>If the included output is another ZUML, developers are allowed to access components in the included page as if they are part of the containing page.</para>
      <para>If the <code>include</code> component is used to include a ZUML page, the included page will become part of the desktop. However, the included page is not visible until the request is processed completely. In other words, it is visible only in the following events, triggered by user or timer.</para>
      <para>The reason is that the include component includes a page as late as the Rendering phase. On the other hand, zscript takes place at the Component Creation phase, and onCreate takes place at the Event Processing Phase. They both execute before the inclusion.</para><sect3><title>Pass Values to the Included Page</title>
      <para>There are two ways to pass values to the included page. First, you can pass them with the query string.</para>
      <programlisting>&lt;include src="mypage?some=something"/&gt;&#xD;</programlisting>
      <para>Then, in the included page, you can access them with the getParameter method of the Execution interface or the ServletRequest interface. In EL expressions (of the included page), you can use the param variable to access them. However, you can only pass String-typed values with the query string.</para>
      <programlisting>${param.some}&#xD;</programlisting>
      <para>Alternatively, we can pass any kind of values with the so-called dynamic properties by use of the setDynamicProperty method or, in ZUL, a dynamic property as follows:</para>
      <programlisting>&lt;include src="mypage" some="something" another="${expr}"/&gt;&#xD;</programlisting>
      <para>With the dynamic properties, you can pass non-String-typed values. In the included page, you can access them with the getAttribute method of the Execution interface or the ServletRequest interface. In EL expressions (of the included page), you can use the requestScope variable to access them.</para>
      <programlisting>${requestScope.some}&#xD;</programlisting></sect3><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Include</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE </para></sect3><sect3><title>Supported Events</title>
      <para>*NONE</para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>src</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets whether user can open or close the group box. </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>true</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>localized</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the CSS style for the content block of the groupbox. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Str</code>
                     <code>ing</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>ope</code>
                     <code>n</code>
                  </para>
               </entry>
               <entry>
                  <para>Opens or closes this groupbox. </para>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>true</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>IsChildable</code>
                  </para>
               </entry>
               <entry>
                  <para>Determines whether it accepts child components</para>
                  <para>Note: No child is allowed. </para>
               </entry>
               <entry>
                  <para>
                     <code>Boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Intbox"><title>Intbox</title>
      <para>A <code>intbox</code> is used to let users input integer data.</para>
      <para>
         <graphic fileref="images/intbox.png">2
			
		</graphic>While input invalid data:</para>
      <para>
         <graphic fileref="images/intbox2.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="Intbox Demo" border="normal" width="200px"&gt;&#xD;    int box:&lt;intbox/&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Intbox</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE </para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Event Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onChange</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="InputEvent">
                        <code>org.zkoss.zk.ui.event.InputEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes the content of an input component has been modified by the user.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onChanging</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="InputEvent">
                        <code>org.zkoss.zk.ui.event.InputEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes that user is changing the content of an input component. Notice that the component's content (at the server) won't be changed until <code>onChange</code> is received. Thus, you have to invoke the <code>getValue </code>method in the <code>InputEvent </code>class to retrieve the temporary value.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onSelection</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="SelectionEvent">
                        <code>org.zkoss.zk.ui.event.SelectionEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes that user is selecting a portion of the text of an input component. You can retrieve the start and end position of the selected text by use of the <code>getStart</code> and <code>getEnd</code> methods. </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onFocus</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes when a component gets the focus. Remember event listeners execute at the server, so the focus at the client might be changed when the event listener for <code>onFocus</code> got executed.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onBlur</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes when a component loses the focus. Remember event listeners execute at the server, so the focus at the client might be changed when the event listener for <code>onBlur </code>got executed.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onCreate</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="CreateEvent">
                        <code>org.zkoss.ui.zk.ui.event.CreateEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes a component is created when rendering a ZUML page.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onDrop</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="DropEvent">
                        <code>org.zkoss.ui.zk.ui.event.DropEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes another component is dropped to the component that receives this event.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>val</code>
                     <code>ue</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the text value. </para>
               </entry>
               <entry>
                  <para>
                     <code>Integer</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <para>*NONE</para></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="NumberInputElement">
                        <code>org.zkoss.zul.NumberInputElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="FormatInputElement">
                        <code>org.zkoss.zul.FormatInputElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="InputElement">
                        <code>org.zkoss.zul.InputElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Label"><title>Label</title>
      <para>A label component represents a piece of text.</para>
      <para>
         <graphic fileref="images/label.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="Label Demo" &gt;&#xD;&lt;grid&gt;&#xD;&lt;rows&gt;&#xD;&lt;row&gt;Label(normal): &lt;label id="lb1"/&gt;&lt;/row&gt;&#xD;&lt;row&gt;Label(color): &lt;label id="lb2" style="color:red"/&gt;&lt;/row&gt;&#xD;&lt;row&gt;Label(font): &lt;label id="lb3" style="font-weight:bold"/&gt;&lt;/row&gt;&#xD;&lt;row&gt;Label(size): &lt;label id="lb4" style="font-size:14pt"/&gt;&lt;/row&gt;&#xD;&lt;row&gt;Label(maxlength): &lt;label id="lb5" maxlength="5"/&gt;&lt;/row&gt;&#xD;&lt;row&gt;Label(pre): &lt;label id="lb6" pre="true"/&gt;&lt;/row&gt;&#xD;&lt;row&gt;input:&#xD;&lt;textbox id="txt" rows="2"&gt;&lt;attribute name="onChange"&gt;&#xD;lb1.value=self.value;&#xD;lb2.value=self.value;&#xD;lb3.value=self.value;&#xD;lb4.value=self.value;&#xD;lb5.value=self.value;&#xD;lb6.value=self.value;&#xD;&lt;/attribute&gt;&lt;/textbox&gt;&#xD;&lt;/row&gt;&#xD;&lt;/rows&gt;&#xD;&lt;/grid&gt;&#xD;&lt;/window&gt;&#xD;</programlisting>
      <para/>
      <para>You can control how a label is displayed with the <code>style</code>, <code>pre</code> and <code>maxlength</code> Properties. </para>
      <para>For example, if you specify <code>pre</code> to be <code>true</code>, all white spaces, such as new line, space and tab, are preserved.</para>
      <para/><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Label</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE </para></sect3><sect3><title>Supported Events</title>
      <para>*NONE </para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>value</code>
                  </para>
               </entry>
               <entry>
                  <para>The <code>String</code> value denote this label.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>pre</code>
                  </para>
               </entry>
               <entry>
                  <para>If true, all white spaces, such as new line, space and tab, are preserved.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>maxlength</code>
                  </para>
               </entry>
               <entry>
                  <para>Truncated the characters that exceeds the specified</para>
               </entry>
               <entry>
                  <para>
                     <code>Positive Int</code>
                     <code>eger</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>IsChildable</code>
                  </para>
               </entry>
               <entry>
                  <para>Determines whether it accepts child components</para>
                  <para>Note: No child is allowed. </para>
               </entry>
               <entry>
                  <para>
                     <code>Boolean</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Listbox"><title>Listbox</title>
      <para>Components: <code>listbox, listitem, listcell, listhead</code> and <code>listheader</code>.</para>
      <para>A list box is used to display a number of items in a list. The user may select an item from the list.</para>
      <para>
         <graphic fileref="images/listbox.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="listbox demo" border="normal"&gt;&#xD;        &lt;listbox id="box" width="250px"&gt;        &#xD;            &lt;listhead sizable="true"&gt;            &#xD;                &lt;listheader label="name" sort="auto"/&gt;                &#xD;                &lt;listheader label="gender" sort="auto"/&gt;                &#xD;            &lt;/listhead&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="Mary"/&gt;                &#xD;                &lt;listcell label="FEMALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="John"/&gt;                &#xD;                &lt;listcell label="MALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="Jane"/&gt;                &#xD;                &lt;listcell label="FEMALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="Henry"/&gt;                &#xD;                &lt;listcell label="MALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listfoot &gt;            &#xD;                &lt;listfooter&gt;&lt;label value="This is footer1"/&gt;&lt;/listfooter&gt;                &#xD;                &lt;listfooter&gt;&lt;label value="This is footer2"/&gt;&lt;/listfooter&gt;                &#xD;            &lt;/listfoot&gt;            &#xD;                &lt;/listbox&gt;                &#xD;&lt;/window&gt;&#xD;</programlisting>
      <para>Listbox has two molds: <code>default</code> and <code>select</code>. If the select mold is used, the HTML's SELECT tag is generated instead.</para><sect3><title/></sect3><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Listbox</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Listitem">Listitem</link> 
         <link linkend="Listhead">Listhead</link> 
         <link linkend="Listfoot">Listfoot</link>
      </para></sect3><sect3><title>Supported Events</title></sect3><sect3><title/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onPaging</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="PagingEvent">
                        <code>org.zkoss.zul.event.PagingEvent</code>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Notifies one of the pages of a multi-page component is</code>
                  </para>
                  <para>
                     <code>selected by the user. </code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>align</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the horizontal alignment of the whole Listbox.</code>
                  </para>
                  <para>
                     <code>Val</code>
                     <code>ue:</code>
                     <code> left|center|right</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>mod</code>
                     <code>el</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the list model associated with this Listbox.</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.ListModel</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>pageSize</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the page size, aka., the number rows per page. </para>
                  <para>Note: Available only the paging mold</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>paginal</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.ext.Paginal</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>pre</code>
                     <code>loadSize</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the number of rows to preload when receiving the rendering request from the client. </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>7</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>itemRenderer</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the renderer which is used to render each <code>Listitem</code> if getModel() is not null.</para>
               </entry>
               <entry>
                  <para>
                     <code>org</code>
                     <code>.zkoss.zul.RowRenderer</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>maxlength</code>
                  </para>
               </entry>
               <entry>
                  <para>the maximal length of each item's label.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>0(no effect)</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>multiple</code>
                  </para>
               </entry>
               <entry>
                  <para>Is multiple selections are allowed.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>checkmark</code>
                  </para>
               </entry>
               <entry>
                  <para>Is the check mark shall be displayed in front of each item.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>disable</code>
                  </para>
               </entry>
               <entry>
                  <para>Is this <code>Listbox</code> is disabled.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>vflex</code>
                  </para>
               </entry>
               <entry>
                  <para>To grow and shrink vertical to fit their given space, so called vertial flexibility.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>clone()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getIndexOfItem(Listitem)</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the index of the specified item, or -1 if not found.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>ClearSelection()</code>
                  </para>
               </entry>
               <entry>
                  <para>Clears the selection.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>addItemToSelection(Listitem) </code>
                  </para>
               </entry>
               <entry>
                  <para>Selects the given item, without deselecting any other items that are already selected..</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>appendItem(String,String) </code>
                  </para>
               </entry>
               <entry>
                  <para>Appends an item.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getItemAtIndex(int)</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the item at the specified index.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getSelectedIndex()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the index of the selected item (-1 if no one is selected).</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setSelectedIndex(int)</code>
                  </para>
               </entry>
               <entry>
                  <para>Deselects all of the currently selected items and selects the item with the given index.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>GetItemCount()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the number of items.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>GetListHead()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns <code>Listhead</code> belonging to this L<code>istbox</code>, or null if no list headers at all.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>GetListfoot()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns <code>Listfoot</code> belonging to this L<code>istbox</code>, or null if no list footers at all.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getPaging()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the child paging controller that is created automatically, or null if mold is not "paging", or the controller is specified externally by setPaginal(org.zkoss.zul.ext.Paginal).</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>Sel</code>
                     <code>ectAll()</code>
                  </para>
               </entry>
               <entry>
                  <para>Select all items.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>ins</code>
                     <code>ertBefore(org.zkoss.zk.ui.Component, org.zkoss.zk.ui.Component) </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onInitRender()</code>
                  </para>
               </entry>
               <entry>
                  <para>Handles a private event, onInitRender. </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onPaging()</code>
                  </para>
               </entry>
               <entry>
                  <para>Called when the onPaging event is received (from getPaginal()).</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>removeChild(org.zkoss.zk.ui.Component) </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>renderAll()</code>
                  </para>
               </entry>
               <entry>
                  <para>Renders all <code>Listitem</code> if not loaded yet, with <code>getItemRenderer().</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>renderItems(java.util.Set)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>renderItem(Listitem)</code>
                  </para>
               </entry>
               <entry>
                  <para>Renders the specified Row if not loaded yet, with getRowRenderer().</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>renderItems(java.util.Set) </code>
                  </para>
               </entry>
               <entry>
                  <para>Renders a set of specified rows.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setTabindex(int)</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the tab order of this component. </para>
                  <para>Currently, only the "select" mold supports this property. </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getTabindex()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the tab order of this component. </para>
                  <para>Currently, only the "select" mold supports this property. </para>
                  <para>Default: -1 (means the same as browser's default). </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setItemRenderer(java.lang.String)</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the renderer by use of a class name.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>toggleItemSelection(Listitem)</code>
                  </para>
               </entry>
               <entry>
                  <para>If the specified item is selected, it is deselected.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Listcell"><title>Listcell</title>
      <para>A list cell. </para>
      <para>
         <graphic fileref="images/listbox.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="listbox demo" border="normal"&gt;&#xD;        &lt;listbox id="box" width="250px"&gt;        &#xD;            &lt;listhead sizable="true"&gt;            &#xD;                &lt;listheader label="name" sort="auto"/&gt;                &#xD;                &lt;listheader label="gender" sort="auto"/&gt;                &#xD;            &lt;/listhead&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="Mary"/&gt;                &#xD;                &lt;listcell label="FEMALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="John"/&gt;                &#xD;                &lt;listcell label="MALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="Jane"/&gt;                &#xD;                &lt;listcell label="FEMALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="Henry"/&gt;                &#xD;                &lt;listcell label="MALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listfoot &gt;            &#xD;                &lt;listfooter&gt;&lt;label value="This is footer1"/&gt;&lt;/listfooter&gt;                &#xD;                &lt;listfooter&gt;&lt;label value="This is footer2"/&gt;&lt;/listfooter&gt;                &#xD;            &lt;/listfoot&gt;            &#xD;                &lt;/listbox&gt;                &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Listcell</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*ALL</para></sect3><sect3><title>Supported Events</title>
      <para>*NONE</para></sect3><sect3><title>Properties</title>
      <para/>
      <informaltable frame="all">
         <tgroup cols="3">
            <colspec colnum="1" colname="c1"/>
            <colspec colnum="2" colname="c2"/>
            <colspec colnum="3" colname="c3"/>
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>span</code>
                  </para>
               </entry>
               <entry>
                  <para>Number of columns to span this footer. </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>value</code>
                  </para>
               </entry>
               <entry>
                  <para>The value this cell stored.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Object</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>width</code>
                  </para>
               </entry>
               <entry>
                  <para>the width which the same as <code>getListheader()</code>'s width.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <colspec colnum="1" colname="c1"/>
            <colspec colnum="2" colname="c2"/>
            <colspec colnum="3" colname="c3"/>
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getListbox()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the <code>listbox</code> that contains this column. </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Listbox</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getColumnHtmlPostfix()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getColumnHtmlPrefix()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code/>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getColumnIndex()</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Returns the column index, starting from 0.</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setParent(org.zkoss.zk.ui.Component parent) </code>
                  </para>
               </entry>
               <entry>
                  <para>Can only be <code>Listhead</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getListheader()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the list header that is in the same column as this footer, or null if not available.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.ListHeader</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>Invalidate()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="LabelImageElement">org.zkoss.zul.impl.LabelImageElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="LabelElement">org.zkoss.zul.impl.LabelElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Listfoot"><title>Listfoot</title>
      <para>Like <code>Listhead</code>, each listbox has at most one <code>Listfoot</code>.</para>
      <para>
         <graphic fileref="images/listbox.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="listbox demo" border="normal"&gt;&#xD;        &lt;listbox id="box" width="250px"&gt;        &#xD;            &lt;listhead sizable="true"&gt;            &#xD;                &lt;listheader label="name" sort="auto"/&gt;                &#xD;                &lt;listheader label="gender" sort="auto"/&gt;                &#xD;            &lt;/listhead&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="Mary"/&gt;                &#xD;                &lt;listcell label="FEMALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="John"/&gt;                &#xD;                &lt;listcell label="MALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="Jane"/&gt;                &#xD;                &lt;listcell label="FEMALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="Henry"/&gt;                &#xD;                &lt;listcell label="MALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listfoot &gt;            &#xD;                &lt;listfooter&gt;&lt;label value="This is footer1"/&gt;&lt;/listfooter&gt;                &#xD;                &lt;listfooter&gt;&lt;label value="This is footer2"/&gt;&lt;/listfooter&gt;                &#xD;            &lt;/listfoot&gt;            &#xD;                &lt;/listbox&gt;                &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Listfoot</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Listfooter">Listfooter</link>
      </para></sect3><sect3><title>Supported Events</title>
      <para>*NONE</para></sect3><sect3><title>Properties</title>
      <para>*NONE</para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <colspec colnum="1" colname="c1"/>
            <colspec colnum="2" colname="c2"/>
            <colspec colnum="3" colname="c3"/>
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getListbox()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the <code>listbox</code> that contains this column. </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Listbox</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Listfooter"><title>Listfooter</title>
      <para>A column of the footer of a list box (<code>Listbox</code>). Its parent must be <code>Listfoot</code>. Unlike <code>Listheader</code>, you could place any child in a list footer. </para>
      <para>Note: <code>Listcell</code> also accepts children. </para>
      <para>
         <graphic fileref="images/listbox.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="listbox demo" border="normal"&gt;&#xD;        &lt;listbox id="box" width="250px"&gt;        &#xD;            &lt;listhead sizable="true"&gt;            &#xD;                &lt;listheader label="name" sort="auto"/&gt;                &#xD;                &lt;listheader label="gender" sort="auto"/&gt;                &#xD;            &lt;/listhead&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="Mary"/&gt;                &#xD;                &lt;listcell label="FEMALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="John"/&gt;                &#xD;                &lt;listcell label="MALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="Jane"/&gt;                &#xD;                &lt;listcell label="FEMALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="Henry"/&gt;                &#xD;                &lt;listcell label="MALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listfoot &gt;            &#xD;                &lt;listfooter&gt;&lt;label value="This is footer1"/&gt;&lt;/listfooter&gt;                &#xD;                &lt;listfooter&gt;&lt;label value="This is footer2"/&gt;&lt;/listfooter&gt;                &#xD;            &lt;/listfoot&gt;            &#xD;                &lt;/listbox&gt;                &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Listfooter</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*ALL</para></sect3><sect3><title>Supported Events</title>
      <para>*NONE</para></sect3><sect3><title>Properties</title>
      <para/>
      <informaltable frame="all">
         <tgroup cols="3">
            <colspec colnum="1" colname="c1"/>
            <colspec colnum="2" colname="c2"/>
            <colspec colnum="3" colname="c3"/>
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>span</code>
                  </para>
               </entry>
               <entry>
                  <para>Number of columns to span this footer. </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <colspec colnum="1" colname="c1"/>
            <colspec colnum="2" colname="c2"/>
            <colspec colnum="3" colname="c3"/>
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getListbox()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the <code>listbox</code> that contains this column. </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Listbox</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getColumnIndex()</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Returns the column index, starting from 0.</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setParent(org.zkoss.zk.ui.Component parent) </code>
                  </para>
               </entry>
               <entry>
                  <para>Can only be <code>Listhead</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getListfoot()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the set of footers that this belongs to.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Listfoot</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getListheader()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the list header that is in the same column as this footer, or null if not available.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.ListHeader</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="LabelImageElement">org.zkoss.zul.impl.LabelImageElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="LabelElement">org.zkoss.zul.impl.LabelElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2><title>Listgroup</title>
      <para>Adds the ability for single level grouping to the Listbox. </para>
      <para/>
      <para>
         <graphic fileref="images/Listgroup.PNG">2
			
		</graphic>
      </para>
      <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xD;&lt;zk&gt;&#xD;    Listbox support Grouping    &#xD;    &lt;listbox id="listbox" width="250px"&gt;    &#xD;        &lt;listhead sizable="true" id="h"&gt;        &#xD;            &lt;listheader id="h1" label="name" sort="auto" /&gt;            &#xD;            &lt;listheader id="h2" label="gender" sort="auto" /&gt;            &#xD;        &lt;/listhead&gt;        &#xD;        &lt;listgroup id="gp1" open="false"&gt;        &#xD;            &lt;listcell label="Group1"/&gt;            &#xD;            &lt;listcell label="Group2"/&gt;            &#xD;        &lt;/listgroup&gt;        &#xD;        &lt;listitem&gt;        &#xD;            &lt;listcell label="a Mary" /&gt;            &#xD;            &lt;listcell label="a FEMALE" /&gt;            &#xD;        &lt;/listitem&gt;        &#xD;        &lt;listitem&gt;        &#xD;            &lt;listcell label="b Mary" /&gt;            &#xD;            &lt;listcell label="b FEMALE" /&gt;            &#xD;        &lt;/listitem&gt;        &#xD;        &lt;listitem id="li1"&gt;        &#xD;            &lt;listcell label="c Mary1" /&gt;            &#xD;            &lt;listcell label="c FEMALE1" /&gt;            &#xD;        &lt;/listitem&gt;        &#xD;        &lt;listitem&gt;        &#xD;            &lt;listcell label="d Mary" /&gt;            &#xD;            &lt;listcell label="d FEMALE" /&gt;            &#xD;        &lt;/listitem&gt;        &#xD;        &lt;listitem&gt;        &#xD;            &lt;listcell label="e John" /&gt;            &#xD;            &lt;listcell label="e MALE" /&gt;            &#xD;        &lt;/listitem&gt;        &#xD;        &lt;listgroup id="g2" label="Grouping 2" /&gt;        &#xD;        &lt;listitem&gt;        &#xD;            &lt;listcell label="Jane" /&gt;            &#xD;            &lt;listcell label="FEMALE" /&gt;            &#xD;        &lt;/listitem&gt;        &#xD;        &lt;listitem&gt;        &#xD;            &lt;listcell label="Henry" /&gt;            &#xD;            &lt;listcell label="MALE" /&gt;            &#xD;        &lt;/listitem&gt;        &#xD;&#xD;    &lt;/listbox&gt;    &#xD;&lt;/zk&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Listgrroup</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*org.zkoss.zul.Listcell</para></sect3><sect3><title>Supported Events</title></sect3><sect3><title/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead>
         </tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>maxlength</code>
                  </para>
               </entry>
               <entry>
                  <para>the maximal length of this item's label.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>index</code>
                  </para>
               </entry>
               <entry>
                  <para>the index of this item (aka., the order in the listbox). </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>value</code>
                  </para>
               </entry>
               <entry>
                  <para>The value this cell stored.</para>
               </entry>
               <entry>
                  <para>
                     <code>Java.lang.Object</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>label</code>
                  </para>
               </entry>
               <entry>
                  <para>the width which the same as <code>getListheader()</code>'s width.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>src</code>
                  </para>
               </entry>
               <entry>
                  <para>the src of the <code>Listcell</code> it contains, or null if no such cell.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>image</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the image of the <code>Listcell</code> it contains. </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>disable</code>
                  </para>
               </entry>
               <entry>
                  <para>Is this <code>Listitem</code> is disabled.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>sel</code>
                     <code>ected</code>
                  </para>
               </entry>
               <entry>
                  <para>Is this <code>Listitem</code> is selected.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getListbox()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the <code>listbox</code> that contains this column. </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Listbox</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code/>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setParent(org.zkoss.zk.ui.Component parent) </code>
                  </para>
               </entry>
               <entry>
                  <para>Can only be <code>Listbox</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>Invalidate()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="">org.zkoss.zul.Listitem</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent</link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="Listgroupfoot"><title>Listgroupfoot</title>
      <para>GroupFooter serves as a summary listitem of listgroup.</para>
      <para/>
      <para>
         <graphic fileref="images/Listgroupfoot.PNG">2
			
		</graphic>
      </para>
      <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xD;&lt;zk&gt;&#xD;    Listbox support Grouping    &#xD;    &lt;listbox id="listbox" width="250px"&gt;    &#xD;        &lt;listhead sizable="true" id="h"&gt;        &#xD;            &lt;listheader id="h1" label="name" sort="auto" /&gt;            &#xD;            &lt;listheader id="h2" label="gender" sort="auto" /&gt;            &#xD;        &lt;/listhead&gt;        &#xD;        &lt;listgroup id="gp1" open="false"&gt;        &#xD;            &lt;listcell label="Group1"/&gt;            &#xD;            &lt;listcell label="Group2"/&gt;            &#xD;        &lt;/listgroup&gt;        &#xD;        &lt;listitem&gt;        &#xD;            &lt;listcell label="a Mary" /&gt;            &#xD;            &lt;listcell label="a FEMALE" /&gt;            &#xD;        &lt;/listitem&gt;        &#xD;        &lt;listitem&gt;        &#xD;            &lt;listcell label="b Mary" /&gt;            &#xD;            &lt;listcell label="b FEMALE" /&gt;            &#xD;        &lt;/listitem&gt;        &#xD;        &lt;listitem id="li1"&gt;        &#xD;            &lt;listcell label="c Mary1" /&gt;            &#xD;            &lt;listcell label="c FEMALE1" /&gt;            &#xD;        &lt;/listitem&gt;        &#xD;        &lt;listitem&gt;        &#xD;            &lt;listcell label="d Mary" /&gt;            &#xD;            &lt;listcell label="d FEMALE" /&gt;            &#xD;        &lt;/listitem&gt;        &#xD;        &lt;listitem&gt;        &#xD;            &lt;listcell label="e John" /&gt;            &#xD;            &lt;listcell label="e MALE" /&gt;            &#xD;        &lt;/listitem&gt;        &#xD;        &lt;listgroupfoot id="f1"&gt;        &#xD;            &lt;listcell label="10 emails" /&gt;            &#xD;            &lt;listcell label="zk1" /&gt;            &#xD;        &lt;/listgroupfoot&gt;        &#xD;        &lt;listgroup id="g2" label="Grouping 2" /&gt;        &#xD;        &lt;listitem&gt;        &#xD;            &lt;listcell label="Jane" /&gt;            &#xD;            &lt;listcell label="FEMALE" /&gt;            &#xD;        &lt;/listitem&gt;        &#xD;        &lt;listitem&gt;        &#xD;            &lt;listcell label="Henry" /&gt;            &#xD;            &lt;listcell label="MALE" /&gt;            &#xD;        &lt;/listitem&gt;        &#xD;&#xD;    &lt;/listbox&gt;    &#xD;&lt;/zk&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Listgroupfoot</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*Listcell</para></sect3><sect3><title>Supported Events</title></sect3><sect3><title/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead>
         </tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>maxlength</code>
                  </para>
               </entry>
               <entry>
                  <para>the maximal length of this item's label.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>index</code>
                  </para>
               </entry>
               <entry>
                  <para>the index of this item (aka., the order in the listbox). </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>value</code>
                  </para>
               </entry>
               <entry>
                  <para>The value this cell stored.</para>
               </entry>
               <entry>
                  <para>
                     <code>Java.lang.Object</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>label</code>
                  </para>
               </entry>
               <entry>
                  <para>the width which the same as <code>getListheader()</code>'s width.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>src</code>
                  </para>
               </entry>
               <entry>
                  <para>the src of the <code>Listcell</code> it contains, or null if no such cell.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>image</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the image of the <code>Listcell</code> it contains. </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>disable</code>
                  </para>
               </entry>
               <entry>
                  <para>Is this <code>Listitem</code> is disabled.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>sel</code>
                     <code>ected</code>
                  </para>
               </entry>
               <entry>
                  <para>Is this <code>Listitem</code> is selected.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getListbox()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the <code>listbox</code> that contains this column. </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Listbox</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code/>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setParent(org.zkoss.zk.ui.Component parent) </code>
                  </para>
               </entry>
               <entry>
                  <para>Can only be <code>Listbox</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>Invalidate()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="">org.zkoss.zul.Listitem</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent</link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="Listhead"><title>Listhead</title>
      <para>A list headers used to define multi-columns and/or headers. Can only surpport <code>Listheader</code> as its child.</para>
      <para>
         <graphic fileref="images/listbox.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="listbox demo" border="normal"&gt;&#xD;        &lt;listbox id="box" width="250px"&gt;        &#xD;            &lt;listhead sizable="true"&gt;            &#xD;                &lt;listheader label="name" sort="auto"/&gt;                &#xD;                &lt;listheader label="gender" sort="auto"/&gt;                &#xD;            &lt;/listhead&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="Mary"/&gt;                &#xD;                &lt;listcell label="FEMALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="John"/&gt;                &#xD;                &lt;listcell label="MALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="Jane"/&gt;                &#xD;                &lt;listcell label="FEMALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="Henry"/&gt;                &#xD;                &lt;listcell label="MALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listfoot &gt;            &#xD;                &lt;listfooter&gt;&lt;label value="This is footer1"/&gt;&lt;/listfooter&gt;                &#xD;                &lt;listfooter&gt;&lt;label value="This is footer2"/&gt;&lt;/listfooter&gt;                &#xD;            &lt;/listfoot&gt;            &#xD;                &lt;/listbox&gt;                &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Listhead</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Listheader">Listheader</link>
      </para></sect3><sect3><title>Supported Events</title>
      <para>*NONE</para></sect3><sect3><title>Properties</title>
      <para>*NONE</para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <colspec colnum="1" colname="c1"/>
            <colspec colnum="2" colname="c2"/>
            <colspec colnum="3" colname="c3"/>
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getListbox()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the <code>listbox</code> that contains this column. </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Listbox</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="HeaderElement">org.zkoss.zul.impl.HeaderElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Listheader"><title>Listheader</title>
      <para>The list header which defines the attributes and header of a columen of a list box. Its parent must be <code>Listhead</code>.</para>
      <para>
         <graphic fileref="images/listbox.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="listbox demo" border="normal"&gt;&#xD;        &lt;listbox id="box" width="250px"&gt;        &#xD;            &lt;listhead sizable="true"&gt;            &#xD;                &lt;listheader label="name" sort="auto"/&gt;                &#xD;                &lt;listheader label="gender" sort="auto"/&gt;                &#xD;            &lt;/listhead&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="Mary"/&gt;                &#xD;                &lt;listcell label="FEMALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="John"/&gt;                &#xD;                &lt;listcell label="MALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="Jane"/&gt;                &#xD;                &lt;listcell label="FEMALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="Henry"/&gt;                &#xD;                &lt;listcell label="MALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listfoot &gt;            &#xD;                &lt;listfooter&gt;&lt;label value="This is footer1"/&gt;&lt;/listfooter&gt;                &#xD;                &lt;listfooter&gt;&lt;label value="This is footer2"/&gt;&lt;/listfooter&gt;                &#xD;            &lt;/listfoot&gt;            &#xD;                &lt;/listbox&gt;                &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Listheader</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE</para></sect3><sect3><title>Supported Events</title></sect3><sect3><title/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="MouseEvent">
                        <code/>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes user has clicked the component. </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onRightClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="MouseEvent">
                        <code/>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes user has right-clicked the component.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onDoubleClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="MouseEvent">
                        <code/>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes user has double-clicked the component.</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>sortAscending</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the ascending sorter, or null for no sorter for the ascending order.</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.util.Comparator </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>sortDescending</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the descending sorter, or null for no sorter for the descending order. </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.util.Comparator</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>sortDirection</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the sort direction. </para>
                  <para>Value: ascending|descending|natural</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>maxlength</code>
                  </para>
               </entry>
               <entry>
                  <para>the maximal length of each item's label.</para>
               </entry>
               <entry>
                  <para>
                     <code>Positive integer</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <colspec colnum="1" colname="c1"/>
            <colspec colnum="2" colname="c2"/>
            <colspec colnum="3" colname="c3"/>
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getListbox()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the <code>listbox</code> that contains this column. </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Listbox</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getSclass()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the style class.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onSort()</code>
                  </para>
               </entry>
               <entry>
                  <para>It invokes <code>sort(boolean)</code> to sort list items and maintain <code>getSortDirection()</code>.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getColumnIndex()</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Returns the column index, starting from 0.</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setParent(org.zkoss.zk.ui.Component parent) </code>
                  </para>
               </entry>
               <entry>
                  <para>Can only be <code>Listhead</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setSortAscending(java.lang.String) </code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the ascending sorter with the class name, or null for no sorter for the ascending order.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setSortDescending(java.lang.String) </code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the descending sorter with the class name, or null for no sorter for the descending order.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>sort(boolean)</code>
                  </para>
               </entry>
               <entry>
                  <para>Sorts the rows (<code>Row</code>) based on <code>getSortAscending()</code> and <code>getSortDescending()</code>, if <code>getSortDirection()</code> doesn't matches the ascending argument.</para>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>sort(boolean, boolean) </code>
                  </para>
               </entry>
               <entry>
                  <para>Sorts the rows (<code>Row</code>) based on <code>getSortAscending()</code> and <code>getSortDescending()</code>.</para>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="HeaderElement">org.zkoss.zul.impl.HeaderElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Listitem"><title>Listitem</title>
      <para>A list item. </para>
      <para>
         <graphic fileref="images/listbox.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="listbox demo" border="normal"&gt;&#xD;        &lt;listbox id="box" width="250px"&gt;        &#xD;            &lt;listhead sizable="true"&gt;            &#xD;                &lt;listheader label="name" sort="auto"/&gt;                &#xD;                &lt;listheader label="gender" sort="auto"/&gt;                &#xD;            &lt;/listhead&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="Mary"/&gt;                &#xD;                &lt;listcell label="FEMALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="John"/&gt;                &#xD;                &lt;listcell label="MALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="Jane"/&gt;                &#xD;                &lt;listcell label="FEMALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listitem&gt;            &#xD;                &lt;listcell label="Henry"/&gt;                &#xD;                &lt;listcell label="MALE"/&gt;                &#xD;            &lt;/listitem&gt;            &#xD;            &lt;listfoot &gt;            &#xD;                &lt;listfooter&gt;&lt;label value="This is footer1"/&gt;&lt;/listfooter&gt;                &#xD;                &lt;listfooter&gt;&lt;label value="This is footer2"/&gt;&lt;/listfooter&gt;                &#xD;            &lt;/listfoot&gt;            &#xD;                &lt;/listbox&gt;                &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Listitem</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Listcell">Listcell</link>
      </para></sect3><sect3><title>Supported Events</title>
      <para/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onSelect</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="SelectEvent">
                        <code>org.zkoss.zul.event.SelectEvent</code>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Represents an event cause by user's the list selection is changed at the client. </code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <para/>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>maxlength</code>
                  </para>
               </entry>
               <entry>
                  <para>the maximal length of this item's label.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>index</code>
                  </para>
               </entry>
               <entry>
                  <para>the index of this item (aka., the order in the listbox). </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>value</code>
                  </para>
               </entry>
               <entry>
                  <para>The value this cell stored.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Object</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>label</code>
                  </para>
               </entry>
               <entry>
                  <para>the width which the same as <code>getListheader()</code>'s width.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>src</code>
                  </para>
               </entry>
               <entry>
                  <para>the src of the <code>Listcell</code> it contains, or null if no such cell.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>image</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the image of the <code>Listcell</code> it contains. </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>disable</code>
                  </para>
               </entry>
               <entry>
                  <para>Is this <code>Listitem</code> is disabled.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>sel</code>
                     <code>ected</code>
                  </para>
               </entry>
               <entry>
                  <para>Is this <code>Listitem</code> is selected.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <colspec colnum="1" colname="c1"/>
            <colspec colnum="2" colname="c2"/>
            <colspec colnum="3" colname="c3"/>
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getListbox()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the <code>listbox</code> that contains this column. </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Listbox</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code/>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setParent(org.zkoss.zk.ui.Component parent) </code>
                  </para>
               </entry>
               <entry>
                  <para>Can only be <code>Listbox</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>Invalidate()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Longbox"><title>Longbox</title>
      <para>A long<code>box</code> is used to let users input long data.</para>
      <para>
         <graphic fileref="images/longbox.jpg">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="Longbox Demo" border="normal" width="200px"&gt;&#xD;    long box:&lt;longbox/&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Longbox</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE </para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Event Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onChange</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="InputEvent">
                        <code>org.zkoss.zk.ui.event.InputEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes the content of an input component has been modified by the user.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onChanging</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="InputEvent">
                        <code>org.zkoss.zk.ui.event.InputEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes that user is changing the content of an input component. Notice that the component's content (at the server) won't be changed until <code>onChange</code> is received. Thus, you have to invoke the <code>getValue </code>method in the <code>InputEvent </code>class to retrieve the temporary value.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onSelection</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="SelectionEvent">
                        <code>org.zkoss.zk.ui.event.SelectionEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes that user is selecting a portion of the text of an input component. You can retrieve the start and end position of the selected text by use of the <code>getStart</code> and <code>getEnd</code> methods. </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onFocus</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes when a component gets the focus. Remember event listeners execute at the server, so the focus at the client might be changed when the event listener for <code>onFocus</code> got executed.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onBlur</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes when a component loses the focus. Remember event listeners execute at the server, so the focus at the client might be changed when the event listener for <code>onBlur </code>got executed.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onCreate</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="CreateEvent">
                        <code>org.zkoss.ui.zk.ui.event.CreateEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes a component is created when rendering a ZUML page.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onDrop</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="DropEvent">
                        <code>org.zkoss.ui.zk.ui.event.DropEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes another component is dropped to the component that receives this event.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>val</code>
                     <code>ue</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the value. </para>
               </entry>
               <entry>
                  <para>
                     <code>Long</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <para/>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>intValue() </code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the value in int. </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code/>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>longValue() </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Returns the value in long. </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>long</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code/>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="NumberInputElement">
                        <code>org.zkoss.zul.NumberInputElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="FormatInputElement">
                        <code>org.zkoss.zul.FormatInputElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="InputElement">
                        <code>org.zkoss.zul.InputElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="Menu"><title>Menu</title>
      <para>
         <code>An element, much like a button, that is placed on a menu bar. When the user clicks the menu element, the child </code>
         <code>Menupopup</code>
         <code> of the menu will be displayed. This element is also used to create submenus of </code>
         <code>Menupopup</code>
         <code>.</code>
         <code> </code>
      </para>
      <para>
         <graphic fileref="images/Menu.png">2
			
		</graphic>
         <code/>
      </para>
      <programlisting>&lt;menu label="File"&gt;&#xD;    &lt;menupopup&gt;    &#xD;        &lt;menuitem label="New" onClick="alert(self.label)"/&gt;        &#xD;        &lt;menuitem label="Open" onClick="alert(self.label)"/&gt;        &#xD;        &lt;menuitem label="Save" onClick="alert(self.label)"/&gt;        &#xD;        &lt;menuseparator/&gt;        &#xD;        &lt;menuitem label="Exit" onClick="alert(self.label)"/&gt;        &#xD;    &lt;/menupopup&gt;    &#xD;&lt;/menu&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Menu</code> 
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Menupopup">Menupopup</link>
      </para></sect3><sect3><title>Supported Events</title>
      <para>*NONE</para></sect3><sect3><title>Properties</title>
      <para>*NONE</para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getMenupopup()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the <code>Menupopup</code> it owns, or null if not available.</para>
               </entry>
               <entry>
                  <para>
                     <code>Object</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>isTopmost()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether this is an top-level menu, i.e., not owning by another <code>Menupopup</code>.</para>
                  <para>Values: <code>true | false</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>True</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOutAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>insertBefore(org.zkoss.zk.ui.Component child, org.zkoss.zk.ui.Component insertBefore) </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="LabelImageElement">
                        <code>org.zkoss.zul.impl.LabelImageElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="LabelElement">
                        <code>org.zkoss.zul.impl.LabelElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.impl.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link>
                     <code> </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2><title>Menubar</title>
      <para>
         <code>A container that usually contains menu elements.</code>
         <code> </code>
      </para>
      <para>
         <graphic fileref="images/Menu.png">2
			
		</graphic>
         <code/>
      </para>
      <programlisting>&lt;menubar id="menubar"&gt;&#xD;        &lt;menu label="File"&gt;        &#xD;            &lt;menupopup onOpen="alert(self.id)"&gt;            &#xD;                &lt;menuitem label="New" onClick="alert(self.label)"/&gt;                &#xD;                &lt;menuitem label="Open" onClick="alert(self.label)"/&gt;                &#xD;                &lt;menuitem label="Save" onClick="alert(self.label)"/&gt;                &#xD;                &lt;menuseparator/&gt;                &#xD;                &lt;menuitem label="Exit" onClick="alert(self.label)"/&gt;                &#xD;            &lt;/menupopup&gt;            &#xD;        &lt;/menu&gt;        &#xD;        &lt;menu label="Help"&gt;        &#xD;            &lt;menupopup&gt;            &#xD;                &lt;menuitem label="Index" onClick="alert(self.label)"/&gt;                &#xD;                &lt;menu label="About"&gt;                &#xD;                    &lt;menupopup&gt;                    &#xD;                        &lt;menuitem label="About ZK" onClick="alert(self.label)"/&gt;                        &#xD;                        &lt;menuitem label="About Potix" onClick="alert(self.label)"/&gt;                        &#xD;                    &lt;/menupopup&gt;                    &#xD;                &lt;/menu&gt;                &#xD;            &lt;/menupopup&gt;            &#xD;        &lt;/menu&gt;        &#xD;    &lt;/menubar&gt;    &#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Menubar</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE</para></sect3><sect3><title>Supported Events</title>
      <para>*NONE</para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>orient</code>
                  </para>
               </entry>
               <entry>
                  <para>The orient</para>
                  <para>Values:<code> horizontal | vertical</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>vertical</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>autodrop</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether to automatically drop down menus if user moves mouse over it. </para>
                  <para>Values: <code>true | false</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onDrawNewChild(org.zkoss.zk.ui.Component child, java.lang.StringBuffer out) </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>insertBefore()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>Boolean</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.impl.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link>
                     <code> </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Menuitem"><title>Menuitem</title>
      <para>
         <code>A single choice in a </code>
         <code>Menupopup</code>
         <code> element. It acts much like a button but it is rendered on a menu. </code>
         <code/>
      </para>
      <para>
         <graphic fileref="images/Menu.png">2
			
		</graphic>
         <code/>
      </para>
      <programlisting>&lt;menu label="File"&gt;&#xD;    &lt;menupopup&gt;    &#xD;        &lt;menuitem label="New" onClick="alert(self.label)"/&gt;        &#xD;        &lt;menuitem label="Open" onClick="alert(self.label)"/&gt;        &#xD;        &lt;menuitem label="Save" onClick="alert(self.label)"/&gt;        &#xD;        &lt;menuseparator/&gt;        &#xD;        &lt;menuitem label="Exit" onClick="alert(self.label)"/&gt;        &#xD;    &lt;/menupopup&gt;    &#xD;&lt;/menu&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Menuitem</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <code>*NONE</code> 
      </para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Event Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>Description: A menu command is associated with a menu item. There are two ways to associate a command to it: the<code> onClick</code> event and the <code>href</code> property. If a event listener is added for a menu item for the <code>onClick</code> event, the listener is invoked when the item is clicked.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>value</code>
                  </para>
               </entry>
               <entry>
                  <para>The value</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;empty string&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>href</code>
                  </para>
               </entry>
               <entry>
                  <para>The target frame or window.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>Target</code>
                  </para>
               </entry>
               <entry>
                  <para>The href</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>autocheck</code>
                  </para>
               </entry>
               <entry>
                  <para>Whether the menuitem check mark will update each time the menu item is selected</para>
                  <para>Values: <code>true | false</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>checked</code>
                  </para>
               </entry>
               <entry>
                  <para>Whether it is checked.</para>
                  <para>Values: <code>true | false</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>isTopmost()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether this is an top-level menu, i.e., not owning by another <code>Menupopup</code>.</para>
                  <para>Values: true | false</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="LabelImageElement">
                        <code>org.zkoss.zul.impl.LabelImageElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="LabelElement">
                        <code>org.zkoss.zul.impl.LabelElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.impl.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link>
                     <code> </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Menupopup"><title>Menupopup</title>
      <para>
         <code>A container used to display menus. It should be placed inside a Menu.</code>
      </para>
      <para>
         <code>Supported event: </code>
         <code>onOpen</code>
         <code>.</code>
      </para>
      <para>
         <code>Note: to have better performance, </code>
         <code>onOpen</code>
         <code> is sent only if non-deferrable event listener is registered (see </code>
         <code>Deferrable</code>
         <code>).</code>
      </para>
      <para>
         <code>To load the content dynamically, you can listen to the </code>
         <code>onOpen</code>
         <code> event, and then create menuitem when </code>
         <code>OpenEvent.isOpen()</code>
         <code> is true.</code>
      </para>
      <para>
         <code>Default </code>
         <code>HtmlBasedComponent.getSclass()</code>
         <code>: </code>
         <code>menupopup</code>
         <code>. </code>
         <code/>
      </para>
      <para>
         <graphic fileref="images/Menu.png">2
			
		</graphic>
         <code/>
      </para>
      <programlisting>&lt;menubar id="menubar"&gt;&#xD;        &lt;menu label="File"&gt;        &#xD;            &lt;menupopup onOpen="alert(self.id)"&gt;            &#xD;                &lt;menuitem label="New" onClick="alert(self.label)"/&gt;                &#xD;                &lt;menuitem label="Open" onClick="alert(self.label)"/&gt;                &#xD;                &lt;menuitem label="Save" onClick="alert(self.label)"/&gt;                &#xD;                &lt;menuseparator/&gt;                &#xD;                &lt;menuitem label="Exit" onClick="alert(self.label)"/&gt;                &#xD;            &lt;/menupopup&gt;            &#xD;        &lt;/menu&gt;        &#xD;        &lt;menu label="Help"&gt;        &#xD;            &lt;menupopup&gt;            &#xD;                &lt;menuitem label="Index" onClick="alert(self.label)"/&gt;                &#xD;                &lt;menu label="About"&gt;                &#xD;                    &lt;menupopup&gt;                    &#xD;                        &lt;menuitem label="About ZK" onClick="alert(self.label)"/&gt;                        &#xD;                        &lt;menuitem label="About Potix" onClick="alert(self.label)"/&gt;                        &#xD;                    &lt;/menupopup&gt;                    &#xD;                &lt;/menu&gt;                &#xD;            &lt;/menupopup&gt;            &#xD;        &lt;/menu&gt;        &#xD;    &lt;/menubar&gt;    &#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Menupopup</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Menu">
            <code>Menu</code>
         </link>
         <code>,</code>
         <link linkend="Menuitem">
            <code>Menuitem</code>
         </link>
         <code>,</code>
         <link linkend="Menuseparator">
            <code>Menuseparator</code>
         </link> 
      </para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Event Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onOpen</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="OpenEvent">
                        <code>org.zkoss.zk.ui.event.OpenEvent</code>
                     </link>
                  </para>
                  <para>Description: Denotes user has opened or closed a component.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <para>*NONE</para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>insertBefore(org.zkoss.zk.ui.Component child, org.zkoss.zk.ui.Component insertBefore) </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="LabelImageElement">
                        <code>org.zkoss.zul.impl.LabelImageElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="LabelElement">
                        <code>org.zkoss.zul.impl.LabelElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.impl.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link>
                     <code> </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Menuseparator"><title>Menuseparator</title>
      <para>
         <code>Used to create a separator between menu items..</code>
         <code> </code>
      </para>
      <para>
         <graphic fileref="images/Menu.png">2
			
		</graphic>
         <code/>
      </para>
      <programlisting>&lt;menu label="File"&gt;&#xD;    &lt;menupopup&gt;    &#xD;        &lt;menuitem label="New" onClick="alert(self.label)"/&gt;        &#xD;        &lt;menuitem label="Open" onClick="alert(self.label)"/&gt;        &#xD;        &lt;menuitem label="Save" onClick="alert(self.label)"/&gt;        &#xD;        &lt;menuseparator/&gt;        &#xD;        &lt;menuitem label="Exit" onClick="alert(self.label)"/&gt;        &#xD;    &lt;/menupopup&gt;    &#xD;&lt;/menu&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Menuseparator</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE</para></sect3><sect3><title>Supported Events</title>
      <para>*NONE</para></sect3><sect3><title>Properties</title>
      <para>*NONE</para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>isChildable()</code>
                  </para>
               </entry>
               <entry>
                  <para>Not childable.</para>
                  <para>Default: <code>false</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.impl.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link>
                     <code> </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="North"><title>North</title>
      <para>This component is a north region. The default class of CSS is specified "layout-region-north".</para>
      <para/>
      <para>
         <graphic fileref="images/layout.jpg">2
			
		</graphic>
      </para>
      <programlisting>&lt;borderlayout height="500px"&gt;&#xD;    &lt;north size="50%" border="0"&gt;    &#xD;        &lt;borderlayout&gt;        &#xD;            &lt;west size="25%" border="none" flex="true"&gt;            &#xD;                &lt;div style="background:#B8D335"&gt;                &#xD;                    &lt;label value="25%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/west&gt;            &#xD;            &lt;center border="none" flex="true"&gt;            &#xD;                &lt;div style="background:#E6D92C"&gt;                &#xD;                    &lt;label value="25%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/center&gt;            &#xD;            &lt;east size="50%" border="none" flex="true"&gt;            &#xD;                &lt;label value="Here is a non-border"                &#xD;                    style="color:gray;font-size:30px" /&gt;                    &#xD;            &lt;/east&gt;            &#xD;        &lt;/borderlayout&gt;        &#xD;    &lt;/north&gt;    &#xD;    &lt;center border="0"&gt;    &#xD;        &lt;borderlayout&gt;        &#xD;            &lt;west size="30%" flex="true" border="0"&gt;            &#xD;                &lt;div style="background:#E6D92C"&gt;                &#xD;                    &lt;label value="30%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/west&gt;            &#xD;            &lt;center&gt;            &#xD;                &lt;label value="Here is a border"                &#xD;                    style="color:gray;font-size:30px" /&gt;                    &#xD;            &lt;/center&gt;            &#xD;            &lt;east size="30%" flex="true" border="0"&gt;            &#xD;                &lt;div style="background:#B8D335"&gt;                &#xD;                    &lt;label value="30%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/east&gt;            &#xD;        &lt;/borderlayout&gt;        &#xD;    &lt;/center&gt;    &#xD;&lt;/borderlayout&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zkex.zul.North</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE</para></sect3><sect3><title>Supported Events </title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>OnOpen</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="OpenEvent">
                        <code>org.zkoss.zk.ui.event.OpenEvent</code>
                     </link>
                  </para>
                  <para>
                     <code>Description: </code>
                     <code>When a layout is collapsed or opened by a user, the </code>
                     <code>onOpen</code>
                     <code> event is sent to the application.</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>size</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the size of this region.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getPosition()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns <code>Borderlayout.NORTH.</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>setWidth(java.lang.String width)</para>
               </entry>
               <entry>
                  <para>The width can't be specified in this component because its width is determined by other region components (West or East).</para>
               </entry>
               <entry>
                  <para>void</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="LayoutRegion">org.zkoss.zkex.zul.LayoutRegion </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="Paging"><title>Paging</title>
      <para>A <code>paging</code> component is used to separate long content into multiple pages. For example, assume that you have 100 items and prefer to show 20 items at a time, then you can use the paging components as follows.</para>
      <para>Then, when a user clicks on the hyperlinks, the <code>onPaging </code>event is sent with an instance of <code>org.zkoss.zul.event.PagingEvent</code> to the paging component. To decide which portion of your 100 items are visible, you shall add a listener to the paging component.</para>
      <para>
         <graphic fileref="images/paging.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;vbox&gt;&#xD;&lt;paging totalSize="100" pageSize="20"/&gt;&#xD;&lt;/vbox&gt;&#xD;</programlisting>
      <para/>
      <para>The <code>listbox </code>and <code>grid </code>component support the paging intrinsically, so you don't need to specify a paging component explicitly as above, unless you want to have different visual layout or to control multiple listbox and grid with one paging component.</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Paging</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE </para></sect3><sect3><title>Supported Events</title>
      <para/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onPaging</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="PagingEvent">
                        <code>org.zkoss.zk.ui.event.PagingEvent</code>
                     </link>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> </code>
                     <code>Notifies one of the pages of a multi-page component is selected by the user.</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>activePage</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the active page (starting from 0).</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>0</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>aut</code>
                     <code>ohide</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether to automatically hide this component if there is only one page available.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>det</code>
                     <code>ailed</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether to show the detailed info, such as <code>Paginal.getTotalSize()</code>.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>pageIncrement</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the number of page anchors shall appear at the client.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>10</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>pageSize</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the number of items per page.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>20</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>totalSize</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the total number of items.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>0</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getPageCount</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the number of pages</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getInnerTags</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the inner HTML tags of this component.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/>
      <para/></sect3></sect2><sect2 id="Panel"><title>Panel</title>
      <para>Panel is a container that has specific functionality and structural components that make it the perfect building block for application-oriented user interfaces. The Panel contains bottom, top, and foot toolbars, along with separate header, footer and body sections. It also provides built-in collapsible, closable, maximizable, and minimizable behavior, along with a variety of pre-built tool buttons that can be wired up to provide other customized behavior. Panels can be easily embedded into any kind of ZUL component that is allowed to have children or layout component. Panels also provide specific features like float and move. Unlike Window, Panels can only be floated and moved inside its parent node, which is not using zk.setVParent() function at client side. In other words, if Panel's parent node is an relative position, the floated panel is only inside its parent, not the whole page. The second difference of Window is that Panel is not an independent ID space (by implementing IdSpace), so the ID of each child can be used throughout the panel.</para>
      <para>
         <graphic fileref="images/Panel.PNG">2
			
		</graphic>
      </para>
      <programlisting>&lt;panel height="100px" width="200px" style="margin-bottom:10px"&#xD;    title="Panel1" border="normal" maximizable="true"    &#xD;    collapsible="true"&gt;    &#xD;    &lt;panelchildren&gt;PanelContent1&lt;/panelchildren&gt;    &#xD;&lt;/panel&gt;&#xD;&lt;panel height="100px" width="200px" framable="true" title="Panel2"&#xD;    border="normal" maximizable="true" style="margin-bottom:10px"&gt;    &#xD;    &lt;panelchildren&gt;PanelContent2&lt;/panelchildren&gt;    &#xD;&lt;/panel&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Panel</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Panelchildren">
            <code>Panelchildren</code>
         </link>
      </para></sect3><sect3><title>Supported Events</title>
      <para/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onMove </code>
                  </para>
               </entry>
               <entry>
                  <para>Event: <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event</code>
                     </link>
                  </para>
                  <para>Denotes the close button is pressed by a user, and the</para>
                  <para>component shall detach itself.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onOpen </code>
                  </para>
               </entry>
               <entry>
                  <para>Event: <link linkend="OpenEvent">
                        <code>org.zkoss.zk.ui.event.OpenEvent</code>
                     </link>
                  </para>
                  <para>Denotes user has opened or closed a component.<code> </code>
                  </para>
                  <para>
                     <code>Note:</code>
                  </para>
                  <para>Unlike <code>onClose</code>, this event is only a notification. The</para>
                  <para>client sends this event after opening or closing the</para>
                  <para>component.</para>
                  <para>It is useful to implement load-on-demand by listening to</para>
                  <para>the <code>onOpen</code> event, and creating components when the</para>
                  <para>first time the component is opened.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onMaximize</code>
                     <code> </code>
                  </para>
               </entry>
               <entry>
                  <para>Event: <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Maximize</code>
                     </link>
                  </para>
                  <para>Denotes user has maximize a component.<code> </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onMinimize</code>
                     <code> </code>
                  </para>
               </entry>
               <entry>
                  <para>Event: <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.MinimizeEvent</code>
                     </link>
                  </para>
                  <para>Denotes user has minimize a component.<code> </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onClose </code>
                  </para>
               </entry>
               <entry>
                  <para>Event: <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event</code>
                     </link>
                  </para>
                  <para>Denotes the close button is pressed by a user, and the</para>
                  <para>component shall detach itself.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <para/>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>border </code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the border </para>
                  <para>Values: <code>none</code> | <code>normal</code> 
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>closable</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether to show a close button on the title bar. </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>Collapsible</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether to show a toggle button on the title bar. </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>Floatable</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether to float the panel to display it inline where it is rendered. </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>Framable</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether to render the panel with custom rounded borders. </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>maximizable</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether to display the maximizing button and allow the user to maximize the panel, when a panel is maximized, the button will automatically change to a restore button with the appropriate behavior already built-in that will restore the panel to its previous size. </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>maximized</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether the panel is maximized, and then the size of the panel will depend on it to show a appropriate size. </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>minimized</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether to display the minimizing button and allow the user to minimize the pane </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>minimizable</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether the panel is minimized. </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>Movable</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether to move the panel to display it inline where it is rendered. </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>open</code>
                  </para>
               </entry>
               <entry>
                  <para>Opens or closes this Panel. </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>title</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the title. </para>
               </entry>
               <entry>
                  <para>String</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>Visible</code>
                     <code> </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>addMoved(org.zkoss.zk.ui.Component oldparent, org.zkoss.zk.ui.Page oldpg, org.zkoss.zk.ui.Page newpg) </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>void</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>addToolbar(java.lang.String name, Toolbar toolbar) </code>
                  </para>
               </entry>
               <entry>
                  <para>Adds the toolbar of the panel by these names, "tbar", "bbar", and "fbar". </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>clone()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Object</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getBottomToolbar()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the bottom toolbar of this panel. </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Toolbar</code>
                  </para>
                  <para>
                     <code/>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getCaption()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the caption of this panel. </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Caption</code>
                  </para>
                  <para>
                     <code/>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getFootToolbar()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Toolbar</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getMoldSclass()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>String </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>String </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getPanelchildren()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the panelchildren of this panel. </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Panelchildren</code>
                  </para>
                  <para>
                     <code/>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getRealSclass()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>String </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>insertBefore(org.zkoss.zk.ui.Component child, </code>
                  </para>
                  <para>
                     <code>org.zkoss.zk.ui.Component insertBefore) </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onChildRemoved(org.zkoss.zk.ui.Component child)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onClose()</code>
                  </para>
               </entry>
               <entry>
                  <para>Process the onClose event sent when the close button is </para>
                  <para>pressed.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setParent(org.zkoss.zk.ui.Component parent)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para>Inherited From </para>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/>
      <para/></sect3></sect2><sect2 id="Panelchildren"><title>Panelchildren</title>
      <para>Panelchildren is used for Panel component to manage each child who will be shown in the body of Panel. Note that the size of Panelchildren is automatically calculated by Panel so both setWidth(String) and setHeight(String) are read-only.</para>
      <para>
         <graphic fileref="images/Panel.PNG">2
			
		</graphic>
      </para>
      <programlisting>&lt;panel height="100px" width="200px" style="margin-bottom:10px"&#xD;    title="Panel1" border="normal" maximizable="true"    &#xD;    collapsible="true"&gt;    &#xD;    &lt;panelchildren&gt;PanelContent1&lt;/panelchildren&gt;    &#xD;&lt;/panel&gt;&#xD;&lt;panel height="100px" width="200px" framable="true" title="Panel2"&#xD;    border="normal" maximizable="true" style="margin-bottom:10px"&gt;    &#xD;    &lt;panelchildren&gt;PanelContent2&lt;/panelchildren&gt;    &#xD;&lt;/panel&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Panelchildren</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*ALL</para></sect3><sect3><title>Supported Events</title>
      <para>*None</para></sect3><sect3><title>Properties</title>
      <para>*None</para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>getMoldSclass() </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>String</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>getRealSclass() </para>
               </entry>
               <entry>
                  <para>Returns the real style class used for the content block of the panel.</para>
               </entry>
               <entry>
                  <para>String</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setHeight(java.lang.String height) </code>
                  </para>
               </entry>
               <entry>
                  <para> This method is unsupported. </para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setWidth(java.lang.String width) </code>
                  </para>
               </entry>
               <entry>
                  <para> This method is unsupported. </para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setParent(org.zkoss.zk.ui.Component parent)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para>Inherited From </para>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="Popup"><title>Popup</title>
      <para>
         <code>A container that is displayed as a popup. The popup window does not have any special frame. Popups can be displayed when an element is clicked by assigning the id of the popup to either the</code>
         <code> XulElement.setPopup(java.lang.String), XulElement.setContext(java.lang.String) or XulElement.setTooltip(java.lang.String) attribute of the element. </code>
      </para>
      <para>
         <graphic fileref="images/Popup.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;label value="Move Mouse Over Me!" tooltip="editPopup"/&gt;&#xD;    &lt;separator bar="true"/&gt;    &#xD;    &lt;label value="Tooptip for Another Popup" tooltip="any"/&gt;    &#xD;    &lt;separator bar="true"/&gt;    &#xD;    ...    &#xD;    &lt;popup id="any" width="300px"&gt;    &#xD;        &lt;vbox&gt;        &#xD;            ZK simply rich.            &#xD;            &lt;toolbarbutton label="ZK your killer Web application now!" href="http://www.zkoss.org"/&gt;            &#xD;        &lt;/vbox&gt;        &#xD;    &lt;/popup&gt;    &#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.popup</code> 
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*ALL</para></sect3><sect3><title>Supported Events</title>
      <para>*NONE</para></sect3><sect3><title>Attributes</title>
      <para>*NONE</para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getOutAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>setVisible()</para>
               </entry>
               <entry>
                  <para>Not allowed</para>
               </entry>
               <entry>
                  <para>boolean</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.impl.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link>
                     <code> </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2><title>Portallayout</title>
      <para>A portallayout lays out a container which can have multiple columns, and each column may contain one or more panel. Portallayout provides a way to drag-and-drop panel into other portalchildren from the same portallayout.</para>
      <para>Use Portallayout need assign width (either present or pixel) on every Portalchildren, or we cannot make sure about layout look.</para>
      <para>
         <graphic fileref="images/Portallayout.PNG">2
			
		</graphic>
      </para>
      <programlisting>&lt;portallayout&gt;&#xD;    &lt;portalchildren width="30%"&gt;    &#xD;        &lt;panel height="150px" title="Google Tools"&gt;        &#xD;            &lt;panelchildren&gt;...&lt;/panelchildren&gt;            &#xD;        &lt;/panel&gt;        &#xD;        &lt;panel height="300px" title="LabPixies Clock"&gt;        &#xD;            &lt;panelchildren&gt;...&lt;/panelchildren&gt;            &#xD;        &lt;/panel&gt;        &#xD;    &lt;/portalchildren&gt;    &#xD;    &lt;portalchildren width="30%"&gt;    &#xD;        &lt;panel height="150px" title="Google Tools"&gt;        &#xD;            &lt;panelchildren&gt;...&lt;/panelchildren&gt;            &#xD;        &lt;/panel&gt;        &#xD;    &lt;/portalchildren&gt;    &#xD;&lt;/portallayout&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zkmax.zul.Portallayout</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Portalchildren">
            <code>Portalchildren</code>
         </link>
      </para></sect3><sect3><title>Supported Events</title>
      <para/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onPortalMove</code>
                  </para>
               </entry>
               <entry>
                  <para>Event: <link linkend="PortalMoveEvent">org.zkoss.zkmax.event.PortalMoveEvent</link>
                  </para>
                  <para>Represents an event caused by a portal being moved.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <para>*None</para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>getMoldSclass() </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>String</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getPanel(int col, int row) </code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the specified pnael, or null if not available. </para>
               </entry>
               <entry>
                  <para>org.zkoss.zul.Panel </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getPosition(org.zkoss.zul.Panel panel) </code>
                  </para>
               </entry>
               <entry>
                  <para>Returns an int array[col, row] that indicates the specified panel located within this portal layout. </para>
               </entry>
               <entry>
                  <para>int[]</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>insertBefore(org.zkoss.zk.ui.Component child, org.zkoss.zk.ui.Component insertBefore)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>boolean</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onChildAdded(org.zkoss.zk.ui.Component child)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onChildRemoved(org.zkoss.zk.ui.Component child) </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setPanel(org.zkoss.zul.Panel panel, int col, int row)</code> 
                  </para>
               </entry>
               <entry>
                  <para>Sets the specified panel via the position(col and row). </para>
               </entry>
               <entry>
                  <para>boolean</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="Portalchildren"><title>Portalchildren</title>
      <para>The column of Portallayout. </para>
      <para>Child of Portalchildren can only be Panel.</para>
      <para>
         <graphic fileref="images/Portallayout.PNG">2
			
		</graphic>
      </para>
      <programlisting>&lt;portallayout&gt;&#xD;    &lt;portalchildren width="30%"&gt;    &#xD;        &lt;panel height="150px" title="Google Tools"&gt;        &#xD;            &lt;panelchildren&gt;...&lt;/panelchildren&gt;            &#xD;        &lt;/panel&gt;        &#xD;        &lt;panel height="300px" title="LabPixies Clock"&gt;        &#xD;            &lt;panelchildren&gt;...&lt;/panelchildren&gt;            &#xD;        &lt;/panel&gt;        &#xD;    &lt;/portalchildren&gt;    &#xD;    &lt;portalchildren width="30%"&gt;    &#xD;        &lt;panel height="150px" title="Google Tools"&gt;        &#xD;            &lt;panelchildren&gt;...&lt;/panelchildren&gt;            &#xD;        &lt;/panel&gt;        &#xD;    &lt;/portalchildren&gt;    &#xD;&lt;/portallayout&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zkmax.zul.Portalchildren</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Panel">
            <code>Panel</code>
         </link>
      </para></sect3><sect3><title>Supported Events </title>
      <para>*None</para></sect3><sect3><title>Properties</title>
      <para>*None</para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>getMoldSclass() </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>String</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>insertBefore(org.zkoss.zk.ui.Component child, org.zkoss.zk.ui.Component insertBefore)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>boolean</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onChildAdded(org.zkoss.zk.ui.Component child)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onChildRemoved(org.zkoss.zk.ui.Component child)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setParent(org.zkoss.zk.ui.Component parent)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/>
      <para/></sect3></sect2><sect2 id="Progressmeter"><title>Progressmeter</title>
      <para>A progress meter is a bar that indicates how much of a task has been completed. The value property must be in the range between 0 and 100.</para>
      <para>
         <graphic fileref="images/progressmeter.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;progressmeter value="10"/&gt;    &#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Progressmeter</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para> *NONE</para></sect3><sect3><title>Supported Events</title>
      <para> *NONE</para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>value</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the current value of the progress meter. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para>Methods</para>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the grid that this belongs to.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>isChildable()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.impl.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="Radio"><title>Radio</title>
      <para>A <code>radio</code> button is a component that can be turned on and off. Radio buttons are grouped together in a group, called <code>radiogroup</code>. Only one radio button with the same group may be selected at a time.</para>
      <para>
         <graphic fileref="images/radio.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="Radiobox &amp;amp; Radio Demo" &gt;&#xD;&lt;vbox&gt;&#xD;&lt;radiogroup onCheck="fruit.value = self.selectedItem.label"&gt;&#xD;&lt;radio label="Apple"/&gt;&#xD;&lt;radio label="Orange"/&gt;&#xD;&lt;radio label="Banana"/&gt;&#xD;&lt;/radiogroup&gt;&#xD;You have selected :&lt;label id="fruit" style="color:red"/&gt;&#xD;&lt;/vbox&gt;&#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Radio</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE </para></sect3><sect3><title>Supported Events</title>
      <para/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onFocus</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event</code>
                     </link>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Description:</code>
                     <code> Denotes when a component gets the focus.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onBlur</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.even.Event</code>
                     </link>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Description: Denotes when a component loses the focus.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onCheck</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="CheckEvent">
                        <code>org.zkoss.zk.ui.event.CheckEvent</code>
                     </link>
                  </para>
                  <para>
                     <code>Description: Denotes when a component loses the focus.</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>value</code>
                  </para>
               </entry>
               <entry>
                  <para>The <code>String</code> value denote this radio.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>selected</code>
                  </para>
               </entry>
               <entry>
                  <para>The state of this radio.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>IsChildable</code>
                  </para>
               </entry>
               <entry>
                  <para>Determines whether it accepts child components</para>
                  <para>Note: No child is allowed. </para>
               </entry>
               <entry>
                  <para>
                     <code>Boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getInnerAttrs</code>
                  </para>
               </entry>
               <entry>
                  <para>Appends interior attributes for generating the HTML <code>checkbox</code> tag (the name, disabled and other attribute).</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getRadiogroup</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns <code>Radiogroup</code> that this radio button belongs to.</para>
               </entry>
               <entry>
                  <para>
                     <code>Radiogroup</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getName</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the name of this radio button.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="LabelImageElement">org.zkoss.zul.CheckBox</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="LabelImageElement">org.zkoss.zul.impl.LabelImageElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="LabelElement">org.zkoss.zul.impl.LabelElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Radiogroup"><title>Radiogroup</title>
      <para>Used to group multiple <code>radio</code> buttons. In one <code>radiogroup</code>. Only one radio button may be selected at a time.</para>
      <para>
         <graphic fileref="images/radio.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="Radiobox &amp;amp; Radio Demo" &gt;&#xD;&lt;vbox&gt;&#xD;&lt;radiogroup onCheck="fruit.value = self.selectedItem.label"&gt;&#xD;&lt;radio label="Apple"/&gt;&#xD;&lt;radio label="Orange"/&gt;&#xD;&lt;radio label="Banana"/&gt;&#xD;&lt;/radiogroup&gt;&#xD;You have selected :&lt;label id="fruit" style="color:red"/&gt;&#xD;&lt;/vbox&gt;&#xD;&lt;/window&gt;&#xD;</programlisting>
      <para>Note: To support the versatile layout, a radio group accepts any kind of children , including Radio. On the other hand, the parent of a radio, if any, must be a radio group.</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Radiogroup</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*ALL</para></sect3><sect3><title>Supported Events</title>
      <para>*NONE</para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>value</code>
                  </para>
               </entry>
               <entry>
                  <para>The <code>String</code> value denote this radio.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>selectedIndex</code>
                  </para>
               </entry>
               <entry>
                  <para>the index of the selected radio button (-1 if no one is selected). </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>selectedItem</code>
                  </para>
               </entry>
               <entry>
                  <para>the selected <code>radio</code> button. </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Radio</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>name</code>
                  </para>
               </entry>
               <entry>
                  <para>the name of this group of radio buttons. </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getItemCount</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the number of radio buttons in this group. </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>app</code>
                     <code>endItem</code>
                  </para>
               </entry>
               <entry>
                  <para>Appends a radio button. </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Radio</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>removeItemAt</code>
                  </para>
               </entry>
               <entry>
                  <para>Removes the child <code>radio</code> button in the list box at the given index. </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Radio</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Row"><title>Row</title>
      <para>A single row in a <code>Rows</code> element. Each child of the <code>Row</code> element is placed in each successive cell of the grid. The row with the most child elements determines the number of <code>columns</code> in each <code>row</code>.</para>
      <para>Default getSclass(): the same as grid's sclass. </para>
      <para>
         <graphic fileref="images/grid.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="Grid Demo" border="normal" width="360px"&gt;&#xD;    &lt;zscript&gt;    &#xD;    class Comp implements Comparator {    &#xD;        private boolean _asc;        &#xD;        public Comp(boolean asc) {        &#xD;            _asc = asc;            &#xD;        }        &#xD;        public int compare(Object o1, Object o2) {        &#xD;            String s1 = o1.getChildren().get(0).getValue(),            &#xD;                s2 = o2.getChildren().get(0).getValue();                &#xD;            int v = s1.compareTo(s2);            &#xD;            return _asc ? v: -v;            &#xD;        }        &#xD;    }    &#xD;    Comp asc = new Comp(true), dsc = new Comp(false);    &#xD;    &lt;/zscript&gt;    &#xD;    &lt;grid&gt;    &#xD;        &lt;columns sizable="true"&gt;        &#xD;            &lt;column label="Type" sortAscending="&amp;#36;{asc}" sortDescending="&amp;#36;{dsc}"/&gt;            &#xD;            &lt;column label="Content"/&gt;            &#xD;        &lt;/columns&gt;        &#xD;        &lt;rows&gt;        &#xD;            &lt;row&gt;            &#xD;                &lt;label value="File:"/&gt;                &#xD;                &lt;textbox width="99%"/&gt;                &#xD;            &lt;/row&gt;            &#xD;            &lt;row&gt;            &#xD;                &lt;label value="Type:"/&gt;                &#xD;                &lt;hbox&gt;                &#xD;                    &lt;listbox rows="1" mold="select"&gt;                    &#xD;                        &lt;listitem label="Java Files,(*.java)"/&gt;                        &#xD;                        &lt;listitem label="All Files,(*.*)"/&gt;                        &#xD;                    &lt;/listbox&gt;                    &#xD;                    &lt;button label="Browse..."/&gt;                    &#xD;                &lt;/hbox&gt;                &#xD;            &lt;/row&gt;            &#xD;            &lt;row&gt;            &#xD;                &lt;label value="Options:"/&gt;                &#xD;                &lt;textbox rows="3" width="99%"/&gt;                &#xD;            &lt;/row&gt;            &#xD;        &lt;/rows&gt;        &#xD;    &lt;/grid&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Row</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*ALL</para></sect3><sect3><title>Supported Events</title>
      <para>*NONE</para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>align</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the horizontal alignment of the whole grid.</code>
                  </para>
                  <para>
                     <code>Val</code>
                     <code>ue:</code>
                     <code> left|center|right</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>nowrap</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the nowrap.</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>boo</code>
                     <code>lean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>sclass</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the style class.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>spans</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the spans, which is a list of numbers separated by comma. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>valign</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the vertical alignment of the whole row. </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>val</code>
                     <code>ue</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the value.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Object</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getChildAttrs(int) </code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the HTML attributes for the child of the specified index. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getGrid()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the grid that contains this row. </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Grid</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onDrawNewChild(org.zkoss.zk.ui.Component, java.lang.StringBuffer) </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setParent(org.zkoss.zk.ui.Component)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setStyle(java.lang.String)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Rows"><title>Rows</title>
      <para>Defines the <code>rows</code> of a grid. Each child of a <code>rows</code> element should be a <code>org.zkoss.zul.Row</code> element.</para>
      <para>
         <graphic fileref="images/grid.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="Grid Demo" border="normal" width="360px"&gt;&#xD;    &lt;zscript&gt;    &#xD;    class Comp implements Comparator {    &#xD;        private boolean _asc;        &#xD;        public Comp(boolean asc) {        &#xD;            _asc = asc;            &#xD;        }        &#xD;        public int compare(Object o1, Object o2) {        &#xD;            String s1 = o1.getChildren().get(0).getValue(),            &#xD;                s2 = o2.getChildren().get(0).getValue();                &#xD;            int v = s1.compareTo(s2);            &#xD;            return _asc ? v: -v;            &#xD;        }        &#xD;    }    &#xD;    Comp asc = new Comp(true), dsc = new Comp(false);    &#xD;    &lt;/zscript&gt;    &#xD;    &lt;grid&gt;    &#xD;        &lt;columns sizable="true"&gt;        &#xD;            &lt;column label="Type" sortAscending="&amp;#36;{asc}" sortDescending="&amp;#36;{dsc}"/&gt;            &#xD;            &lt;column label="Content"/&gt;            &#xD;        &lt;/columns&gt;        &#xD;        &lt;rows&gt;        &#xD;            &lt;row&gt;            &#xD;                &lt;label value="File:"/&gt;                &#xD;                &lt;textbox width="99%"/&gt;                &#xD;            &lt;/row&gt;            &#xD;            &lt;row&gt;            &#xD;                &lt;label value="Type:"/&gt;                &#xD;                &lt;hbox&gt;                &#xD;                    &lt;listbox rows="1" mold="select"&gt;                    &#xD;                        &lt;listitem label="Java Files,(*.java)"/&gt;                        &#xD;                        &lt;listitem label="All Files,(*.*)"/&gt;                        &#xD;                    &lt;/listbox&gt;                    &#xD;                    &lt;button label="Browse..."/&gt;                    &#xD;                &lt;/hbox&gt;                &#xD;            &lt;/row&gt;            &#xD;            &lt;row&gt;            &#xD;                &lt;label value="Options:"/&gt;                &#xD;                &lt;textbox rows="3" width="99%"/&gt;                &#xD;            &lt;/row&gt;            &#xD;        &lt;/rows&gt;        &#xD;    &lt;/grid&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Rows</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Row">Row</link>
      </para></sect3><sect3><title>Supported Events</title>
      <para>*NONE</para></sect3><sect3><title>Properties</title>
      <para>*NONE</para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getGrid()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the grid that contains this rows.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Grid</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getVisibleBegin()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the index of the first visible child. </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getVisibleEnd()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the index of the last visible child. </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>insertBefore(org.zkoss.zk.ui.Component, org.zkoss.zk.ui.Component)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onChildAdded(org.zkoss.zk.ui.Component)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onChildRemoved(org.zkoss.zk.ui.Component)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setParent(org.zkoss.zk.ui.Component)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent</link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Script"><title>Script</title>
      <para>The script component is used to specify the script codes running at the browser. Notice that, unlike zscript, the script codes are running at the browser. They are usually written in JavaScript which is supported by the most of browsers. The simplest format is as follows.</para>
      <para>
         <graphic fileref="images/script.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;zk&gt;&#xD;&lt;window id="win" &gt;&#xD;    &lt;button label="change color" onClick='Clients.evalJavaScript("myfunc()")'/&gt;    &#xD;&lt;/window&gt;&#xD;&lt;script type="text/javascript"&gt;&#xD;function myfunc() {&#xD;    $e("${win.uuid}").style.backgroundColor = "blue";    &#xD;}&#xD;&lt;/script&gt;&#xD;&lt;/zk&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Script</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para> *NONE</para></sect3><sect3><title>Supported Events</title>
      <para> *NONE</para></sect3><sect3><title>Properties </title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>charset</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether the button (on the right of the textbox) is visible. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>content</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the content of the script element.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>defer</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether to defer the execution of the script codes.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>src</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the URI of the source that contains the script codes.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>type</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the type of this client script.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para>Methods</para>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry><sect3><title>isChildable()</title></sect3></entry>
               <entry>
                  <para>Not childable.</para>
                  <para>Value: false</para>
               </entry>
               <entry><sect3><title>boolean</title></sect3></entry>
            </row>
            <row>
               <entry>
                  <para>redraw(java.io.Writer out)</para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="Slider"><title>Slider</title>
      <para>A slider with slid and knob</para>
      <para>A slider is used to let user specifying a value by scrolling.</para>
      <para>A slider accepts a range of value starting from 0 to 100. You could change the maximal</para>
      <para>allowed value by the <code>maxpos</code> property.</para>
      <para>
         <graphic fileref="images/Slider.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;slider id="slider" /&gt;&#xD;&lt;slider curpos=”1” maxpos=”20” /&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Slider</code> 
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE </para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>OnScroll</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="ScrollEvent">
                        <code>org.zkoss.zk.ui.event.ScrollEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="ScrollEvent">
                        <code/>
                     </link>
                  </para>
                  <para>Description: Denotes the content of a scrollable component has been scrolled by the user.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>OnScrolling</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="ScrollEvent">
                        <code>org.zkoss.zk.ui.event.ScrollEvent</code>
                     </link>
                  </para>
                  <para>
                     <link linkend="ScrollEvent">
                        <code/>
                     </link>
                  </para>
                  <para>Description: Denotes that user is scrolling a scrollable component.</para>
                  <para>Notice that the component's content (at the server)</para>
                  <para>won't be changed until <code>onScroll</code> is received. Thus, you</para>
                  <para>have to invoke the <code>getPos</code> method in the <code>ScrollEvent</code>
                  </para>
                  <para>class to retrieve the temporary position.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Attributes</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>curpos</code>
                  </para>
               </entry>
               <entry>
                  <para>the current position of the slider </para>
                  <para>Values: 0 to maxpos</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>0</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>maxpos</code>
                  </para>
               </entry>
               <entry>
                  <para>the maximum position of the slider. </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>100</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>PageIncrement</code>
                  </para>
               </entry>
               <entry>
                  <para>the amount that the value of curpos changes by when the tray of the scroll bar is clicked </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>10</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>GetOuterAttrs()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.impl.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link>
                     <code> </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2><title>Space</title>
      <para>Space is a <code>Separator</code> with the orient default to "horizontal".</para>
      <para>In other words, &lt;space&gt; is equivalent to <code>&lt;separator orient="horizontal"&gt;</code> 
      </para>
      <para>
         <graphic fileref="images/space.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;zk&gt;&#xD;    &lt;space bar="true"/&gt;    &#xD;    &lt;space bar="true"/&gt;    &#xD;    &lt;space bar="true"/&gt;    &#xD;    &lt;space bar="true"/&gt;    &#xD;&lt;/zk&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Space</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para> *NONE</para></sect3><sect3><title>Supported Events</title>
      <para> *NONE</para></sect3><sect3><title>Properties</title></sect3><sect3><title>*NONE</title>
      <para>Methods</para>
      <para/>
      <para>*NONE</para></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Separator">
                        <code>org.zkoss.zul.Separator</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.impl.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2></sect1></chapter>
   <chapter>
      <title/><sect2><sect2><title>Spinner</title>
      <para>An edit box for holding a constrained integer. </para>
      <para>
         <graphic fileref="images/Spinner.PNG">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="Spinner" border="normal" width="150px"&gt;&#xD;    &lt;spinner /&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Spinner</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE </para></sect3><sect3><title>Supported Events</title>
      <para>*NONE </para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>step</para>
               </entry>
               <entry>
                  <para>Set the step of spinner </para>
               </entry>
               <entry>
                  <para>
                     <code>integer</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>val</code>
                     <code>ue</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the text value. </para>
               </entry>
               <entry>
                  <para>
                     <code>integer</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>ButtonVisible</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether the button (on the right of the textbox) is visible. </para>
               </entry>
               <entry>
                  <para>boolean</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>coerceFromString(java.lang.String value)</code>
                  </para>
               </entry>
               <entry>
                  <para>Coerces the value passed to <code>InputElement.setText(java.lang.String)</code>. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Object</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>coerceToString(java.lang.Object value)</code>
                  </para>
               </entry>
               <entry>
                  <para>Coerces the value passed to <code>InputElement.setText(java.lang.String)</code>. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Object</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getMoldSclass()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>String</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setConstraint(java.lang.String constr) </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>void</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="NumberInputElement">
                        <code>org.zkoss.zul.NumberInputElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="FormatInputElement">
                        <code>org.zkoss.zul.FormatInputElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="InputElement">
                        <code>org.zkoss.zul.InputElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2><title/></sect2></sect2><sect2><sect2 id="South"><title>South</title>
      <para>This component is a south region. The default class of CSS is specified "layout-region-south".</para>
      <para/>
      <para>
         <graphic fileref="images/layout.jpg">2
			
		</graphic>
      </para>
      <programlisting>&lt;borderlayout height="500px"&gt;&#xD;    &lt;north size="50%" border="0"&gt;    &#xD;        &lt;borderlayout&gt;        &#xD;            &lt;west size="25%" border="none" flex="true"&gt;            &#xD;                &lt;div style="background:#B8D335"&gt;                &#xD;                    &lt;label value="25%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/west&gt;            &#xD;            &lt;center border="none" flex="true"&gt;            &#xD;                &lt;div style="background:#E6D92C"&gt;                &#xD;                    &lt;label value="25%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/center&gt;            &#xD;            &lt;east size="50%" border="none" flex="true"&gt;            &#xD;                &lt;label value="Here is a non-border"                &#xD;                    style="color:gray;font-size:30px" /&gt;                    &#xD;            &lt;/east&gt;            &#xD;        &lt;/borderlayout&gt;        &#xD;    &lt;/north&gt;    &#xD;    &lt;center border="0"&gt;    &#xD;        &lt;borderlayout&gt;        &#xD;            &lt;west size="30%" flex="true" border="0"&gt;            &#xD;                &lt;div style="background:#E6D92C"&gt;                &#xD;                    &lt;label value="30%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/west&gt;            &#xD;            &lt;center&gt;            &#xD;                &lt;label value="Here is a border"                &#xD;                    style="color:gray;font-size:30px" /&gt;                    &#xD;            &lt;/center&gt;            &#xD;            &lt;east size="30%" flex="true" border="0"&gt;            &#xD;                &lt;div style="background:#B8D335"&gt;                &#xD;                    &lt;label value="30%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/east&gt;            &#xD;        &lt;/borderlayout&gt;        &#xD;    &lt;/center&gt;    &#xD;&lt;/borderlayout&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zkex.zul.south</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE</para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>OnOpen</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="OpenEvent">
                        <code>org.zkoss.zk.ui.event.OpenEvent</code>
                     </link>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Description: </code>
                     <code>When a layout is collapsed or opened by a user, the </code>
                     <code>onOpen</code>
                     <code> event is sent to the application.</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>size</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the size of this region.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getPosition()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns <code>Borderlayout.NORTH.</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>setWidth(java.lang.String width)</para>
               </entry>
               <entry>
                  <para>The width can't be specified in this component because its width is determined by other region components (West or East).</para>
               </entry>
               <entry>
                  <para>void</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="LayoutRegion">org.zkoss.zkex.zul.LayoutRegion </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2 id="Separator"><title>Separator</title>
      <para>
         <code>Space is a </code>
         <code>Separator</code>
         <code> with the orient default to "</code>
         <code>horizontal</code>
         <code>".</code>
      </para>
      <para>
         <code>In other words, </code>
         <code>&lt;space&gt;</code>
         <code> is equivalent to </code>
         <code>&lt;separator orient="horizontal"&gt; </code>
      </para>
      <para>
         <graphic fileref="images/Separator.png">2
			
		</graphic>
      </para>
      <programlisting>line 1 by separator&#xD;&lt;separator /&gt;&#xD;line 2 by separator&#xD;&lt;separator /&gt;&#xD;line 3 by separator&#xD;&lt;space bar="true" /&gt;&#xD;another piece&#xD;&lt;separator spacing="20px" /&gt;&#xD;line 4 by separator&#xD;&lt;space bar="true" spacing="20px" /&gt;&#xD;another piece&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Space</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE </para></sect3><sect3><title>Supported Events</title>
      <para>*NONE</para></sect3><sect3><title>Attributes</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>spacing</code>
                  </para>
               </entry>
               <entry>
                  <para>the spacing.</para>
                  <para>Values: the spacing (<code>such as "0", "5px", "3pt" or "1em") </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>orient</code>
                  </para>
               </entry>
               <entry>
                  <para>the orient. </para>
                  <para>Values:<code>horizontal|vertical</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>horizontal </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>bar</code>
                  </para>
               </entry>
               <entry>
                  <para>whether to display a visual bar as the separator. </para>
                  <para>Values:<code>true/false</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Methods</title>
      <para>*NONE</para></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>
                        <code>Inherited From</code>
                     </para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Separator">
                        <code>org.zkoss.zul.Separator</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.impl.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link>
                     <code> </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2 id="Splitter"><title>Splitter</title>
      <para>
         <code>An element which should appear before or after an element inside a box (Box, Vbox and Hbox).</code>
      </para>
      <para>
         <code>When the splitter is dragged, the sibling elements of the splitter are resized. If </code>
         <code>getCollapse()</code>
         <code> is true, a grippy in placed inside the splitter, and one sibling element of the splitter is collapsed when the grippy is clicked. </code>
      </para>
      <para>
         <graphic fileref="images/Splitter.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;hbox spacing="0" width="100%"&gt;&#xD;    &lt;vbox height="200px"&gt;    &#xD;        Column 1-1: The left-top box. To know whether a splitter        &#xD;        is collapsed, you can listen to the onOpen event.        &#xD;        &lt;splitter collapse="after"/&gt;        &#xD;        Column 1-2: You can enforce to open or collapse programming        &#xD;        by calling setOpen method.        &#xD;    &lt;/vbox&gt;    &#xD;    &lt;splitter collapse="before"/&gt;    &#xD;    Column 2: Whether a splitter allows users to open or collapse    &#xD;    depending on the collapse attribue.    &#xD;&lt;/hbox&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Splitter</code> 
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE </para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>OnOpen</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="OpenEvent">
                        <code>org.zkoss.zk.ui.event.OpenEvent</code>
                     </link>
                  </para>
                  <para>
                     <code>Description: </code>
                     <code>When a splitter is collapsed or opened by a user, the </code>
                     <code>onOpen</code>
                     <code> event is sent to the application.</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Attributes</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>collapse</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns which side of the splitter is collapsed when its grippy is clicked. If this attribute is not specified, the splitter will not cause a collapse. </para>
                  <para>Values: <code>None,before,after </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>none</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>orient</code>
                  </para>
               </entry>
               <entry>
                  <para>the maximum position of the slider. </para>
                  <para>Values:<code> horizontal | vertical</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>vertical</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>open</code>
                  </para>
               </entry>
               <entry>
                  <para>the amount that the value of curpos changes by when the tray of the scroll bar is clicked </para>
                  <para>Values: <code>true | false</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>true</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Methods</title>
      <para>*NONE</para></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.impl.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link>
                     <code> </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2><title>Style</title>
      <para>The style component used to specify <code>CSS</code> styles for the owner desktop.</para>
      <para>Note: a <code>style </code>component can appear anywhere in a <code>ZUML</code> page, but it affects all components in the same <code>desktop</code>. </para>
      <para>
         <graphic fileref="images/Style.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;style&gt;&#xD;    a{    &#xD;        color:red;        &#xD;    }    &#xD;&lt;/style&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Style</code>
         <code> </code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE </para></sect3><sect3><title>Supported Events</title>
      <para>*NONE</para></sect3><sect3><title>Attributes</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>src</code>
                  </para>
               </entry>
               <entry>
                  <para>the URI of an external style sheet. </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;empty string&gt;</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onChildRemoved(org.zkoss.zk.ui.Component child)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>redraw(java.io.Writer out)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>insertBefore(org.zkoss.zk.ui.Component child, org.zkoss.zk.ui.Component insertBefore)</code>
                  </para>
               </entry>
               <entry>
                  <para>Only Label children are allowed.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2 id="Tab"><title>Tab</title>
      <para>A specific tab. Clicking on the tab brings the tab panel to the front. You could put a label and an image on it by <code>label </code>and <code>image </code>properties. </para>
      <para>By setting the <code>closable </code>property to true, a close button is shown for the tab, such that user could close the tab and the corresponding tab panel by clicking the button. Once user clicks on the close button, an <code>onClose </code>event is sent to the tab. It is processed by the <code>onClose </code>method of <code>Tab. </code>Then, <code>onClose, </code>by default, detaches the tab itself and the corresponding tab panel.</para>
      <para>
         <link linkend="Toolbar">
            <code/>
         </link>
      </para>
      <para>
         <graphic fileref="images/tab.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;tabbox width="400px"&gt;&#xD;    &lt;tabs&gt;    &#xD;        &lt;tab label="Tab 1" image="/img/folder.gif" /&gt;        &#xD;        &lt;tab label="Tab 2" image="/img/folder.gif" closable="true"/&gt;        &#xD;    &lt;/tabs&gt;    &#xD;    &lt;tabpanels&gt;    &#xD;        &lt;tabpanel&gt;This is panel 1&lt;/tabpanel&gt;        &#xD;        &lt;tabpanel&gt;This is panel 2&lt;/tabpanel&gt;        &#xD;    &lt;/tabpanels&gt;    &#xD;&lt;/tabbox&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Tab</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE</para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Event Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes user has clicked the component.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onRightClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes user has right-clicked the component.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onDoubleClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes user has double-clicked the component.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onSelect</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="SelectEvent">
                        <code>org.zkoss.zk.ui.event.SelectEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes user has selected a tab. onSelect is sent to both tab and tabbox.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onClose</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.ui.zk.ui.event.Event</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes the close button is pressed by a user, and the component shall detach itself.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>closable</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether this tab is closable. If closable, a button is displayed and the <code>onClose </code>event is sent if an user clicks the button. </para>
                  <para>Values : <code>true|false</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>selected</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether this tab is selected. </para>
                  <para>Values :<code> true|false</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code/>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getIndex</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the index of this panel, or -1 if it doesn't belong to any tabs.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getLinkedPanel</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the panel associated with this tab.</para>
               </entry>
               <entry>
                  <para>
                     <code>Tabpanel</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getTabbox</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the tabbox owns this component.</para>
               </entry>
               <entry>
                  <para>
                     <code>Tabbox</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>isChildable</code>
                  </para>
               </entry>
               <entry>
                  <para>No child is allowed.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="LabelImageElement">
                        <code>org.zkoss.zul.impl.LabelImageElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="LabelElement">
                        <code>org.zkoss.zul.impl.LabelElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3></sect2></sect2><sect2><sect2><title/></sect2></sect2><sect2><sect2><title/></sect2></sect2><sect2><sect2 id="TableChildren"><title>TableChildren</title>
      <para>The cell of Tablelayout. The child component of Tablechildren only can be Panel.</para>
      <para>
         <graphic fileref="images/Tablelayout.PNG">2
			
		</graphic>
      </para>
      <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xD;&#xD;&lt;?component name="panel" extends="panel" width="200px" height="200px" ?&gt;&#xD;&#xD;&lt;zk&gt;&#xD;&lt;label value="3 columns, 1 colspan, 1 rowspan"/&gt;&#xD;&#xD;&lt;tablelayout id="tbl" columns="3"&gt;&#xD;        &lt;tablechildren id="tc1" colspan="2"&gt;        &#xD;            &lt;panel title="table1" border="normal"             &#xD;                 maximizable="true" collapsible="true" &gt;                &#xD;                     &lt;panelchildren&gt;Panel&lt;/panelchildren&gt;                    &#xD;             &lt;/panel&gt;            &#xD;        &lt;/tablechildren&gt;        &#xD;        &lt;tablechildren&gt;        &#xD;            &lt;panel title="table2" border="normal"            &#xD;                 maximizable="true" collapsible="true"&gt;                &#xD;                 &lt;panelchildren&gt;Panel&lt;/panelchildren&gt;                &#xD;             &lt;/panel&gt;            &#xD;        &lt;/tablechildren&gt;        &#xD;&lt;/tablelayout&gt;&#xD;&lt;/zk&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zkex.zul.Tablelayout</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*None</para></sect3><sect3><title>Supported Events</title>
      <para> *None</para></sect3><sect3><title>Properties</title>
      <para>*None</para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead>
         </tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2><title/></sect2></sect2><sect2><sect2><title>TableLayout</title>
      <para>Tablelayout lay outs a container as an HTML table whose columns can be specified, and rowspan and colspan of its child can also be specified to create complex layouts within the table.</para>
      <para>
         <graphic fileref="images/Tablelayout.PNG">2
			
		</graphic>
      </para>
      <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xD;&#xD;&lt;?component name="panel" extends="panel" width="200px" height="200px" ?&gt;&#xD;&#xD;&lt;zk&gt;&#xD;&lt;label value="3 columns, 1 colspan, 1 rowspan"/&gt;&#xD;&#xD;&lt;tablelayout id="tbl" columns="3"&gt;&#xD;        &lt;tablechildren id="tc1" colspan="2"&gt;        &#xD;            &lt;panel title="table1" border="normal"             &#xD;                 maximizable="true" collapsible="true" &gt;                &#xD;                     &lt;panelchildren&gt;Panel&lt;/panelchildren&gt;                    &#xD;             &lt;/panel&gt;            &#xD;        &lt;/tablechildren&gt;        &#xD;        &lt;tablechildren&gt;        &#xD;            &lt;panel title="table2" border="normal"            &#xD;                 maximizable="true" collapsible="true"&gt;                &#xD;                 &lt;panelchildren&gt;Panel&lt;/panelchildren&gt;                &#xD;             &lt;/panel&gt;            &#xD;        &lt;/tablechildren&gt;        &#xD;&lt;/tablelayout&gt;&#xD;&lt;/zk&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zkex.zul.Tablelayout</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Center">
            <code>Tablechildren</code>
         </link> 
      </para></sect3><sect3><title>Supported Events</title>
      <para> *None</para></sect3><sect3><title>Properties</title>
      <para>*None</para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getColumns()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns number of rows to span this header.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>insertBefore(org.zkoss.zk.ui.Component child, org.zkoss.zk.ui.Component insertBefore)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2></sect2><sect2><sect2 id="Tabbox"><title>Tabbox</title>
      <para>A <code>tabbox </code>that contains the <code>tabs </code>and <code>tabpanels </code>allows developers to separate a large number of components into several groups(each group contains a <code>tab </code>and a <code>tabpanel), </code>and show one group each time, such that the user interface won't be too complicate to read. There is only one group (aka., a <code>tabpanel) </code>is visible at the same time. Once the <code>tab </code>of an invisible group is clicked, it becomes visible and the previous visible group becomes invisible.</para>
      <para>The currently selected tab component is given an additional <code>selected </code>property which is set to true. This is used to give the currently selected tab a different appearance so that it will look selected. Only one tab will have a true value for this property at a time. If none of tabs are selected, the first one is selected automatically.</para>
      <para>
         <link linkend="Toolbar">
            <code/>
         </link>
      </para>
      <para>
         <graphic fileref="images/tabbox.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;zk&gt;&#xD;&lt;tabbox width="400px"&gt;&#xD;    &lt;tabs&gt;    &#xD;        &lt;tab label="Tab 1"/&gt;        &#xD;        &lt;tab label="Tab 2"/&gt;        &#xD;    &lt;/tabs&gt;    &#xD;    &lt;tabpanels&gt;    &#xD;        &lt;tabpanel&gt;This is panel 1&lt;/tabpanel&gt;        &#xD;        &lt;tabpanel&gt;This is panel 2&lt;/tabpanel&gt;        &#xD;    &lt;/tabpanels&gt;    &#xD;&lt;/tabbox&gt;&#xD;&lt;space/&gt;&#xD;&lt;tabbox width="400px" mold="accordion"&gt;&#xD;    &lt;tabs&gt;    &#xD;        &lt;tab label="Tab 3"/&gt;        &#xD;        &lt;tab label="Tab 4"/&gt;        &#xD;    &lt;/tabs&gt;    &#xD;    &lt;tabpanels&gt;    &#xD;        &lt;tabpanel&gt;This is panel 3&lt;/tabpanel&gt;        &#xD;        &lt;tabpanel&gt;This is panel 4&lt;/tabpanel&gt;        &#xD;    &lt;/tabpanels&gt;    &#xD;&lt;/tabbox&gt;&#xD;&lt;/zk&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Tabbox</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Tabs">
            <code>Tabs</code>
         </link>
         <code>, </code>
         <link linkend="Tabpanels">
            <code>Tabpanels</code>
         </link>
      </para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Event Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onRightClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes user has right-clicked the component.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onSelect</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="SelectEvent">
                        <code>org.zkoss.zk.ui.event.SelectEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes user has selected a tab. onSelect is sent to both tab and tabbox.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>orient</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the orient. </para>
                  <para>Values : <code>horizontal|vertical</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>hor</code>
                     <code>izontal</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>panelSpacing</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the spacing between Tabpanel. This is used by certain molds, such as accordion.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>sel</code>
                     <code>ectedIndex</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the selected index. </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>0</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>selectedPanel</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the selected tabpanel </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Tabpanel</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>sel</code>
                     <code>ectedTab</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Sets the sel</code>
                     <code>ected tab</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Tab</code>
                  </para>
               </entry>
               <entry>
                  <para>&lt;<code>null&gt;</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getTabLook</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the look of the <code>Tab </code>and <code>Tabbox. </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getTabpanels</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the tabpanels that this tabbox owns.</para>
               </entry>
               <entry>
                  <para>
                     <code>Tabpanels</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getTabs</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the tabs that this tabbox owns.</para>
               </entry>
               <entry>
                  <para>
                     <code>Tabs</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2 id="Tabpanel"><title>Tabpanel</title>
      <para>A <code>tabpanel </code>is the body of a single tab panel. You would place the content for a group of components within a tab panel. The first <code>tabpanel </code>corresponds to the first <code>tab, </code>the second <code>tabpanel </code>corresponds to the second <code>tab </code>and so on.</para>
      <para>
         <link linkend="Toolbar">
            <code/>
         </link>
      </para>
      <para>
         <graphic fileref="images/tabbox.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;zk&gt;&#xD;&lt;tabbox width="400px"&gt;&#xD;    &lt;tabs&gt;    &#xD;        &lt;tab label="Tab 1"/&gt;        &#xD;        &lt;tab label="Tab 2"/&gt;        &#xD;    &lt;/tabs&gt;    &#xD;    &lt;tabpanels&gt;    &#xD;        &lt;tabpanel&gt;This is panel 1&lt;/tabpanel&gt;        &#xD;        &lt;tabpanel&gt;This is panel 2&lt;/tabpanel&gt;        &#xD;    &lt;/tabpanels&gt;    &#xD;&lt;/tabbox&gt;&#xD;&lt;space/&gt;&#xD;&lt;tabbox width="400px" mold="accordion"&gt;&#xD;    &lt;tabs&gt;    &#xD;        &lt;tab label="Tab 3"/&gt;        &#xD;        &lt;tab label="Tab 4"/&gt;        &#xD;    &lt;/tabs&gt;    &#xD;    &lt;tabpanels&gt;    &#xD;        &lt;tabpanel&gt;This is panel 3&lt;/tabpanel&gt;        &#xD;        &lt;tabpanel&gt;This is panel 4&lt;/tabpanel&gt;        &#xD;    &lt;/tabpanels&gt;    &#xD;&lt;/tabbox&gt;&#xD;&lt;/zk&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Tabpanel</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*ALL</para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Event Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes user has clicked the component.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onRightClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes user has right-clicked the component.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onDoubleClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes user has double-clicked the component.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <para>*NONE</para>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getIndex</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the index of this panel, or -1 if it doesn't belong to any tabpanels. </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getLinkedTab</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the tab associated with this tab panel.</para>
               </entry>
               <entry>
                  <para>
                     <code>Tab</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getTabbox</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the tabbox owns this component.</para>
               </entry>
               <entry>
                  <para>
                     <code>Tabbox</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>isSelected</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether this tab panel is selected.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2 id="Tabpanels"><title>Tabpanels</title>
      <para>A <code>tabpanels</code> is the container for the tab panels, i.e., a collection of tabpanel components.</para>
      <para>
         <link linkend="Toolbar">
            <code/>
         </link>
      </para>
      <para>
         <graphic fileref="images/tabbox.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;zk&gt;&#xD;&lt;tabbox width="400px"&gt;&#xD;    &lt;tabs&gt;    &#xD;        &lt;tab label="Tab 1"/&gt;        &#xD;        &lt;tab label="Tab 2"/&gt;        &#xD;    &lt;/tabs&gt;    &#xD;    &lt;tabpanels&gt;    &#xD;        &lt;tabpanel&gt;This is panel 1&lt;/tabpanel&gt;        &#xD;        &lt;tabpanel&gt;This is panel 2&lt;/tabpanel&gt;        &#xD;    &lt;/tabpanels&gt;    &#xD;&lt;/tabbox&gt;&#xD;&lt;space/&gt;&#xD;&lt;tabbox width="400px" mold="accordion"&gt;&#xD;    &lt;tabs&gt;    &#xD;        &lt;tab label="Tab 3"/&gt;        &#xD;        &lt;tab label="Tab 4"/&gt;        &#xD;    &lt;/tabs&gt;    &#xD;    &lt;tabpanels&gt;    &#xD;        &lt;tabpanel&gt;This is panel 3&lt;/tabpanel&gt;        &#xD;        &lt;tabpanel&gt;This is panel 4&lt;/tabpanel&gt;        &#xD;    &lt;/tabpanels&gt;    &#xD;&lt;/tabbox&gt;&#xD;&lt;/zk&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Treepanels</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Tabpanel">
            <code>Tabpanel</code>
         </link>
      </para>
      <para/></sect3><sect3><title>Supported Events</title>
      <para>*NONE</para></sect3><sect3><title>Properties</title>
      <para>*None</para>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getTabbox</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the <code>tabbox</code> owns this component.</para>
               </entry>
               <entry>
                  <para>
                     <code>Tabbox</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2 id="Tabs"><title>Tabs</title>
      <para>A <code>tabs</code> is the container for the <code>tab</code> components.</para>
      <para>
         <link linkend="Toolbar">
            <code/>
         </link>
      </para>
      <para>
         <graphic fileref="images/tabbox.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;zk&gt;&#xD;&lt;tabbox width="400px"&gt;&#xD;    &lt;tabs&gt;    &#xD;        &lt;tab label="Tab 1"/&gt;        &#xD;        &lt;tab label="Tab 2"/&gt;        &#xD;    &lt;/tabs&gt;    &#xD;    &lt;tabpanels&gt;    &#xD;        &lt;tabpanel&gt;This is panel 1&lt;/tabpanel&gt;        &#xD;        &lt;tabpanel&gt;This is panel 2&lt;/tabpanel&gt;        &#xD;    &lt;/tabpanels&gt;    &#xD;&lt;/tabbox&gt;&#xD;&lt;space/&gt;&#xD;&lt;tabbox width="400px" mold="accordion"&gt;&#xD;    &lt;tabs&gt;    &#xD;        &lt;tab label="Tab 3"/&gt;        &#xD;        &lt;tab label="Tab 4"/&gt;        &#xD;    &lt;/tabs&gt;    &#xD;    &lt;tabpanels&gt;    &#xD;        &lt;tabpanel&gt;This is panel 3&lt;/tabpanel&gt;        &#xD;        &lt;tabpanel&gt;This is panel 4&lt;/tabpanel&gt;        &#xD;    &lt;/tabpanels&gt;    &#xD;&lt;/tabbox&gt;&#xD;&lt;/zk&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Tabs</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Tab">
            <code>Tab</code>
         </link>
      </para>
      <para/></sect3><sect3><title>Supported Events</title>
      <para>*NONE</para></sect3><sect3><title>Properties</title>
      <para>*None</para>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getTabbox</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the <code>tabbox</code> owns this component.</para>
               </entry>
               <entry>
                  <para>
                     <code>Tabbox</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2 id="Textbox"><title>Textbox</title>
      <para>A <code>textbox</code> is used to let users input text data.</para>
      <para>You colud assign <code>value, type, constraint, rows, cols </code>to a textbox by the corresponding properties. When you assigns the property <code>type </code>to a string value “password” when <code>multiline </code>is false( <code>multiline</code> will be <code>true </code>if You set rows large then 1 or sets <code>multiline </code>to true directly) then any character in this component will replace by '*'.</para>
      <para>You colud also assign a constraint value with a regular expression string or a default constraint expression(available value is “no empty”). When user change the value of textbox, will cause a validating preocess to valdate the value. If valdation fail, then a notification will poped up. </para>
      <para>
         <graphic fileref="images/textbox.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;textbox value="text..."/&gt;&#xD;&lt;textbox value="secret" type="password"/&gt;&#xD;&lt;textbox constraint="/.+@.+\.[a-z]+/: Please enter an e-mail address" /&gt;&#xD;&lt;textbox rows="5" cols="40"&gt;&#xD;    &lt;attribute name="value"&gt;    &#xD;text line1...&#xD;text line2...&#xD;    &lt;/attribute&gt;    &#xD;&lt;/textbox&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Textbox</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE </para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Event Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onChange</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="InputEvent">
                        <code>org.zkoss.zk.ui.event.InputEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes the content of an input component has been modified by the user.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onChanging</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="InputEvent">
                        <code>org.zkoss.zk.ui.event.InputEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes that user is changing the content of an input component. Notice that the component's content (at the server) won't be changed until <code>onChange</code> is received. Thus, you have to invoke the <code>getValue </code>method in the <code>InputEvent </code>class to retrieve the temporary value.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onSelection</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="SelectionEvent">
                        <code>org.zkoss.zk.ui.event.SelectionEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes that user is selecting a portion of the text of an input component. You can retrieve the start and end position of the selected text by use of the <code>getStart</code> and <code>getEnd</code> methods. </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onFocus</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes when a component gets the focus. Remember event listeners execute at the server, so the focus at the client might be changed when the event listener for <code>onFocus</code> got executed.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onBlur</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes when a component loses the focus. Remember event listeners execute at the server, so the focus at the client might be changed when the event listener for <code>onBlur </code>got executed.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onCreate</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="CreateEvent">
                        <code>org.zkoss.ui.zk.ui.event.CreateEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes a component is created when rendering a ZUML page.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onDrop</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="DropEvent">
                        <code>org.zkoss.ui.zk.ui.event.DropEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes another component is dropped to the component that receives this event.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>multiline</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether it is multiline. </para>
                  <para>Values: <code>true | false</code>
                  </para>
                  <para>Note: If <code>rows &gt; 1</code>, multiline will always return <code>true</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>rows</para>
               </entry>
               <entry>
                  <para>Sets the rows. </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>1</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>type</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the type. </para>
                  <para>Values : <code>text | password</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>text</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>val</code>
                     <code>ue</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the text value. </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>&lt;empty string&gt;</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <para>*NONE</para></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="InputElement">
                        <code>org.zkoss.zul.InputElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2><title>Timebox</title>
      <para>An edit box for holding a time (a java.util.Date Object , but only Hour &amp; Minute are used.</para>
      <para>
         <graphic fileref="images/timebox.png">2
			
		</graphic>
      </para>
      <para>&lt;window title="Simple" width="300px" border="normal"&gt;</para>
      <para>&lt;timebox id="tb0"/&gt;</para>
      <para>&lt;/window&gt;</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Timebox</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <code> *NONE</code>
      </para></sect3><sect3><title>Supported Events</title>
      <para> *NONE</para></sect3><sect3><title>Properties </title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>buttonVisible</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether the button (on the right of the textbox) is visible. </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>image</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the URI of the button image.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>timeZone</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the time zone that this time box belongs to, or null if the default time zone is used.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.util.TimeZone</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>value</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the value (in <code>Date</code>).</para>
               </entry>
               <entry>
                  <para>
                     <code>java.util.Date</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para>Methods</para>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry><sect3><title>getInnerAttrs()</title></sect3></entry>
               <entry>
                  <para>Generates the Client-Side-Action attributes to the interior tag.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="InputElement">
                        <code>org.zkoss.zul.impl.InputElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link>
                     <code> </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2><title/>
      <para/></sect2></sect2><sect2><sect2 id="Timer"><title>Timer</title>
      <para>Timer is a special component that is invisible. It fires one or more org.zkoss.zk.ui.event.Event after a specified delay. </para>
      <para/>
      <para>Notice that the timer won't fire any event until it is attached to a page. </para>
      <para/>
      <programlisting>&lt;label id="now"/&gt;&#xD;&lt;timer id="timer" delay="1000" repeats="true"&#xD;    onTimer="now.setValue(new Date().toString())"/&gt;    &#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Timer</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE </para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Event Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onTimer</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes the timer you specified has triggered an event. To know which timer, invoke the <code>getTarget </code>method in the <code>Event </code>class.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>delay</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the delay, the number of milliseconds between successive action events. </para>
                  <para>Note : 0 means immediately</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>0</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>repeats</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether the timer shall send Event repeatedly. </para>
                  <para>Values : <code>true|false</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>running</code>
                  </para>
               </entry>
               <entry>
                  <para>Start or stops the timer. </para>
                  <para>Values : <code>true|false</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>true</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>start</code>
                  </para>
               </entry>
               <entry>
                  <para>Starts the timer. </para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>stop</code>
                  </para>
               </entry>
               <entry>
                  <para>Stops the timer. </para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2 id="Toolbar"><title>Toolbar</title>
      <para>A <code>toolbar</code> is used to place a series of buttons, such as <code>toolbarbutton </code>or <code>button. </code>The toolbar buttons could be used without toolbars, so a toolbar could be used without tool buttons. However, tool buttons change their appearance if they are placed inside a toolbar.</para>
      <para>The toolbar has two orientation: <code>horizontal </code>and <code>vertical. </code>It controls how the buttons are placed.</para>
      <para>See also : <link linkend="Button">
            <code>org.zkoss.zul.Button</code>
         </link>, <link linkend="Toolbarbutton">
            <code>org.zkoss.zul.Toolbarbutton</code>
         </link>
      </para>
      <para>
         <graphic fileref="images/toolbar.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="Toolbar window" border="normal" width="300px"&gt;&#xD;    &lt;toolbar&gt;    &#xD;        &lt;toolbarbutton label="Left" /&gt;&lt;space/&gt;        &#xD;        &lt;toolbarbutton label="Right" image="/img/folder.gif" dir="reverse"/&gt;        &#xD;    &lt;/toolbar&gt;    &#xD;    &lt;toolbar orient="vertical"&gt;    &#xD;        &lt;button label="Left" image="/img/folder.gif" width="125px"/&gt;        &#xD;        &lt;toolbarbutton label="Right" image="/img/folder.gif" dir="reverse"/&gt;        &#xD;    &lt;/toolbar&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Toolbar</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*ALL</para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Event Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes user has clicked the component.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>onRightClick</para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes user has right-clicked the component.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>onDoubleClick</para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes user has double-clicked the component.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>ori</code>
                     <code>ent</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the orient.</para>
                  <para>Values : <code>horizontal|vertical</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>horizontal </code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <para>*NONE</para></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2 id="Toolbarbutton"><title>Toolbarbutton</title>
      <para>The behave of <code>Toolbarbutton</code> is similar to the <code>button </code>except the appearance is different. The <code>button </code>component uses HTML BUTTON tag, while <code>thetoolbarbutton </code>component uses HTML A tag.</para>
      <para>A <code>toolbarbutton </code>could be placed outside a <code>toolbar, </code>However <code>toolbarbutton</code>s change their appearance if they are placed inside a <code>toolbar. </code>
      </para>
      <para>
         <code>Toolbarbutton</code> supports <code>getHref()</code>. If <code>getHref()</code> is not null, the <code>onClick</code> handler is ignored and this element is degenerated to HTML's A tag.</para>
      <para>See also : <link linkend="Button">
            <code>org.zkoss.zul.Button</code>
         </link>, <link linkend="Toolbar">
            <code>org.zkoss.zul.Toolbar</code>
         </link>
      </para>
      <para>
         <graphic fileref="images/toolbarbutton.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="toolbar demo" border="normal" width="300px"&gt;&#xD;    &lt;caption&gt;    &#xD;        &lt;toolbarbutton label="button3" image="/img/folder.gif"/&gt;&lt;space/&gt;        &#xD;        &lt;toolbarbutton label="button4" image="/img/folder.gif" dir="reverse" /&gt;        &#xD;    &lt;/caption&gt;    &#xD;    &lt;toolbar&gt;    &#xD;        &lt;toolbarbutton label="button1" image="/img/folder.gif" /&gt;&lt;space/&gt;        &#xD;        &lt;toolbarbutton label="button2" image="/img/folder.gif" /&gt;        &#xD;    &lt;/toolbar&gt;    &#xD;    &lt;hbox&gt;    &#xD;    &lt;toolbarbutton label="button5" image="/img/folder.gif" orient="vertical"/&gt;&lt;space/&gt;    &#xD;    &lt;toolbarbutton label="button6" image="/img/folder.gif" orient="vertical" dir="reverse"/&gt;    &#xD;    &lt;/hbox&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Toolbarbutton</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE </para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Event Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes user has clicked the component.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>onRightClick</para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes user has right-clicked the component.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>dir</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the direction of image, if normal then text first, otherwise image first.</para>
                  <para>Check <link linkend="Button">
                        <code>Button</code>
                     </link> to know more.</para>
                  <para>Values : <code>normal|reverse</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>normal</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>href</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the href, If <code>null</code>
                     <code>, </code>the button has no function unless you specify the <code>onClick</code> handler. If has value, button will render as a HTML A tag.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>ori</code>
                     <code>ent</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the orient.</para>
                  <para>Check <link linkend="Button">
                        <code>Button</code>
                     </link> to know more.</para>
                  <para>Values : <code>horizontal|vertical</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>horizontal </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>target</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the target frame or window, this attribute works when <code>href </code>not null </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>isChildable</code>
                  </para>
               </entry>
               <entry>
                  <para>Check Is this component allow children.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="LabelImageElement">
                        <code>org.zkoss.zul.impl.LabelImageElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="LabelElement">
                        <code>org.zkoss.zul.impl.LabelElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2 id="Tree"><title>Tree</title>
      <para>A <code>tree </code>consists of tree parts, the set of columns, the set of footers, and the tree body. The set of columns is defined by a number of <code>treecol </code>components, one for each column. Each column will appear as a header at the top of the tree. The second part, The set of footers is defined by a number of <code>treefooter </code>components, one for each column also. Each column will appear as a footer at the bottom of the tree. The third part, the tree body, contains the data to appear in the tree and is created with a <code>treechildren </code>component.</para>
      <para>
         <link linkend="Toolbar">
            <code/>
         </link>
      </para>
      <para>
         <graphic fileref="images/tree.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="tree demo" border="normal"&gt;&#xD;    &lt;tree id="tree" width="400px" rows="5"&gt;    &#xD;        &lt;treecols sizable="true"&gt;        &#xD;            &lt;treecol label="Name"/&gt;            &#xD;            &lt;treecol label="Description"/&gt;            &#xD;        &lt;/treecols&gt;        &#xD;        &lt;treechildren&gt;        &#xD;            &lt;treeitem&gt;            &#xD;                &lt;treerow&gt;                &#xD;                    &lt;treecell label="Item 1"/&gt;                    &#xD;                    &lt;treecell label="Item 1 description"/&gt;                    &#xD;                &lt;/treerow&gt;                &#xD;            &lt;/treeitem&gt;            &#xD;            &lt;treeitem&gt;            &#xD;                &lt;treerow&gt;                &#xD;                    &lt;treecell label="Item 2"/&gt;                    &#xD;                    &lt;treecell label="Item 2 description"/&gt;                    &#xD;                &lt;/treerow&gt;                &#xD;                &lt;treechildren&gt;                &#xD;                    &lt;treeitem&gt;                    &#xD;                        &lt;treerow&gt;                        &#xD;                            &lt;treecell label="Item 2.1"/&gt;                            &#xD;                        &lt;/treerow&gt;                        &#xD;                    &lt;/treeitem&gt;                    &#xD;                    &lt;treeitem&gt;                    &#xD;                        &lt;treerow&gt;                        &#xD;                            &lt;treecell label="Item 2.2"/&gt;                            &#xD;                            &lt;treecell label="Item 2.2 is something who cares"/&gt;                            &#xD;                        &lt;/treerow&gt;                        &#xD;                    &lt;/treeitem&gt;                    &#xD;                &lt;/treechildren&gt;                &#xD;            &lt;/treeitem&gt;            &#xD;            &lt;treeitem label="Item 3"/&gt;            &#xD;        &lt;/treechildren&gt;        &#xD;        &lt;treefoot&gt;        &#xD;            &lt;treefooter label="Count"/&gt;            &#xD;            &lt;treefooter label="Summary"/&gt;            &#xD;        &lt;/treefoot&gt;        &#xD;    &lt;/tree&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Tree</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Treecols">
            <code>Treecols, </code>
         </link>
         <link linkend="Treechildren">
            <code>Treechildren, </code>
         </link>
         <link linkend="Treefoot">
            <code>Treefoot</code>
         </link>
      </para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Event Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onSelect</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="SelectEvent">
                        <code>org.zkoss.zk.ui.event.SelectEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes user has selected one or multiple child components(a set of treeitem).</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>checkmark </code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether the check mark shall be displayed in front of each item.</para>
                  <para>The check mark is a <code>checkbox </code>if <code>isMultiple() </code>returns true. It is a <code>radio </code>button if <code>isMultiple() </code>returns false. </para>
                  <para>Values : <code>true|false</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>model</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the tree model associated with this tree.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.TreeModel</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>multiple</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether multiple selections are allowed.</para>
                  <para>Values : <code>true|false</code> 
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>name</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the name of this component. </para>
                  <para>The name is used only to work with "legacy" Web application that handles user's request by servlets. It works only with HTTP/HTML-based browsers. It doesn't work with other kind of clients. </para>
                  <para>Don't use this method if your application is purely based on ZK's event-driven model. </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>pageSize</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the page size that is used by all <code>Treechildren </code>to display a portion of their child <code>Treeitem, </code>or -1 if no limitation.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>10</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>rows</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the rows. Zero means no limitation. </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>0</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>selectedItem</code>
                  </para>
               </entry>
               <entry>
                  <para>Deselects all of the currently selected items and selects the given item. </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Treeitem</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>seltype</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the seltype. Currently, only "<code>single" </code>is supported. </para>
                  <para>Values : <code>single</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;single&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>treeitemRender</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the renderer which is used to render each item if <code>getModel() </code>is not null.</para>
                  <para>Note: changing a render will not cause the tree to re-render. If you want it to re-render, you could assign the same model again (i.e., <code>setModel(getModel())), </code>or fire an <code>TreeDataEvent </code>event. </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.TreeitemRenderer</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>vflex</para>
               </entry>
               <entry>
                  <para>Sets whether to grow and shrink vertical to fit their given space, so called vertial flexibility.</para>
                  <para>Note: this attribute is ignored if <code>setRows(int)</code> is specified </para>
                  <para>Values : <code>true|false</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>addItemToSelection</code>
                  </para>
               </entry>
               <entry>
                  <para>Selects the given item, without deselecting any other items that are already selected.</para>
               </entry>
               <entry>
                  <para>
                     <code>Treeitem</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>clear</code>
                  </para>
               </entry>
               <entry>
                  <para>Clears all child tree items </para>
                  <para>Note: after clear, <code>getTreechildren() </code>won't be null, but it has no child </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>clearSelection</code>
                  </para>
               </entry>
               <entry>
                  <para>Clears the selection. </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getItemCount</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the number of child <code>Treeitem</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getItems</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns a readonly list of all descending <code>Treeitem</code> (children's children and so on) ,</para>
               </entry>
               <entry>
                  <para>
                     <code>Collection</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getSelectedCount</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the number of items being selected. </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getSelectedItems</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns all selected items. </para>
               </entry>
               <entry>
                  <para>
                     <code>Set</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getTreechildren</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the treechildren that this tree owns (might null). </para>
               </entry>
               <entry>
                  <para>
                     <code>Treechildren</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getTreecols</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the treecols that this tree owns (might null). </para>
               </entry>
               <entry>
                  <para>
                     <code>Treecols</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getTreefoot</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the treefoot that this tree owns (might null). </para>
               </entry>
               <entry>
                  <para>
                     <code>Treefoot</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>removeItemFromSelection</code>
                  </para>
               </entry>
               <entry>
                  <para>Deselects the given item without deselecting other items. </para>
               </entry>
               <entry>
                  <para>
                     <code>Treeitem</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>selectAll</code>
                  </para>
               </entry>
               <entry>
                  <para>Selects all items. </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>selectItem</code>
                  </para>
               </entry>
               <entry>
                  <para>Deselects all of the currently selected items and selects the given item. </para>
               </entry>
               <entry>
                  <para>
                     <code>Treeitem</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>toggleItemSelection</code>
                  </para>
               </entry>
               <entry>
                  <para>If the specified item is selected, it is deselected. </para>
               </entry>
               <entry>
                  <para>
                     <code>Treeitem</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2 id="Treecell"><title>Treecell</title>
      <para>
         <code>Treecell </code>represent one column in a <code>treerow </code>by sequencial. T<code>reecell</code> can contains any component in it, such as label, image, textbox etc.</para>
      <para>
         <link linkend="Toolbar">
            <code/>
         </link>
      </para>
      <para>
         <graphic fileref="images/treeitem.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="tree demo" border="normal" width="400px"&gt;&#xD;    &lt;tree id="tree" width="90%" &gt;    &#xD;        &lt;treecols sizable="true"&gt;        &#xD;            &lt;treecol label="Name"/&gt;            &#xD;            &lt;treecol label="Description"/&gt;            &#xD;        &lt;/treecols&gt;        &#xD;        &lt;treechildren&gt;        &#xD;            &lt;treeitem&gt;            &#xD;                &lt;treerow&gt;                &#xD;                    &lt;treecell&gt;                    &#xD;                        &lt;image src="/img/folder.gif"/&gt;Item 1                        &#xD;                    &lt;/treecell&gt;                    &#xD;                    &lt;treecell&gt;                    &#xD;                        &lt;textbox value="Item 1 description"/&gt;                        &#xD;                    &lt;/treecell&gt;                    &#xD;                &lt;/treerow&gt;                &#xD;            &lt;/treeitem&gt;            &#xD;            &lt;treeitem&gt;            &#xD;                &lt;treerow&gt;                &#xD;                    &lt;treecell label="Item 2"/&gt;                    &#xD;                    &lt;treecell label="Item 2 description"/&gt;                    &#xD;                &lt;/treerow&gt;                &#xD;                &lt;treechildren&gt;                &#xD;                    &lt;treeitem open="false"&gt;                    &#xD;                        &lt;treerow&gt;                        &#xD;                            &lt;treecell label="Item 2.1"&gt;                            &#xD;                                &lt;image src="/img/folder.gif"/&gt;                                &#xD;                            &lt;/treecell&gt;                            &#xD;                        &lt;/treerow&gt;                        &#xD;                        &lt;treechildren&gt;                        &#xD;                            &lt;treeitem&gt;                            &#xD;                                &lt;treerow&gt;                                &#xD;                                    &lt;treecell label="Item 2.1.1"/&gt;                                    &#xD;                                &lt;/treerow&gt;                                &#xD;                            &lt;/treeitem&gt;                            &#xD;                        &lt;/treechildren&gt;                        &#xD;                    &lt;/treeitem&gt;                    &#xD;                &lt;/treechildren&gt;                &#xD;            &lt;/treeitem&gt;            &#xD;            &lt;treeitem label="Item 3"/&gt;            &#xD;        &lt;/treechildren&gt;        &#xD;    &lt;/tree&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Treecell</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*ALL</para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Event Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes user has clicked the component.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onRightClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes user has right-clicked the component.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onDoubleClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes user has double-clicked the component.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>span</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the number of columns to span this cell. </para>
                  <para>It is the same as the colspan attribute of HTML TD tag. </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>1</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>width</code>
                  </para>
               </entry>
               <entry>
                  <para>Do not set this property, use <code>Treecol.width</code> instead.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code/>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getColumnIndex</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the column index of this cell, starting from 0.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getLevel</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the level this cell is.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getMaxlength</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the maximal length for this cell, which is decided by the corresponding <code>getTreecol</code>()'s <code>Treecol.getMaxlength</code>().</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getTree</code>
                  </para>
               </entry>
               <entry>
                  <para>Return the tree that owns this cell.</para>
               </entry>
               <entry>
                  <para>
                     <code>Tree</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getTreecol</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the tree col associated with this cell, or null if not available</para>
               </entry>
               <entry>
                  <para>
                     <code>Treecol</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="LabelImageElement">
                        <code>org.zkoss.zul.impl.LabelImageElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="LabelElement">
                        <code>org.zkoss.zul.impl.LabelElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2 id="Treechildren"><title>Treechildren</title>
      <para>
         <code>Treechildren </code>contains a collection of treeitem components. It is main body of the <code>Tree </code>and it also the main body of a <code>Treeitem</code>'s children.</para>
      <para>You can change the page size of each <code>treechildren </code>instance by modifying the <code>pageSize </code>property</para>
      <para>
         <link linkend="Toolbar">
            <code/>
         </link>
      </para>
      <para>
         <graphic fileref="images/treechildren.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="tree demo" border="normal" width="450px"&gt;&#xD;    &lt;tree id="tree" width="90%" &gt;    &#xD;        &lt;treecols sizable="true"&gt;        &#xD;            &lt;treecol label="Name"/&gt;            &#xD;            &lt;treecol label="Description"/&gt;            &#xD;        &lt;/treecols&gt;        &#xD;        &lt;treechildren&gt;        &#xD;            &lt;treeitem&gt;            &#xD;                &lt;treerow&gt;                &#xD;                    &lt;treecell label="Item 1"/&gt;                    &#xD;                    &lt;treecell label="Item 1 description"/&gt;                    &#xD;                &lt;/treerow&gt;                &#xD;            &lt;/treeitem&gt;            &#xD;            &lt;treeitem&gt;            &#xD;                &lt;treerow&gt;                &#xD;                    &lt;treecell label="Item 2"/&gt;                    &#xD;                    &lt;treecell label="Item 2 description"/&gt;                    &#xD;                &lt;/treerow&gt;                &#xD;                &lt;treechildren&gt;                &#xD;                    &lt;treeitem&gt;                    &#xD;                        &lt;treerow&gt;                        &#xD;                            &lt;treecell label="Item 2.1"/&gt;                            &#xD;                        &lt;/treerow&gt;                        &#xD;                        &lt;treechildren pageSize="3"&gt;                        &#xD;                            &lt;treeitem&gt;                            &#xD;                                &lt;treerow&gt;                                &#xD;                                    &lt;treecell label="Item 2.1.1"/&gt;                                    &#xD;                                &lt;/treerow&gt;                                &#xD;                            &lt;/treeitem&gt;                            &#xD;                            &lt;treeitem&gt;                            &#xD;                                &lt;treerow&gt;                                &#xD;                                    &lt;treecell label="Item 2.1.2"/&gt;                                    &#xD;                                &lt;/treerow&gt;                                &#xD;                            &lt;/treeitem&gt;                            &#xD;                            &lt;treeitem&gt;                            &#xD;                                &lt;treerow&gt;                                &#xD;                                    &lt;treecell label="Item 2.1.3"/&gt;                                    &#xD;                                &lt;/treerow&gt;                                &#xD;                            &lt;/treeitem&gt;                            &#xD;                            &lt;treeitem&gt;                            &#xD;                                &lt;treerow&gt;                                &#xD;                                    &lt;treecell label="Item 2.1.4"/&gt;                                    &#xD;                                &lt;/treerow&gt;                                &#xD;                            &lt;/treeitem&gt;                            &#xD;                        &lt;/treechildren&gt;                        &#xD;                    &lt;/treeitem&gt;                    &#xD;                    &lt;treeitem&gt;                    &#xD;                        &lt;treerow&gt;                        &#xD;                            &lt;treecell label="Item 2.2"/&gt;                            &#xD;                            &lt;treecell label="Item 2.2 is something who cares"/&gt;                            &#xD;                        &lt;/treerow&gt;                        &#xD;                    &lt;/treeitem&gt;                    &#xD;                &lt;/treechildren&gt;                &#xD;            &lt;/treeitem&gt;            &#xD;            &lt;treeitem label="Item 3"/&gt;            &#xD;        &lt;/treechildren&gt;        &#xD;    &lt;/tree&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Treechildren</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Treeitem">
            <code>Treeitem</code>
         </link>
      </para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Event Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onPaging</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="PagingEvent">
                        <code>org.zkoss.zul.event.PagingEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Notifies one of the pages of a multi-page component is selected by the user.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>onPageSize</para>
               </entry>
               <entry>
                  <para>
                     <link linkend="PageSizeEvent">
                        <code>org.zkoss.zul.event.PageSizeEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Used to notify that the page size is changed (by the user) </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>pageSize</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the page size which controls the number of visible child Treeitem. -1 means no limitation.</para>
                  <para>The default value gets by <code>getTree().getPageSize()</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>10</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>activePage</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the active page (starting from 0).</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>0</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getActivePage</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the active page (starting from 0).</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getItemCount</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the number of child Treeitem including all descendants.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getItems</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns a readonly list of all descending Treeitem (children's children and so on).</para>
               </entry>
               <entry>
                  <para>
                     <code>Col</code>
                     <code>lection</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getLinkedTreerow</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the <code>Treerow</code> that is associated with this treechildren, or null if no such treerow.</para>
               </entry>
               <entry>
                  <para>
                     <code>Treerow</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getPageCount</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the number of pages (at least one).</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getTree</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the Tree instance containing this element.</para>
               </entry>
               <entry>
                  <para>
                     <code>tree</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getVisibleBegin</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the index of the first visible child.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getVisibleEnd</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the index of the last visible child.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2 id="Treecol"><title>Treecol</title>
      <para>A <code>treecol </code>is a top column of tree, Its parent must be <code>Treecols.</code>
      </para>
      <para>
         <graphic fileref="images/treecol.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="tree demo" border="normal" width="400px"&gt;&#xD;    &lt;tree id="tree" width="90%" rows="2"&gt;    &#xD;        &lt;treecols sizable="true"&gt;        &#xD;            &lt;treecol label="Name"/&gt;            &#xD;            &lt;treecol label="Description"/&gt;            &#xD;            &lt;treecol label="Remark"/&gt;            &#xD;        &lt;/treecols&gt;        &#xD;        &lt;treechildren&gt;        &#xD;            &lt;treeitem&gt;            &#xD;                &lt;treerow&gt;                &#xD;                    &lt;treecell label="Item 1"/&gt;                    &#xD;                    &lt;treecell label="Item 1 description"/&gt;                    &#xD;                    &lt;treecell label="Item 1 remark"/&gt;                    &#xD;                &lt;/treerow&gt;                &#xD;            &lt;treechildren&gt;            &#xD;                &lt;treeitem&gt;                &#xD;                    &lt;treerow&gt;                    &#xD;                        &lt;treecell label="Item 1.2"/&gt;                        &#xD;                        &lt;treecell label="Item 1.2 description"/&gt;                        &#xD;                    &lt;/treerow&gt;                    &#xD;                &lt;/treeitem&gt;                &#xD;            &lt;/treechildren&gt;            &#xD;            &lt;/treeitem&gt;            &#xD;        &lt;/treechildren&gt;        &#xD;    &lt;/tree&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Treecol</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE</para></sect3><sect3><title>Supported Events</title>
      <para>*NONE</para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>maxlength</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the maximal length of each item's label. </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>0</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getColumnIndex</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the column index, starting from 0. </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getTree</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the tree that it belongs to. </para>
               </entry>
               <entry>
                  <para>
                     <code>Tree</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="HeaderElement">
                        <code>org.zkoss.zul.impl.HeaderElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="LabelImageElement">
                        <code>org.zkoss.zul.impl.LabelImageElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="LabelElement">
                        <code>org.zkoss.zul.impl.LabelElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2 id="Treecols"><title>Treecols</title>
      <para>A <code>treecols </code>is main part of tree which contains set of columns. The set of columns is defined by a number of <code>treecol </code>components. Each column will appear as a column at the top of the tree.</para>
      <para>
         <link linkend="Toolbar">
            <code/>
         </link>
      </para>
      <para>
         <graphic fileref="images/treecol.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="tree demo" border="normal" width="400px"&gt;&#xD;    &lt;tree id="tree" width="90%" rows="2"&gt;    &#xD;        &lt;treecols sizable="true"&gt;        &#xD;            &lt;treecol label="Name"/&gt;            &#xD;            &lt;treecol label="Description"/&gt;            &#xD;            &lt;treecol label="Remark"/&gt;            &#xD;        &lt;/treecols&gt;        &#xD;        &lt;treechildren&gt;        &#xD;            &lt;treeitem&gt;            &#xD;                &lt;treerow&gt;                &#xD;                    &lt;treecell label="Item 1"/&gt;                    &#xD;                    &lt;treecell label="Item 1 description"/&gt;                    &#xD;                    &lt;treecell label="Item 1 remark"/&gt;                    &#xD;                &lt;/treerow&gt;                &#xD;            &lt;treechildren&gt;            &#xD;                &lt;treeitem&gt;                &#xD;                    &lt;treerow&gt;                    &#xD;                        &lt;treecell label="Item 1.2"/&gt;                        &#xD;                        &lt;treecell label="Item 1.2 description"/&gt;                        &#xD;                    &lt;/treerow&gt;                    &#xD;                &lt;/treeitem&gt;                &#xD;            &lt;/treechildren&gt;            &#xD;            &lt;/treeitem&gt;            &#xD;        &lt;/treechildren&gt;        &#xD;    &lt;/tree&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Treecols</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Treecol">
            <code>Treecol</code>
         </link>
      </para>
      <para>
         <code/>
      </para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Event Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onColSize</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="ColSizeEvent">
                        <code>org.zkoss.zul.event.ColSizeEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Notifies the parent of a group of headers that the widths</para>
                  <para>of two of its children are changed by the user.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <para>*NONE</para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>get</code>
                     <code>Tree</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the tree that it belongs to.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Tree</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="HeadersElement">
                        <code>org</code>
                     </link>
                     <link linkend="HeadersElement">
                        <code>.zkoss.zul.impl.HeadersElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2 id="Treefoot"><title>Treefoot</title>
      <para>A <code>treefoot </code>is main part of tree which contains set of footers. The set of footers is defined by a number of <code>treefooter </code>components. Each column will appear as a footer at the bottom of the tree.</para>
      <para>
         <link linkend="Toolbar">
            <code/>
         </link>
      </para>
      <para>
         <graphic fileref="images/tree.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="tree demo" border="normal"&gt;&#xD;    &lt;tree id="tree" width="400px" rows="5"&gt;    &#xD;        &lt;treecols sizable="true"&gt;        &#xD;            &lt;treecol label="Name"/&gt;            &#xD;            &lt;treecol label="Description"/&gt;            &#xD;        &lt;/treecols&gt;        &#xD;        &lt;treechildren&gt;        &#xD;            &lt;treeitem&gt;            &#xD;                &lt;treerow&gt;                &#xD;                    &lt;treecell label="Item 1"/&gt;                    &#xD;                    &lt;treecell label="Item 1 description"/&gt;                    &#xD;                &lt;/treerow&gt;                &#xD;            &lt;/treeitem&gt;            &#xD;            &lt;treeitem&gt;            &#xD;                &lt;treerow&gt;                &#xD;                    &lt;treecell label="Item 2"/&gt;                    &#xD;                    &lt;treecell label="Item 2 description"/&gt;                    &#xD;                &lt;/treerow&gt;                &#xD;                &lt;treechildren&gt;                &#xD;                    &lt;treeitem&gt;                    &#xD;                        &lt;treerow&gt;                        &#xD;                            &lt;treecell label="Item 2.1"/&gt;                            &#xD;                        &lt;/treerow&gt;                        &#xD;                    &lt;/treeitem&gt;                    &#xD;                    &lt;treeitem&gt;                    &#xD;                        &lt;treerow&gt;                        &#xD;                            &lt;treecell label="Item 2.2"/&gt;                            &#xD;                            &lt;treecell label="Item 2.2 is something who cares"/&gt;                            &#xD;                        &lt;/treerow&gt;                        &#xD;                    &lt;/treeitem&gt;                    &#xD;                &lt;/treechildren&gt;                &#xD;            &lt;/treeitem&gt;            &#xD;            &lt;treeitem label="Item 3"/&gt;            &#xD;        &lt;/treechildren&gt;        &#xD;        &lt;treefoot&gt;        &#xD;            &lt;treefooter label="Count"/&gt;            &#xD;            &lt;treefooter label="Summary"/&gt;            &#xD;        &lt;/treefoot&gt;        &#xD;    &lt;/tree&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Treefoot</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Treefooter">
            <code>Treefooter</code>
         </link>
      </para></sect3><sect3><title>Supported Events</title>
      <para>*None</para></sect3><sect3><title>Properties</title>
      <para>*None</para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getTree</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the tree that it belongs to. </para>
               </entry>
               <entry>
                  <para>
                     <code>Tree</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2 id="Treefooter"><title>Treefooter</title>
      <para>A <code>treefooter </code>is a bottom column of tree, Its parent must be <code>Treefoot. </code>You colud place any child in a tree footer.</para>
      <para>
         <link linkend="Toolbar">
            <code/>
         </link>
      </para>
      <para>
         <graphic fileref="images/treefooter.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="tree demo" border="normal" width="400px"&gt;&#xD;    &lt;tree id="tree" width="90%" rows="2"&gt;    &#xD;        &lt;treecols sizable="true"&gt;        &#xD;            &lt;treecol label="Name"/&gt;            &#xD;            &lt;treecol label="Description"/&gt;            &#xD;        &lt;/treecols&gt;        &#xD;        &lt;treechildren&gt;        &#xD;            &lt;treeitem&gt;            &#xD;                &lt;treerow&gt;                &#xD;                    &lt;treecell label="Item 1"/&gt;                    &#xD;                    &lt;treecell label="Item 1 description"/&gt;                    &#xD;                &lt;/treerow&gt;                &#xD;            &lt;treechildren&gt;            &#xD;                &lt;treeitem&gt;                &#xD;                    &lt;treerow&gt;                    &#xD;                        &lt;treecell label="Item 1.2"/&gt;                        &#xD;                        &lt;treecell label="Item 1.2 description"/&gt;                        &#xD;                    &lt;/treerow&gt;                    &#xD;                &lt;/treeitem&gt;                &#xD;            &lt;/treechildren&gt;            &#xD;            &lt;/treeitem&gt;            &#xD;        &lt;/treechildren&gt;        &#xD;        &lt;treefoot &gt;        &#xD;            &lt;treefooter&gt;&lt;image src="/img/folder.gif"/&gt;Count&lt;/treefooter&gt;            &#xD;            &lt;treefooter&gt;&lt;image src="/img/folder.gif"/&gt;Summary&lt;/treefooter&gt;            &#xD;        &lt;/treefoot&gt;        &#xD;    &lt;/tree&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Treefooter</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*ALL</para></sect3><sect3><title>Supported Events</title>
      <para>*NONE</para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>span</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the number of columns to span this footer. </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>1</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getColumnIndex</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the column index, starting from 0. </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getTree</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the tree that this belongs to.</para>
               </entry>
               <entry>
                  <para>
                     <code>Tree</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getTreecol</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the tree header that is in the same column as this footer, or null if not available. </para>
               </entry>
               <entry>
                  <para>
                     <code>Treecol</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="LabelImageElement">
                        <code>org.zkoss.zul.impl.LabelImageElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="LabelElement">
                        <code>org.zkoss.zul.impl.LabelElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2 id="Treeitem"><title>Treeitem</title>
      <para>
         <code>Treeitem </code>contains a row of data (<code>treerow), </code>and an optional treechildren.</para>
      <para>If the component doesn't contain a <code>treechildren, </code>it is a leaf node that doesn't accept any child items.</para>
      <para>If it contains a <code>treechildren, </code>it is a branch node that might contain other items.</para>
      <para>For a branch node, an +/- button will appear at the beginning of the row, such that user could open and close the item by clicking on the +/- button.</para>
      <para>
         <link linkend="Toolbar">
            <code/>
         </link>
      </para>
      <para>
         <graphic fileref="images/treeitem.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="tree demo" border="normal" width="400px"&gt;&#xD;    &lt;tree id="tree" width="90%" &gt;    &#xD;        &lt;treecols sizable="true"&gt;        &#xD;            &lt;treecol label="Name"/&gt;            &#xD;            &lt;treecol label="Description"/&gt;            &#xD;        &lt;/treecols&gt;        &#xD;        &lt;treechildren&gt;        &#xD;            &lt;treeitem&gt;            &#xD;                &lt;treerow&gt;                &#xD;                    &lt;treecell&gt;                    &#xD;                        &lt;image src="/img/folder.gif"/&gt;Item 1                        &#xD;                    &lt;/treecell&gt;                    &#xD;                    &lt;treecell&gt;                    &#xD;                        &lt;textbox value="Item 1 description"/&gt;                        &#xD;                    &lt;/treecell&gt;                    &#xD;                &lt;/treerow&gt;                &#xD;            &lt;/treeitem&gt;            &#xD;            &lt;treeitem&gt;            &#xD;                &lt;treerow&gt;                &#xD;                    &lt;treecell label="Item 2"/&gt;                    &#xD;                    &lt;treecell label="Item 2 description"/&gt;                    &#xD;                &lt;/treerow&gt;                &#xD;                &lt;treechildren&gt;                &#xD;                    &lt;treeitem open="false"&gt;                    &#xD;                        &lt;treerow&gt;                        &#xD;                            &lt;treecell label="Item 2.1"&gt;                            &#xD;                                &lt;image src="/img/folder.gif"/&gt;                                &#xD;                            &lt;/treecell&gt;                            &#xD;                        &lt;/treerow&gt;                        &#xD;                        &lt;treechildren&gt;                        &#xD;                            &lt;treeitem&gt;                            &#xD;                                &lt;treerow&gt;                                &#xD;                                    &lt;treecell label="Item 2.1.1"/&gt;                                    &#xD;                                &lt;/treerow&gt;                                &#xD;                            &lt;/treeitem&gt;                            &#xD;                        &lt;/treechildren&gt;                        &#xD;                    &lt;/treeitem&gt;                    &#xD;                &lt;/treechildren&gt;                &#xD;            &lt;/treeitem&gt;            &#xD;            &lt;treeitem label="Item 3"/&gt;            &#xD;        &lt;/treechildren&gt;        &#xD;    &lt;/tree&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Treeitem</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Treerow">
            <code>Treerow, </code>
         </link>
         <link linkend="Treechildren">
            <code>Treechildren</code>
         </link>
      </para></sect3><sect3><title>Supported Events</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Event Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onRightClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes user has right-clicked the component.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onDoubleClick</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="MouseEvent">
                        <code>org.zkoss.zk.ui.event.MouseEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes user has double-clicked the component.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onOpen</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="OpenEvent">
                        <code>org.zkoss.zk.ui.event.OpenEvent</code>
                     </link>
                  </para>
                  <para>Description: </para>
                  <para>Denotes user has opened or closed a component. </para>
                  <para>It is useful to implement load-on-demand by listening to the onOpen event, and creating components when the first time the component is opened.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>image</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the image of the <code>Treecell </code>it contains. If it is not created, we automatically create it. </para>
                  <para>Same as <code>setSrc</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code/>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>label</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the label of the Treecell it contains. If it is not created, we automatically create it. </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code/>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>open</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether this container is open. </para>
                  <para>Values : <code>true|false</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>true</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>sel</code>
                     <code>ected</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether this item is selected. </para>
                  <para>Values : <code>true|false</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>src</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the src of the <code>Treecell </code>it contains. If it is not created, we automatically create it.</para>
                  <para>The same as <code>setImage. </code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>value</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the value. </para>
                  <para>Note: the value is not sent to the browser, so it is OK to be anything. </para>
               </entry>
               <entry>
                  <para>
                     <code>Object</code>
                  </para>
               </entry>
               <entry>
                  <para>null</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getTreechildren</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the treechildren that this tree item owns, or null if doesn't have any child.</para>
               </entry>
               <entry>
                  <para>
                     <code>Treechildren</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getTreerow</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the treerow that this tree item owns (might null).</para>
               </entry>
               <entry>
                  <para>
                     <code>Treerow</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>indexOf</code>
                  </para>
               </entry>
               <entry>
                  <para>return the index of this container</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>isContainer</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether the element is to act as a container which can have child elements.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>isEmpty</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether this element contains no child elements.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>isLoaded</code>
                  </para>
               </entry>
               <entry>
                  <para>Return true whether this container is loaded</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2 id="Treerow"><title>Treerow</title>
      <para>
         <code>Treerow </code>is a single row in the <code>tree, </code>it is the main content of <code>treeitem</code>. <code>Treerow </code>can contains multiple <code>treecell</code>, each <code>treecell</code> represent one column in this row by sequencial. A <code>treecell </code>can contains any component in it, such as label, image, textbox etc. </para>
      <para>
         <link linkend="Toolbar">
            <code/>
         </link>
      </para>
      <para>
         <graphic fileref="images/treeitem.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="tree demo" border="normal" width="400px"&gt;&#xD;    &lt;tree id="tree" width="90%" &gt;    &#xD;        &lt;treecols sizable="true"&gt;        &#xD;            &lt;treecol label="Name"/&gt;            &#xD;            &lt;treecol label="Description"/&gt;            &#xD;        &lt;/treecols&gt;        &#xD;        &lt;treechildren&gt;        &#xD;            &lt;treeitem&gt;            &#xD;                &lt;treerow&gt;                &#xD;                    &lt;treecell&gt;                    &#xD;                        &lt;image src="/img/folder.gif"/&gt;Item 1                        &#xD;                    &lt;/treecell&gt;                    &#xD;                    &lt;treecell&gt;                    &#xD;                        &lt;textbox value="Item 1 description"/&gt;                        &#xD;                    &lt;/treecell&gt;                    &#xD;                &lt;/treerow&gt;                &#xD;            &lt;/treeitem&gt;            &#xD;            &lt;treeitem&gt;            &#xD;                &lt;treerow&gt;                &#xD;                    &lt;treecell label="Item 2"/&gt;                    &#xD;                    &lt;treecell label="Item 2 description"/&gt;                    &#xD;                &lt;/treerow&gt;                &#xD;                &lt;treechildren&gt;                &#xD;                    &lt;treeitem open="false"&gt;                    &#xD;                        &lt;treerow&gt;                        &#xD;                            &lt;treecell label="Item 2.1"&gt;                            &#xD;                                &lt;image src="/img/folder.gif"/&gt;                                &#xD;                            &lt;/treecell&gt;                            &#xD;                        &lt;/treerow&gt;                        &#xD;                        &lt;treechildren&gt;                        &#xD;                            &lt;treeitem&gt;                            &#xD;                                &lt;treerow&gt;                                &#xD;                                    &lt;treecell label="Item 2.1.1"/&gt;                                    &#xD;                                &lt;/treerow&gt;                                &#xD;                            &lt;/treeitem&gt;                            &#xD;                        &lt;/treechildren&gt;                        &#xD;                    &lt;/treeitem&gt;                    &#xD;                &lt;/treechildren&gt;                &#xD;            &lt;/treeitem&gt;            &#xD;            &lt;treeitem label="Item 3"/&gt;            &#xD;        &lt;/treechildren&gt;        &#xD;    &lt;/tree&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Treerow</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>
         <link linkend="Treerow">
            <code>Treecell</code>
         </link>
      </para></sect3><sect3><title>Supported Events</title>
      <para>*None</para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>context</code>
                  </para>
               </entry>
               <entry>
                  <para>Don't use this property of <code>Treerow, </code>use <code>Treeitem.context</code> instead.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Always throws UnsupportedOperationException </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>popup</code>
                  </para>
               </entry>
               <entry>
                  <para>Don't use this property of <code>Treerow, </code>use <code>Treeitem.popup</code> instead.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Always throws UnsupportedOperationException </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>tooltip</code>
                  </para>
               </entry>
               <entry>
                  <para>Don't use this property of <code>Treerow, </code>use <code>Treeitem.tooltip</code> instead.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Always throws UnsupportedOperationException </code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getLevel</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the level this cell is.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getLinkedTreechildren</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the Treechildren associated with this Treerow.</para>
               </entry>
               <entry>
                  <para>
                     <code>Treechildren</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getSclass</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the style class. Note: 1) if not set (or setSclass(null), "item" is assumed; 2) if selected, it appends " seld" to super's getSclass(). </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getTree</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the Tree instance containing this element.</para>
               </entry>
               <entry>
                  <para>
                     <code>Tree</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">
                        <code>org.zkoss.zul.imp.XulElement</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">
                        <code>org.zkoss.zk.ui.HtmlBasedComponent</code>
                     </link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">
                        <code>org.zkoss.zk.ui.AbstractComponent </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2 id="Vbox"><title>Vbox</title>
      <para>The vbox component is used to create a vertically oriented box. Added components will be placed underneath each other in a column.</para>
      <para/>
      <para>
         <graphic fileref="images/box.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;zk&gt;&#xD;    &lt;vbox&gt;    &#xD;        &lt;button label="Button 1"/&gt;        &#xD;        &lt;button label="Button 2"/&gt;        &#xD;    &lt;/vbox&gt;    &#xD;    &lt;hbox&gt;    &#xD;        &lt;button label="Button 3"/&gt;        &#xD;        &lt;button label="Button 4"/&gt;        &#xD;    &lt;/hbox&gt;    &#xD;&lt;/zk&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Vbox</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*ALL</para></sect3><sect3><title>Supported Events </title>
      <para>*NONE</para></sect3><sect3><title>Properties</title>
      <para>*NONE</para></sect3><sect3><title>Methods</title>
      <para>*NONE</para></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Box">org.zkoss.zul.Box</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2 id="West"><title>West</title>
      <para>This component is a west region. The default class of CSS is specified "layout-region-west".</para>
      <para/>
      <para>
         <graphic fileref="images/layout.jpg">2
			
		</graphic>
      </para>
      <programlisting>&lt;borderlayout height="500px"&gt;&#xD;    &lt;north size="50%" border="0"&gt;    &#xD;        &lt;borderlayout&gt;        &#xD;            &lt;west size="25%" border="none" flex="true"&gt;            &#xD;                &lt;div style="background:#B8D335"&gt;                &#xD;                    &lt;label value="25%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/west&gt;            &#xD;            &lt;center border="none" flex="true"&gt;            &#xD;                &lt;div style="background:#E6D92C"&gt;                &#xD;                    &lt;label value="25%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/center&gt;            &#xD;            &lt;east size="50%" border="none" flex="true"&gt;            &#xD;                &lt;label value="Here is a non-border"                &#xD;                    style="color:gray;font-size:30px" /&gt;                    &#xD;            &lt;/east&gt;            &#xD;        &lt;/borderlayout&gt;        &#xD;    &lt;/north&gt;    &#xD;    &lt;center border="0"&gt;    &#xD;        &lt;borderlayout&gt;        &#xD;            &lt;west size="30%" flex="true" border="0"&gt;            &#xD;                &lt;div style="background:#E6D92C"&gt;                &#xD;                    &lt;label value="30%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/west&gt;            &#xD;            &lt;center&gt;            &#xD;                &lt;label value="Here is a border"                &#xD;                    style="color:gray;font-size:30px" /&gt;                    &#xD;            &lt;/center&gt;            &#xD;            &lt;east size="30%" flex="true" border="0"&gt;            &#xD;                &lt;div style="background:#B8D335"&gt;                &#xD;                    &lt;label value="30%"                    &#xD;                        style="color:white;font-size:50px" /&gt;                        &#xD;                &lt;/div&gt;                &#xD;            &lt;/east&gt;            &#xD;        &lt;/borderlayout&gt;        &#xD;    &lt;/center&gt;    &#xD;&lt;/borderlayout&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zkex.zul.West</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*NONE</para></sect3><sect3><title>Supported Events </title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>OnOpen</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <link linkend="OpenEvent">
                        <code>org.zkoss.zk.ui.event.OpenEvent</code>
                     </link>
                  </para>
                  <para>
                     <code/>
                  </para>
                  <para>
                     <code>Description: </code>
                     <code>When a layout is collapsed or opened by a user, the </code>
                     <code>onOpen</code>
                     <code> event is sent to the application.</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>size</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the size of this region.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>null</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getPosition()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns <code>Borderlayout.NORTH.</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>setWidth(java.lang.String width)</para>
               </entry>
               <entry>
                  <para>The width can't be specified in this component because its width is determined by other region components (West or East).</para>
               </entry>
               <entry>
                  <para>void</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="LayoutRegion">org.zkoss.zkex.zul.LayoutRegion </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect2><sect2 id="Window"><title>Window</title>
      <para>A window is, like HTML DIV tag, used to group components. Unlike other components, a window has the following characteristics. </para>
      <itemizedlist>
         <listitem>
            <para>A window is an owner of an ID space. Any component contained in a window, including itself, could be found by use of the getFellow method, if it is assigned with an identifier.</para>
         </listitem>
         <listitem>
            <para>A window could be overlapped, popup, and embedded.</para>
         </listitem>
         <listitem>
            <para>A window could be a modal dialog.</para>
         </listitem>
      </itemizedlist>
      <para>
         <graphic fileref="images/window.PNG">2
			
		</graphic>
      </para>
      <programlisting>&lt;hbox&gt;&#xD;    &lt;window title="Embedded Style" border="normal" width="200px"&gt;    &#xD;        Hello, Embedded!        &#xD;    &lt;/window&gt;    &#xD;    &lt;window title="Cyan Style" sclass="wndcyan" border="normal" width="200px"&gt;    &#xD;        Hello, Cyan!        &#xD;    &lt;/window&gt;    &#xD;    &lt;window title="Popup Style" sclass="popup" border="normal" width="200px"&gt;    &#xD;        Hello, Popup!        &#xD;    &lt;/window&gt;    &#xD;    &lt;window title="Modal Style" sclass="modal" border="normal" width="200px"&gt;    &#xD;        Hello, Modal!        &#xD;    &lt;/window&gt;    &#xD;&lt;/hbox&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Window</code>
      </para></sect3><sect3><title>Supported Child Components</title>
      <para>*ALL</para></sect3><sect3><title>Supported Events</title></sect3><sect3><title/>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Event Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>onMove </code>
                  </para>
               </entry>
               <entry>
                  <para>Event: <link linkend="Event">
                        <code>org.zkoss.ui.zk.ui.event.Event</code>
                     </link>
                  </para>
                  <para>Denotes the close button is pressed by a user, and the</para>
                  <para>component shall detach itself.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onOpen </code>
                  </para>
               </entry>
               <entry>
                  <para>Event: <link linkend="OpenEvent">
                        <code>org.zkoss.zk.ui.event.OpenEvent</code>
                     </link>
                  </para>
                  <para>Denotes user has opened or closed a component.<code> </code>
                  </para>
                  <para>
                     <code>Note:</code>
                  </para>
                  <para>Unlike <code>onClose</code>, this event is only a notification. The</para>
                  <para>client sends this event after opening or closing the</para>
                  <para>component.</para>
                  <para>It is useful to implement load-on-demand by listening to</para>
                  <para>the <code>onOpen</code> event, and creating components when the</para>
                  <para>first time the component is opened.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onClose </code>
                  </para>
               </entry>
               <entry>
                  <para>Event: <link linkend="Event">
                        <code>org.zkoss.ui.zk.ui.event.Event</code>
                     </link>
                  </para>
                  <para>Denotes the close button is pressed by a user, and the</para>
                  <para>component shall detach itself.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onOK </code>
                  </para>
               </entry>
               <entry>
                  <para>Event:<code> </code>
                     <link linkend="KeyEvent">
                        <code>org.zkoss.zk.ui.event.KeyEvent</code>
                     </link>
                  </para>
                  <para>Denotes user has pressed the ENTER key.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onCacnel </code>
                  </para>
               </entry>
               <entry>
                  <para>Event:<code> </code>
                     <link linkend="KeyEvent">
                        <code>org.zkoss.zk.ui.event.KeyEvent</code>
                     </link>
                  </para>
                  <para>
                     <code>Denotes user has pressed the ESC key.</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>onCtrlKey</para>
               </entry>
               <entry>
                  <para>Event: <link linkend="KeyEvent">
                        <code>org.zkoss.zk.ui.event.KeyEvent</code>
                     </link>
                  </para>
                  <para>Denotes user has pressed a special key, such as PgUp, Home and a key combined with the Ctrl or Alt key. Refer to the ctrlKeys Property section below for details.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>border </code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the border </para>
                  <para>Values: <code>none</code> | <code>normal</code> 
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>none</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>closable</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether to show a close button on the title bar. </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>contentStyle</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the CSS style for the content block of the window. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;empty string&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>ctrlKeys</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets what keystrokes to intercept. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>draggable</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>mode</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the mode of window.</para>
                  <para>Values: <code>overlapped</code> | <code>popup</code> | <code>modal</code> | <code>embedded</code> | <code>highlighted</code>. </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>0</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>position</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets how to position the window at the client screen. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;null&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>sizable</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets whether the window is sizable. </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>title</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the title. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>&lt;empty string&gt;</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>visible</code>
                  </para>
               </entry>
               <entry>
                  <para>Changes the visibility of the window. </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>false</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>clone()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Object</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>doEmbedded()</code>
                  </para>
               </entry>
               <entry>
                  <para>Makes this window as embeded with other components </para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>doHighlighted()</code>
                  </para>
               </entry>
               <entry>
                  <para>Makes this window as highlited.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>doModal()</code>
                  </para>
               </entry>
               <entry>
                  <para>Makes this window as a modal dialog.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>doOverlapped()</code>
                  </para>
               </entry>
               <entry>
                  <para>Makes this window as overlapped with other components.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>doPopup()</code>
                  </para>
               </entry>
               <entry>
                  <para>Makes this window as popup, which is overlapped with other </para>
                  <para>component and auto-hiden when user clicks outside of the window.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getContentSclass()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the style class used for the content block.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getOuterAttrs() </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getTitleSclass()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the style class used for the title.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>inEmbedded()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether this is embedded with other components </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>inHighlighted()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether this is a highlighted window.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>inModal()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether this is a modal dialog.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>inOverlapped()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether this is a overlapped window.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>inPopup()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether this is a popup window.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>insertBefore(org.zkoss.zk.ui.Component child, </code>
                  </para>
                  <para>
                     <code>org.zkoss.zk.ui.Component insertBefore) </code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onChildRemoved(org.zkoss.zk.ui.Component child)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onClose()</code>
                  </para>
               </entry>
               <entry>
                  <para>Process the onClose event sent when the close button is </para>
                  <para>pressed.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>onModal()</code>
                  </para>
               </entry>
               <entry>
                  <para>Process the onModal event by making itself a modal window.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setPage(org.zkoss.zk.ui.Page page)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>setParent(org.zkoss.zk.ui.Component parent)</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para>Inherited From </para>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect2><sect1><title>Events</title><sect2 id="CheckEvent"><title>CheckEvent</title>
      <para>Represents an event cause by user's check a state at the client.</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zk.ui.event.CheckEvent</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>isChecked()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether the state is checked. </para>
               </entry>
               <entry>
                  <para>
                     <code>boolea</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="ColSizeEvent"><title>ColSizeEvent</title>
      <para>Used to notify that the widths of two adjacent column are changed.</para>
      <para>When an user drags the border of sizable columns, the width of the adjacent columns are changed accordingly - one is enlarged, the other is shrunk and the total width is not changed.</para>
      <para>The event is sent to the parent (e.g., Columns and Treecols).</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.event.ColSizeEvent</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getColIndex()</code>
                  </para>
               </entry>
               <entry>
                  <para>Return the column index of the first column whose width is changed. </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getColumn1()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the first column whose width is changed. </para>
               </entry>
               <entry>
                  <para>org.zkoss.zk.ui.Component</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>get</code>
                     <code>Column2()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the second column whose width is changed. </para>
               </entry>
               <entry>
                  <para>org.zkoss.zk.ui.Component</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>get</code>
                     <code>Keys()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns what keys were pressed when the column is resized, or 0 if none of them was pressed. </para>
               </entry>
               <entry>
                  <para>int</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="CreateEvent"><title>CreateEvent</title>
      <para>Used to notify a window that all its children are created and initialized. <code>UiEngine</code> post this event to components that declares the <code>onCreate</code> handler (either as a method or as in instance definition).</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zk.ui.event.CreateEvent</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getArg()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns arguments <code>(org.zkoss.zk.ui.Execution.getArg())</code> when the component is created. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="DropEvent"><title>DropEvent</title>
      <para>Represents an event cause by user's dragging and dropping a component.</para>
      <para>The component being dragged can be retrieved by <code>getDragged()</code>. The component that received the dragged component is <code>Event.getTarget()</code>. </para>
      <para/><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zk.ui.event.DropEvent</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getDragged</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the component being dragged and drop to <code>Event.getTarget()</code>.</para>
               </entry>
               <entry>
                  <para>
                     <code>Component</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getArea</code>
                  </para>
               </entry>
               <entry>
                  <para>Not applicable to <code>DropEvent</code>. It always returns null if you drag and drop a component to components that partition itself into several areas, such as <code>imagemap</code>
                  </para>
               </entry>
               <entry>
                  <para>String</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="ErrorEvent"><title>ErrorEvent</title>
      <para>Represents an event cause by user's entering a wrong data or clearing the last wrong data. <code>ErrorEvent</code> is sent when the client detects users entered a wrong value. </para>
      <para>Note: if the client doesn't detect the error, the value is sent back to the server with regular event, such as <code>InputEvent</code>
      </para>
      <para/><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zk.ui.event.ErrorEvent</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getMessage</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the error message if this event is caused by a wrong data, or <code>null </code>if it is to clear messsage. </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="InputEvent">
                        <code>org.zkoss.zk.ui.event.InputEvent</code>
                     </link>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event</code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Event"><title>Event</title>
      <para>An event sent to the event handler of a component.</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zk.ui.event.Event</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getData()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the data accompanies with this event, or null if not available.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.util.Set</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getName()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the event time.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getPage()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the page owning this event, or null if broadcast </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zk.ui.Page</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getTarget()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the target component that receives this event, or null if broadcast.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zk.ui.Component</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>isPropagatable()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether this is propagatable</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>storePropagation()</code>
                  </para>
               </entry>
               <entry>
                  <para>Stops the propagation for this event.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>toString()</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <para> *NONE</para></sect3></sect2><sect2 id="InputEvent"><title>InputEvent</title>
      <para>Represents an event cause by user's input something at the client.</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zk.ui.event.InputEvent</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getValue()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the value that user input.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>isChangingBySelectBlock()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether this event is <code>onChanging</code>, and caused by user's selecting a list of items.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3></sect2><sect2 id="KeyEvent"><title>KeyEvent</title>
      <para/>
      <para>Represents a key pressed by the user. </para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zk.ui.event.KeyEvent</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getKeyCode()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the key code.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>isAltKey()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether ALT is pressed.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>isCtrlKey()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether CTRL is pressed.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>isShiftKey()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether SHIFT is pressed.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="MouseEvent"><title>MouseEvent</title>
      <para>Represents an event cause by mouse activitly. There are two possible way to identify a mouse event. One is by coordination (<code>getX()</code> and <code>getY().</code> The other is by a logical name, called area (<code>getArea()</code>).</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zk.ui.event.MouseEvent</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getArea()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the logical name of the area that the click occurs, or null if not available. </para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getKeys()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns what keys were pressed when the mouse is clicked, or 0 if none of them was pressed. </para>
               </entry>
               <entry>
                  <para>int</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getX()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the x coordination of the mouse pointer relevant to the component. </para>
               </entry>
               <entry>
                  <para>int</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getY()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the y coordination of the mouse pointer relevant to the component. </para>
               </entry>
               <entry>
                  <para>int</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="MoveEvent"><title>MoveEvent</title>
      <para>Represents an event caused by a component being moved.</para>
      <para>Component Implementation Note:</para>
      <para>A movable component must implement <code>Movable</code> for the returned object of <code>ComponentCtrl.getExtraCtrl()</code>. </para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zk.ui.event.MoveEvent</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getKey</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns what keys were pressed when the component is moved, or 0 if none of them was pressed. It is a combination of <code>CTRL_KEY</code>, <code>SHIFT_KEY</code> and <code>ALT_KEY</code>. </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getLeft</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Returns the left of the component after moved.</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getTop</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the top of the component after moved.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/>
      <para/></sect3></sect2><sect2 id="OpenEvent"><title>OpenEvent</title>
      <para>Represents an event cause by user's openning or closing something at the client.</para>
      <para>Note: it is a bit confusing but <code>Events.ON_CLOSE</code> is sent when user clicks a close button. It is a request to ask the server to close a window, a tab or others. If the server ignores the event, nothing will happen at the client. By default, the component is detached when receiving this event.</para>
      <para>On the other hand,<code> Events.ON_OPEN</code> (with <code>OpenEvent</code>) is a notification. It is sent to notify the server that the client has opened or closed something. And, the server can not prevent the client from opening or closing. </para>
      <para/><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zk.ui.event.OpenEvent</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getReference</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the reference that is the component causing <code>Event.getTarget()</code> to be opened.</para>
                  <para/>
                  <para>It is null, if the open event is not caused by opening a context menu, a<code> tooltip</code> or a <code>popup.</code> Note: the <code>onOpen</code> event is also sent when closing the context menu (<code>tooltip</code> and <code>popup</code>), and this method returns null in this case. Thus, it is better to test <code>isOpen()</code> or <code>getReference() </code>before accessing the returned value. if (<code>event.isOpen()</code>) doSome(<code>event.getReference()</code>); </para>
               </entry>
               <entry>
                  <para>
                     <code>Component</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>isOpen</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether it causes open.. </para>
               </entry>
               <entry>
                  <para>boolean</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="PageSizeEvent"><title>PageSizeEvent</title>
      <para>Used to notify that the page size is changed (by the user), or by paginal (such as <code>Paging</code>).</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zk.event.PageSizeEvent</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getPageable</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the pageable controller.</para>
               </entry>
               <entry>
                  <para>
                     <code>org</code>
                     <code>.zkoss.zul.ext.Pageable</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>getPageSize()</para>
               </entry>
               <entry>
                  <para>Returns the page size.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="PagingEvent"><title>PagingEvent</title>
      <para>Used to notify that a new page is selected by the user, or by <code>Paginal </code>(such as <code>Paging</code>). It is used for paging long content. </para>
      <para/><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zk.ui.event.PagingEvent</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getPageable</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the <code>pageable controller</code>.</para>
               </entry>
               <entry>
                  <para>
                     <code>Pageable</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getActivePage</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the active page (starting from 0).</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/></sect3></sect2><sect2 id="PortalMoveEvent"><title>PortalMoveEvent</title>
      <para>Represents an event caused by a portal being moved.</para>
      <para/><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zkmax.event.PortalMoveEvent</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getDragged</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Returns the panel being dragged.</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Panel</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getFrom</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the portalchildren from the dragged panel.</para>
               </entry>
               <entry>
                  <para>org.zkoss.zkmax.zul.Portalchildren</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getTo</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>Returns the portalchildren where the dragged panel drops to.</code>
                     <code> </code>
                  </para>
               </entry>
               <entry>
                  <para>org.zkoss.zkmax.zul.Portalchildren</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="ScrollEvent"><title>ScrollEvent</title>
      <para>Represents an event caused by that user is scrolling or has scrolled at the client. </para>
      <para>
         <code>ScrollEvent</code> will be sent wih name as "<code>onScroll</code>" after <code>setCurposByClient(int)</code> is called to notify application developers that it is called by user (rather than by codes).</para>
      <para>For components that might also support ScrollEvent with "<code>onScrolling</code>". It is used to notified the server that user is changing its content (changing is on progress and not finished).</para>
      <para>The components which are supported this event are: <link linkend="Slider">
            <code>org.zkoss.zul.Slider</code>
         </link>.</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zk.ui.event.ScrollEvent</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getPos</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the position. </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event</code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="SelectEvent"><title>SelectEvent</title>
      <para>Represents an event cause by user's the list selection is changed at the client.</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zk.ui.event.SelectEvent</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getSelectedItems()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the selected items.(never null)</para>
               </entry>
               <entry>
                  <para>
                     <code>java.util.Set</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="SelectionEvent"><title>SelectionEvent</title>
      <para>Represents an event cause by user's the list selection is changed at the client.</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zk.ui.event.SelectionEvent</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getSelectedText()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the selected text contained in this text.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.util.Set</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getSart()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the selected text's start position.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getEnd()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the selected text's end position.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3></sect2><sect2 id="SizeEvent"><title>SizeEvent</title>
      <para>Represents an event caused by a component being re-sized.</para>
      <para>Component Implementation Note: A sizable component must implement <code>Sizable</code> for the returned object of <code>ComponentCtrl.getExtraCtrl(). </code>
      </para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zk.ui.event.SizeEvent</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getKeyCode()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the height of the component after re-sized.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.String </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>isAltKey()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns what keys were pressed when the component is resized, or 0 if none of them was pressed.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>isCtrlKey()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the width of the component after re-sized.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="UploadEvent"><title>UploadEvent</title>
      <para>Represents that user has uploaded one or several files from the client to the server.</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zk.ui.event.UploadEvent</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getMedia()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the first media being uploaded, or null if no file is uploaded.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.util.media.Media</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getMedias()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the array of media being uploaded, or null if the user uploaded no file at all.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.util.media.Media[]</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event </code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="ZIndexEvent"><title>ZIndexEvent</title>
      <para>Represents an event caused by a component whose z-index is modified by the client. A z-indexed component must send ZindexEvent once the z-index of component is modifiable by the client. </para>
      <para>The components which are supported this event are: <link linkend="Window">
            <code>org.zkoss.zul.Window</code>
         </link>.</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zk.ui.event.ZIndexEvent</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Values</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getZIndex</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the z-index of the component after moved. </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para/>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="Event">
                        <code>org.zkoss.zk.ui.event.Event</code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3></sect2></sect1><sect1><title>Supplemental Classes</title><sect2 id="AbstractListModel"><title>AbstractListModel</title>
      <para>A skeletal implementation for <link linkend="ListModel">
            <code>ListModel</code>
         </link>.</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.AbstractListModel</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>AddListDataListener</code>
                  </para>
                  <para>
                     <code>(ListDataListener l)</code>
                  </para>
                  <para>
                     <code/>
                  </para>
               </entry>
               <entry>
                  <para>Adds a listener to the list that's notified each time a change to the data model occurs.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>RemoveListDataListener</code>
                  </para>
                  <para>
                     <code>(ListDataListener l)</code>
                  </para>
               </entry>
               <entry>
                  <para>Removes a listener from the list that's notified each time a change to the data model occurs.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="ListModel">org.zkoss.zul.ListModel</link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Constraint"><title>Constraint</title>
      <para>A constraint.</para><sect3><title>Interface Name</title>
      <para>
         <code>org.zkoss.zul.Constraint</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>validate(org.zkoss.zk.ui.Component comp, java.lang.Object </code>
                  </para>
                  <para>
                     <code>value)</code>
                  </para>
                  <para>
                     <code/>
                  </para>
               </entry>
               <entry>
                  <para>Verifies whether the value is acceptable.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="Constrained"><title>Constrained</title>
      <para>Decorates a component that its value is constrained by <link linkend="Constraint">
            <code>Constraint</code>
         </link>.</para><sect3><title>Interface Name</title>
      <para>
         <code>org.zkoss.zul.Constrainted</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getConstraint()</code>
                  </para>
                  <para>
                     <code/>
                  </para>
               </entry>
               <entry>
                  <para>Returns the constraint, or null if no constraint at all.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.Constraint</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>SetConstraint</code>
                  </para>
                  <para>
                     <code>(Constraint constr)</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the constraint.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/>
      <para/>
      <para/></sect3></sect2><sect2 id="Fileupload"><title>Fileupload</title>
      <para>A fileupload dialog used to let user upload a file.The <code>fileupload</code> component is not a modal dialog. Rather, it is a component, so it is placed inline with other components.</para>
      <para>
         <graphic fileref="images/fileupload.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;image id="img"/&gt;&#xD;Upload your hot shot:&#xD;</programlisting>
      <para>&lt;fileupload onUpload="img.setContent(event.media)"/&gt;</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Fileupload</code>
      </para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>number</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the maximal allowed number of files to upload. </para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>1</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>template</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the template used to create the upload modal dialog.</para>
                  <para>Template: ~./zul/html/fileuploaddlg.zul</para>
                  <para>Note: the template has no effect, if you use Fileupload as a component (and embed it to a page). </para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>~./zul/html/fileuploaddlg.zul</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/>
      <para/></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>get()</code>
                  </para>
                  <para>
                     <code/>
                  </para>
               </entry>
               <entry>
                  <para>Opens a modal dialog with the default message and title, and let user upload a file.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.util.media.Media</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>get(int max)</code>
                  </para>
               </entry>
               <entry>
                  <para>Opens a modal dialog to upload multiple files with the default message and title.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.util.media.Media[]</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>get(java.lang.String message, java.lang.String title)</code>
                  </para>
               </entry>
               <entry>
                  <para>Opens a modal dialog with the specified message and title, and let user upload a file.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.util.media.Media</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>get(java.lang.String message, java.lang.String title, int max)</code>
                  </para>
               </entry>
               <entry>
                  <para>Opens a modal dialog to upload multiple files with the specified message and title.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.util.media.Media[]</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>isChildable()</para>
               </entry>
               <entry>
                  <para>Determines whether it accepts child components</para>
                  <para>Value: <code>false</code>
                  </para>
                  <para>Note: No child is allowed. </para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>onClose()</para>
               </entry>
               <entry>
                  <para>Handles the <code>onClose</code> event which is sent when file(s) is uploaded or when the cancel button is pressed.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> 
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="ListitemRenderer"><title>ListitemRenderer</title>
      <para>Identifies components that can be used as "rubber stamps" to paint the cells in a <link linkend="Listbox">Listbox</link>.</para><sect3><title>Interface Name</title>
      <para>
         <code> org.zkoss.zul.Listitem</code>
         <code>Renderer</code>
      </para>
      <para>
         <code/>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>render(Listitem item, java.lang.Object data)</code>
                  </para>
                  <para>
                     <code/>
                  </para>
               </entry>
               <entry>
                  <para>Renders the data to the specified list item.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2 id="ListModel"><title>ListModel</title>
      <para>This interface defines the methods that components like <link linkend="Listbox">
            <code>Listbox</code>
         </link> and <link linkend="Grid">
            <code>Grid</code>
         </link> use to get the content of items.</para><sect3><title>Interface Name</title>
      <para>
         <code>org.zkoss.zul.ListModel</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>AddListDataListener</code>
                  </para>
                  <para>
                     <code>(ListDataListener l)</code>
                  </para>
                  <para>
                     <code/>
                  </para>
               </entry>
               <entry>
                  <para>Adds a listener to the list that's notified each time a change to the data model occurs.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getElementAt(int index)</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the value at the specified index.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Object </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getSize()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the length of the list.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>removeListDataListener(ListDataListener l)</code>
                  </para>
               </entry>
               <entry>
                  <para>Removes a listener from the list that's notified each time a change to the data model occurs.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/>
      <para/></sect3></sect2><sect2 id="Messagebox"><title>Messagebox</title>
      <para/>
      <para>It provides a set of utilities to show message boxes.</para>
      <para>It is typically used to alert users when an error occurs, or to prompt user for an decision.</para>
      <para>
         <graphic fileref="images/messagebox.png">2
			
		</graphic>
      </para>
      <programlisting>&lt;window title="Messagebox demo" border="normal"&gt;&#xD;    &lt;button label="Question" width="100px"&gt;    &#xD;        &lt;attribute name="onClick"&gt;{        &#xD;            Messagebox.show("Question is pressed. Are you sure?", "Question",            &#xD;            Messagebox.OK | Messagebox.CANCEL, Messagebox.QUESTION);            &#xD;        }&lt;/attribute&gt;        &#xD;    &lt;/button&gt;    &#xD;&lt;/window&gt;&#xD;</programlisting><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.Messagebox</code>
      </para></sect3><sect3><title>Properties</title>
      <informaltable frame="all">
         <tgroup cols="4">
            <thead>
               <row>
                  <entry>
                     <para>Property</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Data Type</para>
                  </entry>
                  <entry>
                     <para>Default Value</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>template</code>
                  </para>
               </entry>
               <entry>
                  <para>Sets the template used to create the message dialog.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
               <entry>
                  <para>
                     <code>~./zul/html/messagebox.zul</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Methods</title>
      <para/>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>Show(int messageCode, int titleCode, int button, java.lang.String icon)</code>
                  </para>
                  <para>
                     <code/>
                  </para>
               </entry>
               <entry>
                  <para>Shows a message box by specifying a message code, and returns what button is pressed.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>show(int messageCode, java.lang.Object[] args, int titleCode, int button, java.lang.String icon)</code>
                  </para>
               </entry>
               <entry>
                  <para>Shows a message box by specifying a message code, and returns what button is pressed.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>show(int messageCode, java.lang.Object arg, int titleCode, int button, java.lang.String icon)</code>
                  </para>
               </entry>
               <entry>
                  <para>Shows a message box by specifying a message code, and returns what button is pressed.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>show(java.lang.String message)</code>
                  </para>
               </entry>
               <entry>
                  <para>Shows a message box and returns what button is pressed.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>show(java.lang.String message, java.lang.String title, int buttons, java.lang.String icon)</code>
                  </para>
               </entry>
               <entry>
                  <para>Shows a message box and returns what button is pressed.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title/>
      <para/>
      <para/></sect3></sect2><sect2 id="RendererCtrl"><title>RendererCtrl</title>
      <para>This interface defines the methods components like Listbox use to notify the renderer for several circumstance.</para>
      <para>Though <code>ListitemRenderer.render(org.zkoss.zul.Listitem, java.lang.Object)</code> is called one item a timer, a request might have several items to render. And, if the renderer implements this interface, <code>doTry()</code> will be called before any rendering, and <code>doFinally() </code>will be called after all rendering. If any exception occurs, <code>doCatch(java.lang.Throwable)</code> will be called.</para>
      <para>A typical use is to start a transaction and use it for rendering all items from the same request. </para><sect3><title>Interface Name</title>
      <para>
         <code>org.zkoss.zul.</code>
         <code>RendererCtrl</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>doCatch(java.lang.Throwable ex)</code>
                  </para>
                  <para>
                     <code/>
                  </para>
               </entry>
               <entry>
                  <para>Called if any exception occurs when rendering items.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>doFinally()</code>
                  </para>
               </entry>
               <entry>
                  <para>Invoked after all rendering are done successfully or an exception occurs.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>doTry()</code>
                  </para>
               </entry>
               <entry>
                  <para>Called before rendering any item.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <para/>
      <para/></sect3></sect2><sect2 id="SimpleConstraint"><title>SimpleConstraint</title>
      <para>A simple constraint that you could build based the predefined constants.</para><sect3><title>Interface Name</title>
      <para>
         <code> org.zkoss.zul.SimpleConstraint</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getClientValidation()</code>
                  </para>
                  <para/>
               </entry>
               <entry>
                  <para>Returns the function name in JavaScript or a Javascript code snippet used to validate the value at the client.</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getErrorMessage(org.zkoss.zk.ui.Component comp)</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the error message when the client detects an error</para>
               </entry>
               <entry>
                  <para>
                     <code>String</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getInstance(java.lang.String flags)</code>
                  </para>
               </entry>
               <entry>
                  <para>Parses flags from a string to an integer representing a combination of NO_POSITIVE and other NO_xxx flags.</para>
               </entry>
               <entry>
                  <para>
                     <code>org.zkoss.zul.</code>
                  </para>
                  <para>
                     <code>SimpleConstraint</code>
                  </para>
                  <para/>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>isClientComplete()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns whether the client's validation is complete.</para>
               </entry>
               <entry>
                  <para>
                     <code>boolean</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>validate(org.zkoss.zk.ui.Component comp, java.lang.Object value)</code>
                  </para>
               </entry>
               <entry>
                  <para>Verifies whether the value is acceptable.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2><sect2><title/>
      <para/></sect2><sect2 id="SimpleListModel"><title>SimpleListModel</title>
      <para>A simple implementation of <link linkend="ListModel">
            <code>ListModel</code>
         </link>.</para><sect3><title>Class Name</title>
      <para>
         <code>org.zkoss.zul.SimpleListModel</code>
      </para></sect3><sect3><title>Methods</title>
      <informaltable frame="all">
         <tgroup cols="3">
            <thead>
               <row>
                  <entry>
                     <para>Name</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
                  <entry>
                     <para>Return Data Type</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <code>getElementAt(int index)</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the value at the specified index.</para>
               </entry>
               <entry>
                  <para>
                     <code>java.lang.Object </code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>getSize()</code>
                  </para>
               </entry>
               <entry>
                  <para>Returns the length of the list.</para>
               </entry>
               <entry>
                  <para>
                     <code>int</code>
                  </para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>
                     <code>sort(java.util.Comparator cmpr, boolean ascending)</code>
                  </para>
               </entry>
               <entry>
                  <para>Sorts the data.</para>
               </entry>
               <entry>
                  <para>
                     <code>void</code>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>Inherited From </title>
      <informaltable frame="all">
         <tgroup cols="1">
            <thead>
               <row>
                  <entry>
                     <para>Inherited From</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>
                     <link linkend="AbstractListModel">
                        <code>org.zkoss.zul.AbstractListModel</code>
                     </link>
                  </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable>
      <para/></sect3></sect2></sect1></chapter>
   <chapter>
      <title>5. The XHTML Components</title><sect1><title>Overview</title>
      <itemizedlist>
         <listitem>
            <para>All XHTML components are packed in the org.zkoss.zhtml package.</para>
         </listitem>
         <listitem>
            <para>The XML name space is http://www.w3.org/1999/xhtml</para>
         </listitem>
         <listitem>
            <para>The extensions include htm, html, xhtml and zhtml.</para>
         </listitem>
         <listitem>
            <para>The component names are case-insensitive. Developers could use any combination of lower or upper cases.</para>
         </listitem>
      </itemizedlist><sect2><title>URL and encodeURL</title>
      <para>A XHTML component generates attributes directly to native HTML tags. It means, unlike XUL, it doesn't prefix the servlet context path to attributes for specifying URL. For example, the following codes don't work (unless the servlet context is "").</para>
      <programlisting>&lt;img href="/my/good.png"/&gt;&#xD;</programlisting>
      <para>Rather, you shall use the encodeURL function in EL expressions as follows.</para>
      <programlisting>&lt;?taglib uri="http://www.zkoss.org/dsp/web/core.dsp.tld" prefix="p"?&gt;&#xD;...&#xD;&lt;img href="${p:encodeURL('/my/good.png')}"/&gt;&#xD;</programlisting>
      <para>In Java, you shall use the encodeURL method from org.zkoss.zk.ui.Execution.</para>
      <programlisting>&lt;img id="another"/&gt;&#xD;&lt;zscript&gt;&#xD;another.setDynamicAttribute("href",&#xD;Executions.getCurrent().encodeURL("/my/good.png"));&#xD;&lt;/zscript&gt;&#xD;</programlisting>
      <para>Notice that XUL components and all ZK features that accept an URL will invoke the encodeURL method automatically<footnote>
            <para>The reason not to handle XHTML compoents is that we don't know which attribute requires URL.</para>
         </footnote>.</para></sect2><sect2><title>AbstractTag</title>
      <para>All XHTML components are derived from the org.zkoss.zhtml.impl.AbstractTag class.</para>
      <para>A XHTML component is a thin wrapper that encapsulates a native HTML tag. It is different from a XUL component or other none-native component in several ways.</para>
      <itemizedlist>
         <listitem>
            <para>By implementing the org.zkoss.zk.ui.ext.RawId interface, the universal identifier (getUuid) is the same as the identifier (getId).</para>
         </listitem>
         <listitem>
            <para>By implementing the org.zkoss.zk.ui.ext.DynamicAttributes interface, all XHTML components support arbitrary attributes. In other words, any attribute name is legal (as long as the targeted browser supports).</para>
         </listitem>
      </itemizedlist></sect2><sect2><title>Raw</title>
      <para>A special component, org.zkoss.zhtml.Raw, used to represent any component that is not declared in the following section (i.e., not in lang.xml). In other words, if any unrecognized component name is found, an instance of Raw is created, such that a proper HTML tag will be generated correspondingly. In other words, any component name is legal (as long as the targeted browser supports).</para>
      <programlisting>&lt;marquee align="top"&gt;...&lt;/marquee&gt;&#xD;</programlisting>
      <para>It is equivalent to</para>
      <programlisting>new Raw().setDynamicAttribute("align", "top");&#xD;</programlisting></sect2></sect1><sect1><title>Components</title><sect2><title>A</title>
      <para/></sect2><sect2><title>Abbr</title>
      <para/></sect2><sect2><title>Acronym</title>
      <para/></sect2><sect2><title>Address</title>
      <para/></sect2><sect2><title>Area</title>
      <para/></sect2><sect2><title>B</title>
      <para/></sect2><sect2><title>Base</title>
      <para/></sect2><sect2><title>Big</title>
      <para/></sect2><sect2><title>Blockquote</title>
      <para/></sect2><sect2><title>Body</title>
      <para/></sect2><sect2><title>Br</title>
      <para/></sect2><sect2><title>Button</title>
      <para/></sect2><sect2><title>Caption</title>
      <para/></sect2><sect2><title>Cite</title>
      <para/></sect2><sect2><title>Code</title>
      <para/></sect2><sect2><title>Collection</title>
      <para/></sect2><sect2><title>Colgroup</title>
      <para/></sect2><sect2><title>Dd</title>
      <para/></sect2><sect2><title>Del</title>
      <para/></sect2><sect2><title>Dfn</title>
      <para/></sect2><sect2><title>Dir</title>
      <para/></sect2><sect2><title>Div</title>
      <para/></sect2><sect2><title>Dl</title>
      <para/></sect2><sect2><title>Dt</title>
      <para/></sect2><sect2><title>Em</title>
      <para/></sect2><sect2><title>Embed</title>
      <para/></sect2><sect2><title>Fieldset</title>
      <para/></sect2><sect2><title>Font</title>
      <para/></sect2><sect2><title>Form</title>
      <para/></sect2><sect2><title>H1</title>
      <para/></sect2><sect2><title>H2</title>
      <para/></sect2><sect2><title>H3</title>
      <para/></sect2><sect2><title>H4</title>
      <para/></sect2><sect2><title>Head</title>
      <para/></sect2><sect2><title>Hr</title>
      <para/></sect2><sect2><title>Html</title>
      <para/></sect2><sect2><title>I</title>
      <para/></sect2><sect2><title>Iframe</title>
      <para/></sect2><sect2><title>Img</title>
      <para/></sect2><sect2><title>Input</title>
      <para/></sect2><sect2><title>Ins</title>
      <para/></sect2><sect2><title>Isindex</title>
      <para/></sect2><sect2><title>Kbd</title>
      <para/></sect2><sect2><title>Label</title>
      <para/></sect2><sect2><title>Legend</title>
      <para/></sect2><sect2><title>Li</title>
      <para/></sect2><sect2><title>Link</title>
      <para/></sect2><sect2><title>Map</title>
      <para/></sect2><sect2><title>
         <link linkend="Menu">Menu</link>
      </title>
      <link linkend="Menu">Menu</link>
      <para/></sect2><sect2><title>Meta</title>
      <para/></sect2><sect2><title>Nobr</title>
      <para/></sect2><sect2><title>Object</title>
      <para/></sect2><sect2><title>Ol</title>
      <para/></sect2><sect2><title>Optgroup</title>
      <para/></sect2><sect2><title>Option</title>
      <para/></sect2><sect2><title>P</title>
      <para/></sect2><sect2><title>Pre</title>
      <para/></sect2><sect2><title>Q</title>
      <para/></sect2><sect2><title>S</title>
      <para/></sect2><sect2><title>Sam</title>
      <para/></sect2><sect2><title>Script</title>
      <para/></sect2><sect2><title>Select</title>
      <para/></sect2><sect2><title>Small</title>
      <para/></sect2><sect2><title>Span</title>
      <para/></sect2><sect2><title>Strong</title>
      <para/></sect2><sect2><title>Style</title>
      <para/></sect2><sect2><title>Sub</title>
      <para/></sect2><sect2><title>Sup</title>
      <para/></sect2><sect2><title>Table</title>
      <para/></sect2><sect2><title>Tbody</title>
      <para/></sect2><sect2><title>Td</title>
      <para/></sect2><sect2><title>Text</title>
      <para/></sect2><sect2><title>Textarea</title>
      <para/></sect2><sect2><title>Tfoot</title>
      <para/></sect2><sect2><title>Th</title>
      <para/></sect2><sect2><title>Thead</title>
      <para/></sect2><sect2><title>Title</title>
      <para/></sect2><sect2><title>Tr</title>
      <para/></sect2><sect2><title>Tt</title>
      <para/></sect2><sect2><title>Ul</title>
      <para/></sect2><sect2><title>Var</title>
      <para/></sect2></sect1><sect1><title>Supplement Classes</title><sect2><title>Fileupload</title>
      <para/></sect2><sect2><title>Messagebox</title></sect2></sect1></chapter>
   <chapter>
      <title>Appendix A. WEB-INF/web.xml</title>
      <para>To add ZK a Web application, you have to add servlets, listeners and a optional filter to web.xml.</para><sect1><title>ZK Loader</title>
      <para>[Required] Class: org.zkoss.zk.ui.http.DHtmlLayoutServlet</para>
      <para>DHtmlLayoutServlet is a servlet used to load ZUML pages when the Web server receives URL requests sent by users.</para>
      <para>Notice that you must specify load-on-startup since many other servlets depend on the ZK loader.</para>
      <programlisting>&lt;load-on-startup&gt;1&lt;/load-on-startup&gt;&#xD;</programlisting>
      <para>It is suggested to map this servlet to the zul and zhtml extensions as shown in the Sample section below. It is OK if you want to map xul and html, too.</para><sect2><title>The Initial Parameters</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>init-param</para>
                  </entry>
                  <entry>
                     <para>Descriptions</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>update-uri</para>
               </entry>
               <entry>
                  <para>[Required]</para>
                  <para>It specifies the URI which the ZK AU engine is mapped to.</para>
                  <para>For example, if the ZK AU engine is mapped to /zkau/*, by use of servlet-mapping, then specify /zkau for this parameter.</para>
                  <para>Note: if the servlet container is used with other Web server, like Apache, you have to map this update URI to the servlet container (in additions to zul and zhtml files).</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>compress</para>
               </entry>
               <entry>
                  <para>[Optional][Default: true]</para>
                  <para>It specifies whether to compress the output if the browser supports the compression (Accept-Encoding) and this Servlet is not included by other Servlets.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>log-level</para>
               </entry>
               <entry>
                  <para>[Optional]</para>
                  <para>It specifies the default log level for org.zkoss. If not specified, the system default (usually INFO) is used.</para>
                  <para>Possible values: OFF, ERROR, WARNING, INFO, DEBUG and FINER. Refer to the Beyond ZK chapter in the Developer's Guide.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect2></sect1><sect1><title>ZK AU Engine</title>
      <para>[Required] Class: org.zkoss.zk.au.http.DHtmlUpdateServlet</para>
      <para>DHtmlUpdateServlet is a servlet that handles AJAX requests asynchronously and automatically.</para>
      <para>Notice that the URL pattern mapped to this engine must be consistent with the update-uri parameter of the ZK Loader.</para><sect2><title>The Initial Parameters</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>init-param</para>
                  </entry>
                  <entry>
                     <para>Descriptions</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>processor0processor1processor2...</para>
               </entry>
               <entry>
                  <para>[Optional]</para>
                  <para>It specifies an AU processor. The first processor must be specified with the name called processor0, second processor1 and so on.</para>
                  <para>The syntax of the value is</para>
                  <programlisting>/prefix=class&#xD;</programlisting>
                  <para>For example,</para>
                  <programlisting>        &lt;init-param&gt;&lt;param-name&gt;processor0&lt;/param-name&gt;&lt;param-value&gt;/upload=com.super.MyUploader&lt;/param-value&gt;&lt;/init-param&gt;        &#xD;        &lt;init-param&gt;&lt;param-name&gt;processor1&lt;/param-name&gt;&lt;param-value&gt;/extra=com.super.MyExtra&lt;/param-value&gt;&lt;/init-param&gt;        &#xD;</programlisting>
                  <para>The class must implement the org.zkoss.zk.au.http.AuProcessor interface.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect2></sect1><sect1><title>ZK Session Cleaner</title>
      <para>[Required] Class: org.zkoss.zk.ui.http.HttpSessionListener</para>
      <para>HttpSessionListener is a listener used to clean up memory when a HTTP session is destroyed.</para></sect1><sect1><title>ZK Filter</title>
      <para>[Optional] Class: org.zkoss.zk.ui.http.DHtmlLayoutFilter</para>
      <para>DHtmlLayoutFilter is a filter to post-process the output generated by other servlets, such as JSP pages. Its role is similar to the ZK Loader. Unlike the ZK Loader, which loads static ZUML pages from Web applications directly, the ZK filter is designed to process dynamic pages generated by other servlets, say JSP or JSF. It enables developers to add rich user interfaces to existent servlets written in any technology.</para>
      <para>Note: the output must be in XHTML (or ZUML) syntax. If you encounter any problem, you can save the generated output into a ZHTML page and then browse the URL whether the ZHTML page is stored.</para><sect2><title>The Initial Parameters</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>init-param</para>
                  </entry>
                  <entry>
                     <para>Descriptions</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>extension</para>
               </entry>
               <entry>
                  <para>[Optional][Default: html]</para>
                  <para>It specifies how to process the response generated by other servlets.</para>
                  <para>If html or zhtml, XHTML is assumed to be the default namespace. If xul or zul, XUL is assumed to be the default namespace.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>charset</para>
               </entry>
               <entry>
                  <para>[Optional][Default: UTF-8]</para>
                  <para>It specifies the default charset for the output of this filter.</para>
                  <para>If an empty string is specified as follows, the container's default is used. In other words, the setCharacterEncoding method of javax.servlet.ServletResponse is not called.</para>
                  <programlisting>&lt;param-value&gt;&lt;/param-value&gt;&#xD;</programlisting>
               </entry>
            </row>
            <row>
               <entry>
                  <para>compress</para>
               </entry>
               <entry>
                  <para>[Optional][Default: true]</para>
                  <para>It specifies whether to compress the output if the browser supports the compression (Accept-Encoding) and this filter is not included by other Servlets.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect2><sect2><title>How to Specify in web.xml</title>
      <programlisting>&lt;filter&gt;&#xD;    &lt;filter-name&gt;zkFilter&lt;/filter-name&gt;    &#xD;    &lt;filter-class&gt;org.zkoss.zk.ui.http.DHtmlLayoutFilter&lt;/filter-class&gt;    &#xD;&lt;/filter&gt;&#xD;</programlisting></sect2></sect1><sect1><title>DSP Loader</title>
      <para>[Optional] Class: org.zkoss.web.servlet.dsp.InterpreterServlet</para>
      <para>InterpreterServlet is a servlet used to process the DSP files. DSP is a JSP-like template technology. It takes the same syntax as that of JSP. Unlike JSP, DSP is interpreted at the run time, so it is easy to deploy DSP pages. No Java compiler is required in your run-time environment. In addition, you could distribute DSP pages in jar files. This is the way ZK is distributed.</para>
      <para>However, you cannot embed Java codes in DSP pages. Actions of DSP, though extensible through TLD files, are different from JSP tags.</para><sect2><title>The Initial Parameters</title>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>init-param</para>
                  </entry>
                  <entry>
                     <para>Descriptions</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>charset</para>
               </entry>
               <entry>
                  <para>[Optional][Default: UTF-8]</para>
                  <para>It specifies the default charset for the output of the DSP interpreter.</para>
                  <para>If an empty string is specified as follows, the container's default is used. In other words, the setCharacterEncoding method of javax.servlet.ServletResponse is not called.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>class-resource</para>
               </entry>
               <entry>
                  <para>[Optional][Default: false]</para>
                  <para>Specifies whether to load resources, such as TLD files, from the class loader, in addition to the servlet context.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>compress</para>
               </entry>
               <entry>
                  <para>[Optional][Default: true]</para>
                  <para>It specifies whether to compress the output if the browser supports the compression (Accept-Encoding) and this Servlet is not included by other Servlets.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect2><sect2><title>How to Specify in web.xml</title>
      <programlisting>&lt;servlet&gt;&#xD;    &lt;servlet-name&gt;zkLoader&lt;/servlet-name&gt;    &#xD;    &lt;servlet-class&gt;org.zkoss.web.servlet.dsp.InterpreterServlet&lt;/servlet-class&gt;    &#xD;&lt;/servlet&gt;&#xD;</programlisting></sect2></sect1><sect1><title>Sample of web.xml</title>
      <programlisting>&lt;web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"&#xD;xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&#xD;xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"&gt; &#xD;&#xD;    &lt;!-- //// --&gt;    &#xD;    &lt;!-- ZK --&gt;    &#xD;    &lt;listener&gt;    &#xD;        &lt;description&gt;ZK listener for cleanup when a session is destroyed&lt;/description&gt;        &#xD;        &lt;listener-class&gt;org.zkoss.zk.ui.http.HttpSessionListener&lt;/listener-class&gt;        &#xD;    &lt;/listener&gt;    &#xD;    &lt;servlet&gt;    &#xD;        &lt;description&gt;ZK loader for evaluating ZUML pages&lt;/description&gt;        &#xD;        &lt;servlet-name&gt;zkLoader&lt;/servlet-name&gt;        &#xD;        &lt;servlet-class&gt;org.zkoss.zk.ui.http.DHtmlLayoutServlet&lt;/servlet-class&gt;        &#xD;&#xD;        &lt;!-- Must. Specifies URI of the update engine (DHtmlUpdateServlet).        &#xD;        It must be the same as &lt;url-pattern&gt; for the update engine.        &#xD;        --&gt;        &#xD;        &lt;init-param&gt;        &#xD;            &lt;param-name&gt;update-uri&lt;/param-name&gt;            &#xD;            &lt;param-value&gt;/zkau&lt;/param-value&gt;            &#xD;        &lt;/init-param&gt;        &#xD;        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;&lt;!-- MUST --&gt;        &#xD;    &lt;/servlet&gt;    &#xD;    &lt;servlet-mapping&gt;    &#xD;        &lt;servlet-name&gt;zkLoader&lt;/servlet-name&gt;        &#xD;        &lt;url-pattern&gt;*.zul&lt;/url-pattern&gt;        &#xD;    &lt;/servlet-mapping&gt;    &#xD;    &lt;servlet-mapping&gt;    &#xD;        &lt;servlet-name&gt;zkLoader&lt;/servlet-name&gt;        &#xD;        &lt;url-pattern&gt;*.zhtml&lt;/url-pattern&gt;        &#xD;    &lt;/servlet-mapping&gt;    &#xD;    &lt;servlet&gt;    &#xD;        &lt;description&gt;The asynchronous update engine for ZK&lt;/description&gt;        &#xD;        &lt;servlet-name&gt;auEngine&lt;/servlet-name&gt;        &#xD;        &lt;servlet-class&gt;org.zkoss.zk.au.http.DHtmlUpdateServlet&lt;/servlet-class&gt;        &#xD;    &lt;/servlet&gt;    &#xD;    &lt;servlet-mapping&gt;    &#xD;        &lt;servlet-name&gt;auEngine&lt;/servlet-name&gt;        &#xD;        &lt;url-pattern&gt;/zkau/*&lt;/url-pattern&gt;        &#xD;    &lt;/servlet-mapping&gt;    &#xD;    &lt;!-- //// --&gt;    &#xD;&#xD;    &lt;!-- MIME mapping --&gt;    &#xD;    &lt;mime-mapping&gt;    &#xD;        &lt;extension&gt;gif&lt;/extension&gt;        &#xD;        &lt;mime-type&gt;image/gif&lt;/mime-type&gt;        &#xD;    &lt;/mime-mapping&gt;    &#xD;    &lt;mime-mapping&gt;    &#xD;        &lt;extension&gt;html&lt;/extension&gt;        &#xD;        &lt;mime-type&gt;text/html&lt;/mime-type&gt;        &#xD;    &lt;/mime-mapping&gt;    &#xD;    &lt;mime-mapping&gt;    &#xD;        &lt;extension&gt;htm&lt;/extension&gt;        &#xD;        &lt;mime-type&gt;text/html&lt;/mime-type&gt;        &#xD;    &lt;/mime-mapping&gt;    &#xD;                            &lt;mime-mapping&gt;&lt;extension&gt;jad&lt;/extension&gt;&lt;mime-type&gt;text/vnd.sun.j2me.app-descriptor&lt;/mime-type&gt;&lt;/mime-mapping&gt;&lt;mime-mapping&gt;                            &#xD;        &lt;extension&gt;jpeg&lt;/extension&gt;        &#xD;        &lt;mime-type&gt;image/jpeg&lt;/mime-type&gt;        &#xD;    &lt;/mime-mapping&gt;    &#xD;    &lt;mime-mapping&gt;    &#xD;        &lt;extension&gt;jpg&lt;/extension&gt;        &#xD;        &lt;mime-type&gt;image/jpeg&lt;/mime-type&gt;        &#xD;    &lt;/mime-mapping&gt;    &#xD;    &lt;mime-mapping&gt;    &#xD;        &lt;extension&gt;js&lt;/extension&gt;        &#xD;        &lt;mime-type&gt;application/x-javascript&lt;/mime-type&gt;        &#xD;    &lt;/mime-mapping&gt;    &#xD;    &lt;mime-mapping&gt;    &#xD;        &lt;extension&gt;png&lt;/extension&gt;        &#xD;        &lt;mime-type&gt;image/png&lt;/mime-type&gt;        &#xD;    &lt;/mime-mapping&gt;    &#xD;    &lt;mime-mapping&gt;    &#xD;        &lt;extension&gt;txt&lt;/extension&gt;        &#xD;        &lt;mime-type&gt;text/plain&lt;/mime-type&gt;        &#xD;    &lt;/mime-mapping&gt;    &#xD;    &lt;mime-mapping&gt;    &#xD;        &lt;extension&gt;xml&lt;/extension&gt;        &#xD;        &lt;mime-type&gt;text/xml&lt;/mime-type&gt;        &#xD;    &lt;/mime-mapping&gt;    &#xD;    &lt;mime-mapping&gt;    &#xD;        &lt;extension&gt;zhtml&lt;/extension&gt;        &#xD;        &lt;mime-type&gt;text/html&lt;/mime-type&gt;        &#xD;    &lt;/mime-mapping&gt;    &#xD;    &lt;mime-mapping&gt;    &#xD;        &lt;extension&gt;zul&lt;/extension&gt;        &#xD;        &lt;mime-type&gt;text/html&lt;/mime-type&gt;        &#xD;    &lt;/mime-mapping&gt;    &#xD;&#xD;    &lt;welcome-file-list&gt;    &#xD;        &lt;welcome-file&gt;index.zul&lt;/welcome-file&gt;        &#xD;        &lt;welcome-file&gt;index.zhtml&lt;/welcome-file&gt;        &#xD;        &lt;welcome-file&gt;index.html&lt;/welcome-file&gt;        &#xD;        &lt;welcome-file&gt;index.htm&lt;/welcome-file&gt;        &#xD;    &lt;/welcome-file-list&gt;    &#xD;&lt;/web-app&gt;&#xD;</programlisting></sect1></chapter>
   <chapter>
      <title>Appendix B. WEB-INF/zk.xml</title>
      <para>WEB-INF/zk.xml is the configuration descriptor of ZK. This file optional. If you need to configure ZK differently from the default, you could provide a file called zk.xml under the WEB-INF directory.</para><sect1><title>Overview</title>
      <para>The root element must be &lt;zk&gt;. Then, you could specify any combination of the following element under the root element.</para><sect2><title>The richlet and richlet-mapping elements</title>
      <para>To declare a richlet, you have to add the richlet element to zk.xml. You could specify any number of richlet elements. Each of them must have two child elements, richlet-name and richlet-class, and might have any number of the init-param child elements.</para>
      <para>The class name specified in the richlet-class element must implement the org.zkoss.zk.ui.Richlet interface. The name and value specified in the init-param element can be retrieved when the init method of org.zkoss.zk.ui.Richlet is called.</para>
      <programlisting>&lt;richlet&gt;&lt;richlet-name&gt;Test&lt;/richlet-name&gt;&lt;richlet-class&gt;org.zkoss.zkdemo.TestRichlet&lt;/richlet-class&gt;&lt;init-param&gt;&lt;param-name&gt;any&lt;/param-name&gt;&lt;param-value&gt;any&lt;/param-value&gt;&lt;/init-param&gt;&lt;/richlet&gt;                                &#xD;</programlisting>
      <para>Once declaring a richlet, you can map it to any number of URL by use of richlet-mapping as depicted below.</para>
      <programlisting>&lt;richlet-mapping&gt;&lt;richlet-name&gt;Test&lt;/richlet-name&gt;&lt;url-pattern&gt;/test&lt;/url-pattern&gt;&lt;/richlet-mapping&gt;&lt;richlet-mapping&gt;&lt;richlet-name&gt;Test&lt;/richlet-name&gt;&lt;url-pattern&gt;/some/more/*&lt;/url-pattern&gt;&lt;/richlet-mapping&gt;                &#xD;</programlisting>
      <para>The URL specified in the url-pattern element must start with /. If the URI ends with /*, then it is matched to all request with the same prefix. To retrieve the real request, you can check the value returned by the getRequestPath method of the current page.</para>
      <programlisting>public void service(Page page) {&#xD;    if ("/some/more/hi".equals(page.getRequestPath()) {    &#xD;        ...        &#xD;    }}    &#xD;</programlisting></sect2><sect2><title>The listener Element</title>
      <para>To declare a listener, you have to add the listener element to zk.xml. You could specify any number of listener elements. Each of them could have two child elements, description and listener-class, where description is optional.</para>
      <programlisting>&lt;zk&gt;&#xD;    &lt;listener&gt;    &#xD;        &lt;listener-class&gt;my.MyInit&lt;/listener-class&gt;        &#xD;&lt;/listener&gt;&#xD;&lt;/zk&gt;&#xD;</programlisting>
      <para>The type of a listener depends on what interface it implements. For example, if a listener implements the org.zkoss.zk.ui.event.EventThreadInit interface, then it is used to listen when an event processing thread is initialized. A listener could implement multiple interfaces and it will be used whenever the corresponding interface is about to call.</para><sect3><title>The org.zkoss.zk.ui.event.EventThreadInit Interface</title>
      <para>It is implemented by a listener class that will be used to initialize an event processing thread, before an event is dispatched to it for processing.</para>
      <para>If a listener implements this interface, an instance is created, and then the prepare method is called in the main thread (aka., the servlet thread), before processing an event. Then, the init method is called in the event processing thread.</para>
      <para>If a developer wants to prevent an event from being processed, he can throw an exception in the prepare method or the init method.</para>
      <para>A typical use of this feature is to implement auto-authentication. For example, JBoss<footnote>
            <para>http://www.jboss.org</para>
         </footnote> required you to call SecurityAssociation.setPrincipal to grant permissions of a user to the event processing thread, as described in the Initialization Before Processing Each Event section, the Event Listening and Processing chapter.</para></sect3><sect3><title>The org.zkoss.zk.ui.event.EventThreadCleanup interface</title>
      <para>It is implemented by a listener class that will be used to cleanup an event processing thread, after it has processed an event.</para>
      <para>If a listener implements this interface, an instance is created, and then the cleanup method is called in the event processing thread after the thread processes the event. Then, the complete method is called in the main thread (aka., the servlet thread), after the main thread is resumed.</para>
      <para>Note: The complete method won't be called if the corresponding cleanup method threw an exception.</para>
      <para>A typical use of this feature is to clean up unclosed transaction.</para>
      <para>Once registered, an instance is constructed and the cleanup method is called after leaving the event processing thread.</para></sect3><sect3><title>The org.zkoss.zk.ui.event.EventThreadSuspend interface</title>
      <para>It is implemented by a listener class that will be called before an event processing thread is going to be suspended.</para>
      <para>If a listener implements this interface, an instance is created, and then the beforeSuspend method, when an event processing thread is going to suspended. It executes in the event processing thread.</para>
      <para>A developer can prevent can prevent an event processing thread from being suspended by throwing an exception.</para>
      <para>A typical use of this feature is to limit the number of suspended threads.</para></sect3><sect3><title>The org.zkoss.zk.ui.event.EventThreadResume interface</title>
      <para>It is implemented by a listener class that will be called after an event processing thread is resumed or aborted.</para>
      <para>If a listener implements this interface, an instance is created, and then the beforeResume method is called in the main thread (aka., the servlet thread), when a suspended event thread is being resumed. Then, the afterResume method is called in the event processing thread after the thread is resumed successfully.</para>
      <para>If a developer wants to prevent an event from being resumed, he can throw an exception in the beforeResume method.</para>
      <para>Notice that beforeResume executes in the main thread, so it shares the same thread-local storage with the main thread. On the other hand, afterResume executes in the event processing thread, so it shares the same thread-local storage with the event thread (and application event listeners).</para>
      <para>In additions to resuming normally, a suspended event processing thread might be aborted abnormally. For example, when the desktop is being destroyed, all suspended event threads will be aborted. When the suspended event processing thread is aborted, an instance is created, and the abortResume method is called in the main thread.</para>
      <para>Note: If a suspended event thread is aborted, none of the beforeResume and afterResume is called. Moreover, the cleanup and complete methods of EventThreadCleanup won't be called, either. Thus, you have to handle all necessary cleanups in abortResume.</para></sect3><sect3><title>The org.zkoss.zk.ui.util.EventInterceptor interface</title>
      <para>It is implemented by a listener class that will be used to intercept when an event is sent, posted and processed.</para>
      <para>Once registered, an instance is created and shared within the whole application. If you want to intercept events only for a particular desktop, use the addEventInterceptor method of the org.zkoss.zk.ui.Desktop interface.</para></sect3><sect3><title>The org.zkoss.zk.ui.util.WebAppInit interface</title>
      <para>It is implemented by a listener class that will be used to initialize a ZK application.</para>
      <para>When a ZK application is created, it invokes the init method of this interface such that developers could plug the application-specific codes to initialize the application.</para></sect3><sect3><title>The org.zkoss.zk.ui.util.WebAppCleanup interface</title>
      <para>It is implemented by a listener class that will be used to cleanup a ZK application that is being destroyed.</para>
      <para>When a ZK application is going to be destroyed, it invokes the cleanup method of this interface such that developers could plug the application-specific codes to cleanup the application.</para></sect3><sect3><title>The org.zkoss.zk.ui.util.SessionInit interface</title>
      <para>It is implemented by a listener class that will be used to initialize a new session.</para>
      <para>When ZK Loader created a new session, it invokes the init method of this interface such that developers could plug the application-specific codes to initialize a session.</para>
      <para>A developer can prevent a session from being created by throwing an exception in the init method.</para></sect3><sect3><title>The org.zkoss.zk.ui.util.SessionCleanup interface</title>
      <para>It is implemented by a listener class that will be used to cleanup a session that is being destroyed.</para>
      <para>When ZK Loader is going to destroy a session, it invokes the cleanup method of this interface such that developers could plug the application-specific codes to cleanup a session.</para></sect3><sect3><title>The org.zkoss.zk.ui.util.DesktopInit interface</title>
      <para>It is implemented by a listener class that will be used to initialize a new desktop.</para>
      <para>When ZK Loader created a new desktop, it invokes the init method of this interface such that developers could plug the application-specific codes to initialize a desktop.</para>
      <para>A developer can prevent a desktop from being created by throwing an exception in the init method.</para></sect3><sect3><title>The org.zkoss.zk.ui.util.DesktopCleanup interface</title>
      <para>It is implemented by a listener class that will be used to cleanup a desktop that is being destroyed.</para>
      <para>When ZK Loader is going to destroy a desktop, it invokes the cleanup method of this interface such that developers could plug the application-specific codes to cleanup a desktop.</para></sect3><sect3><title>The org.zkoss.zk.ui.util.ExecutionInit interface</title>
      <para>It is implemented by a listener class that will be used to initialize a new execution.</para>
      <para>When ZK Loader and Update Engine created a new execution, it invokes the init method of this interface such that developers could plug the application-specific codes to initialize an execution.</para>
      <para>Tip: Executions might be stacked. To know whether it is the first execution since a (Servlet) request is processed, you can check whether the parent argument is null.</para>
      <para>A developer can prevent an execution from being created by throwing an exception in the init method.</para></sect3><sect3><title>The org.zkoss.zk.ui.util.ExecutionCleanup interface</title>
      <para>It is implemented by a listener class that will be used to cleanup an execution that is being destroyed.</para>
      <para>When ZK Loader is going to destroy an execution, it invokes the cleanup method of this interface such that developers could plug the application-specific codes to cleanup an execution.</para></sect3><sect3><title>The org.zkoss.zk.ui.util.URIInterceptor interface</title>
      <para>It is implemented by a listener class that will be used to intercept the retrieving of ZUML pages with the associated URI. Once registered, an instance of the specified class is created and shared within the whole application. Then, the request method is invoked, each time the application wants to retrieve the page definition of a page based on an URI.</para>
      <para>A typical use of this interface is to ensure the current user has the authority to access the certain URI.</para>
      <para>You can register any number of URI interceptors (URIInterceptor).</para>
      <para>Note:</para>
      <orderedlist>
         <listitem>
            <para>Unlike ExecutionInit and many other listeners, an instance of the registered URIInterceptor is created at the time of registration, and then it is shared by the whole application. Thus, you have to make sure it can be accessed concurrently.</para>
         </listitem>
      </orderedlist></sect3><sect3><title>The org.zkoss.zk.ui.util.RequestInterceptor interface</title>
      <para>It is implemented by a listener class that will be used to intercept each request made to ZK Loader and ZK Update Engine. Once registered, an instance of the specified class is created and shared within the whole application. Then, the request method is invoked, each time a request is received by ZK Loader or ZK Update Engine.</para>
      <para>A typical use of this interface is to determine the locale and/or time zone of the request. Refer to the Developer's Guide for more information.</para>
      <para>You can register any number of the request interceptors (RequestInterceptor).</para>
      <para>Note:</para>
      <orderedlist>
         <listitem>
            <para>Unlike ExecutionInit and many other listeners, an instance of the registered RequestInterceptor is created at the time of registration, and then it is shared by the whole application. Thus, you have to make sure it can be accessed concurrently.</para>
         </listitem>
         <listitem>
            <para>The request parameters will be parsed with the proper locale and character encoding, after the request method is called. It is not recommended to call the getParameter or getParameterValues methods (of javax.servlet.ServletRequest) in this method.</para>
         </listitem>
      </orderedlist></sect3><sect3><title>The org.zkoss.zk.ui.util.UiLifeCycle interface</title>
      <para>It is implemented by a listener class that will be used to handle something dependin on the life cycle of UI, such as attaching a component to a page, moving a component and so on. Once registered, an instance of the specified class is created and shared within the whole application.</para></sect3><sect3><title>The org.zkoss.zk.ui.util.PerformanceMeter interface</title>
      <para>It is implemented by a listener that will measure the performance. Unlike other listeners, there is at most one performance meter listener for each Web application. If you like, you can chain them together manually.</para></sect3><sect3><title>The org.zkoss.zk.ui.util.Monitor interface</title>
      <para>It is implemented by a listener that will be used to monitor the statuses of ZK. Unlike other listener, there is at most one monitor listener for each Web application. If you like, you can chain them together manually.</para>
      <para>ZK provides an implementation named org.zkoss.zk.ui.util.Statistic, which accumulates the statistic data in the memory. It is a good starting point to understand the load of your ZK application.</para></sect3></sect2><sect2><title>The log Element</title>
      <para>By default, ZK's logger depends on how the Web server is configured. However, you could configure ZK to load and monitor i3-log.conf as described in the Logger section of the Beyond ZK chapter.</para>
      <programlisting>&lt;log&gt;&#xD;    &lt;log-base&gt;org.zkoss&lt;/log-base&gt;    &#xD;&lt;/log&gt;&#xD;</programlisting>
      <para>If you want to use the same logging mechanism in your application, you could configure ZK to handle all loggers as follows.</para>
      <programlisting>&lt;log&gt;&#xD;    &lt;log-base&gt;&lt;/log-base&gt;    &#xD;&lt;/log&gt;&#xD;</programlisting>
      <para>where an empty string means all packages, not just org.zkoss in the previous example.</para></sect2><sect2><title>The client-config Element</title>
      <para>It is used to customize the behavior of the ZK Client Engine. You might have multiple client-config elements in one zk.xml.</para>
      <programlisting>&lt;client-config&gt;&#xD;    &lt;debug-js&gt;false&lt;/debug-js&gt;    &#xD;    &lt;disable-behind-modal&gt;false&lt;/disable-behind-modal&gt;    &#xD;    &lt;error-reload&gt;    &#xD;        &lt;error-code&gt;301&lt;/error-code&gt;        &#xD;        &lt;reload-uri&gt;&lt;/reload-uri&gt;        &#xD;    &lt;/error-reload&gt;    &#xD;    &lt;keep-across-visits&gt;true&lt;/keep-across-visits&gt;    &#xD;    &lt;processing-prompt-delay&gt;900&lt;/processing-prompt-delay&gt;    &#xD;    &lt;tooltip-delay&gt;800&lt;/tooltip-delay&gt;    &#xD;    &lt;resend-delay&gt;9000&lt;/resend-delay&gt;    &#xD;&lt;/client-config&gt;&#xD;</programlisting><sect3><title>The debug-js Element</title>
      <para>[Default: false]</para>
      <para>It specifies whether to debug JavaScript files. By default, it is false and the compressed version of JavaScript files will be loaded. They are hard to read and debug, though the footprint is much smaller.</para>
      <para>To debug JavaScript files, you can specify it to true. Then, the original uncompressed JavaScript files will be loaded instead.</para></sect3><sect3><title>The disable-behind-modal Element</title>
      <para>[Default: false]</para>
      <para>It specifies whether to disable all elements behind the modal window at the browser. If disabled, the performance is better. </para>
      <para>Tip: This option can be considered as obsolete since 3.0.4. The user is almost impossible to change focus to an element behind the modal window, without disabling them.</para>
      <para>Note: in ZK 3.0.3 and earlier, the option is default to true.</para></sect3><sect3><title>The error-reload Element</title>
      <para>[Default: reload if 301, 402 or 403; show an error message, otherwise]</para>
      <para>It specifies what URI to redirect the browser to. For example, if you prefer to redirect to the login page, say, login.zul, you can specify the following in zk.xml:</para>
      <programlisting>&lt;error-reload&gt;&#xD;    &lt;error-code&gt;301&lt;/error-code&gt;    &#xD;    &lt;reload-uri&gt;/login.zul&lt;/reload-uri&gt;    &#xD;&lt;/error-reload&gt;&#xD;&lt;error-reload&gt;&#xD;    &lt;error-code&gt;402&lt;/error-code&gt;    &#xD;    &lt;reload-uri&gt;/login.zul&lt;/reload-uri&gt;    &#xD;&lt;/error-reload&gt;&#xD;&lt;error-reload&gt;&#xD;    &lt;error-code&gt;403&lt;/error-code&gt;    &#xD;    &lt;reload-uri&gt;/login.zul&lt;/reload-uri&gt;    &#xD;&lt;/error-reload&gt;&#xD;</programlisting>
      <para>If the content of reload-uri is empty, the browser simply reloads the same page again.</para>
      <programlisting>&lt;reload-uri&gt;&lt;/reload-uri&gt;&#xD;</programlisting>
      <para>If you want to show an error message instead, specify false.</para>
      <programlisting>&lt;reload-uri&gt;false&lt;/reload-uri&gt;&#xD;</programlisting></sect3><sect3><title>The keep-across-visits Element</title>
      <para>[Default: false]</para>
      <para>It specifies whether to keep the desktop when a user reloads an URL or browses away to another URL. Since browsers won't cache HTML pages generated by ZK, ZK removes a desktop as soon as the user reloads the URL or browses to another URL.</para>
      <para>However, you have to specify keep-across-visits with true, if you use the server-side cache for the HTML pages generated by ZK. An example of the server side cache is OpenSymphony CacheFilter<footnote>
            <para>
               <ulink url="http://www.opensymphony.com/oscache/wiki/CacheFilter.html">http://www.opensymphony.com/oscache/wiki/CacheFilter.html</ulink>  </para>
         </footnote>.</para>
      <programlisting>&lt;client-config&gt;&#xD;    &lt;keep-across-visits&gt;true&lt;/keep-across-visits&gt;    &#xD;&lt;/client-config&gt;&#xD;</programlisting>
      <para>Note: When working with Opera, ZK always keeps the desktop (until the number of desktops exceed the allowed maximal number), since Opera is smart enough to preserve the most updated content and always reuses the cached page.</para></sect3><sect3><title>The processing-prompt-delay Element</title>
      <para>[Default: 900]</para>
      <para>It specifies the time, in milliseconds, to wait before prompting the user with a dialog indicating that the request is in processing.</para></sect3><sect3><title>The resend-delay Element</title>
      <para>[Default: 9000 if Enterprise Edition<footnote>
            <para>More precisely, 9000 if zkmax.jar is installed.</para>
         </footnote>, -1 otherwise]</para>
      <para>It specifies the time, in milliseconds, to wait before resending the AU requests to the server. There are many reasons an AU request is not received by the server. For example, the server may drop the connection if it is overloaded. To ensure the reliability, ZK will abort the previous request and then resend the request, if the specified delay expires.</para>
      <para>Since 3.0.3, you can specify a non-positive number to disable the resend mechanism.</para></sect3><sect3><title>The tooltip-delay Element</title>
      <para>[Default: 800]</para>
      <para>It specifies the time, in milliseconds, to wait before popping up the tooltip when the user moves the mouse pointer over particular UI components.</para></sect3></sect2><sect2><title>The desktop-config Element</title>
      <para>It is used to customize how ZK handles desktops. You might have multiple desktop-config elements in one zk.xml.</para>
      <programlisting>&lt;desktop-config&gt;&#xD;    &lt;desktop-timeout&gt;3600&lt;/desktop-timeout&gt;    &#xD;    &lt;disable-theme-uri&gt;~./zul/css/norm*.css.dsp*&lt;/disable-theme-uri&gt;    &#xD;    &lt;file-check-period&gt;5&lt;/file-check-period&gt;    &#xD;    &lt;extendlet-check-period&gt;10&lt;/extendlet-check-period&gt;    &#xD;    &lt;theme-uri&gt;/my/blue**.css&lt;/theme-uri&gt;    &#xD;    &lt;theme-provider-class&gt;my.MyThemeProvider&lt;/theme-provider-class&gt;    &#xD;&lt;/desktop-config&gt;&#xD;</programlisting><sect3><title>The desktop-timeout Element</title>
      <para>[Default: 3600]</para>
      <para>It specifies the time, in seconds, between client requests before a desktop is invalidated. A negative time indicates the desktop should never timeout.</para></sect3><sect3><title>The disable-theme-uri Element</title>
      <para>[Default: none]</para>
      <para>It specifies what theme URI to be disabled. The theme URI shall be one of the default theme URI. For example, the following statement disables the generation of the default theme URI for the ZK XUL component set.</para>
      <programlisting>&lt;desktop-config&gt;&#xD;    &lt;disable-theme-uri&gt;~./zul/css/norm*.css.dsp*&lt;/disable-theme-uri&gt;    &#xD;&lt;/desktop-config&gt;&#xD;</programlisting>
      <para>It is usually used with the theme-uri element to replace the default theme. Refer to the Themes section of the Internationalization chapter in the Developer's Guide for details.</para></sect3><sect3><title>The extendlet-check-period Element</title>
      <para>[Default: -1 (never expired)]</para>
      <para>It specifies the time, in seconds, to wait before checking whether a resource loaded by an extendlet is modified. An extendlet is a processor to load the resources usually located in classpath, such as ~./zul/desktop.dsp.</para>
      <para>Resources located in classpath are usually packed as a JAR file, so they are immutable and not need to check if modified. However, in a development environment, you might want to check if they are deployed without reloading the JAR files.</para></sect3><sect3><title>The file-check-period Element</title>
      <para>[Default: 5]</para>
      <para>It specifies the time, in seconds, to wait before checking whether a file is modified.</para>
      <para>For better performance, ZK has employed a cache to store parsed ZUML file. The time specified here controls how often ZK checks whether a file is modified. The larger the number the better the performance. </para></sect3><sect3><title>The theme-uri Element</title>
      <para>[Default: none]</para>
      <para>It specifies the URI of an addition theme (aka., a style sheet file).</para>
      <para>Like other URI, it accepts "*" for loading browser and Locale dependent style sheet. Refer to the Browser and Locale Dependent URI section in the Internationalization chapter for details.</para>
      <para>You can specify any number of them-uri as follows.</para>
      <programlisting>&lt;desktop-config&gt;&#xD;    &lt;theme-uri&gt;/my/blue**.css&lt;/theme-uri&gt;    &#xD;    &lt;theme-uri&gt;/my/second.css&lt;/theme-uri&gt;    &#xD;&lt;/desktop-config&gt;&#xD;</programlisting>
      <para>If you want to replace a default theme, you have to use theme-uri with disable-theme-uri. Refer to the Themes section of the Internationalization chapter in the Developer's Guide for details.</para>
      <para>Notice:</para>
      <orderedlist>
         <listitem>
            <para>All style sheets defined in lang.xml and lang-addon.xml are loaded, no matter this parameter is defined or not. It is convenient for developers to override certain styles.</para>
         </listitem>
         <listitem>
            <para>Each JAR could specify a lang-addon.xml file (under the metainfo/zk directory), so you could specify style sheets there if you have more than one style sheets.</para>
         </listitem>
         <listitem>
            <para>You could specify extra CSS files for individual ZUML pages by use of the style component. Refer to the ZUML with the XUL Component Set chapter.</para>
         </listitem>
      </orderedlist></sect3><sect3><title>The theme-provider-class Element</title>
      <para>[Default: none]</para>
      <para>It specifies the class to provide the theme (aka., a style sheet file) URI dynamically. If you want to determine the theme based on the current user, cookie or locale. You can implement a class with the org.zkoss.zk.ui.util.ThemeProvider interface, and specify it with the theme-provider-class element. Then, an instance of the class will be created, and it is called each time a desktop is rendered to the client to determine the theme URI.</para>
      <para>Notice that the theme provider is called with all theme URIs that shall be generated (including what are specified in theme-uri and excluding what are specified in disable-theme-uri). And, only the return collection of URIs are actually generated. In other words, the theme provider has the highest priority.</para></sect3></sect2><sect2><title>The xel-config Element</title>
      <para>The allowed child elements include evaluator-class. At most one xel-config element is allowed for each zk.xml.</para>
      <programlisting>&lt;xel-config&gt;&#xD;    &lt;evaluator-class&gt;my.MyExpressionFactory&lt;/evaluator-class&gt;    &#xD;&lt;/xel-config&gt;&#xD;</programlisting><sect3><title>The evaluator-class Element</title>
      <para>[Default: org.zkoss.xel.el.ELFactory]</para>
      <para>It specifies the class used to evaluate XEL (Extensible Expression Language) expressions. The specified class must implement the org.zkoss.xel.ExpressionFactory interface.</para>
      <para>If not specified, ZK uses the XEL implementation from ZK Commons EL (zcommons-el.jar), which is a performance-enhanced version of Apache Commons EL.</para>
      <para>If your Web server uses another implementation, you can do one of the following:</para>
      <orderedlist>
         <listitem>
            <para>If you prefer the implementation based on Apache JSP 2.1 EL, you have to specify the org.zkoss.xel.el21.ApacheELFactory class. If the Web server doesn't support Apache JSP 2.1 EL, you have to copy el-api.jar (JSP 2.1 API<footnote>
                  <para>Required only if you are using the Web server that supports only JSP 2.0.</para>
               </footnote>) and jasper-el.jar (Apache's implementation) to your Web application.</para>
         </listitem>
         <listitem>
            <para>If you prefer the implementation based on Apache Commons EL (JSP 2.0 EL), you have to specify the or.zkoss.xel.el.ApacheELFactory class. If the Web server doesn't support Apache Commons EL, you have to copy commons-el.jar to your Web application.</para>
         </listitem>
         <listitem>
            <para>If you want a different implementation, you can extend from org.zkoss.xel.el.ELFactory or org.zkoss.xel.el21.ApacheELFactory by simply overriding the newExpressionEvaluator method. Of course, if you prefer, you can implement the org.zkoss.xel.ExpressionFactory interface directly.</para>
         </listitem>
      </orderedlist></sect3></sect2><sect2><title>The language-config Element</title>
      <para>The allowed child elements include addon-uri. You might have multiple language-config elements in one zk.xml.</para>
      <programlisting>&lt;language-config&gt;&#xD;    &lt;addon-uri&gt;/WEB-INF/lang-addon.xml&lt;/addon-uri&gt;    &#xD;    &lt;addon-uri&gt;/WEB-INF/lang-addon2.xml&lt;/addon-uri&gt;    &#xD;&lt;/language-config&gt;&#xD;</programlisting>
      <para>Note: Unlike most other configurations defined in WEB-INF/zk.xml, the definitions defined in language addons are applied to all Web applications sharing the same zk.jar.</para>
      <para>In other words, the definitions in language addons are visible to all Web applications sharing the same zk.jar. Furthermore, it may cause errors in another Web application, if the classes or resources are available only in the Web application defining this.</para>
      <para>Thus, if it is an issue, just put zk.jar and relevant ZK libraries under the WEB-INF/lib directory.</para><sect3><title>The addon-uri Element</title>
      <para>[Default: none]</para>
      <para>It specifies the URI of language add-on definitions. To specify more than one URIs, you have to define them with multiple addon-uri.</para>
      <para>A language addon is used to add new components and override the definitions of existent components. Refer to the Component Development Guide.</para></sect3></sect2><sect2><title>The session-config Element</title>
      <para>The allowed child elements include session-timeout and max-desktops-per-session. You might have multiple session-config elements in one zk.xml.</para>
      <programlisting>&lt;session-config&gt;&#xD;    &lt;session-timeout&gt;1800&lt;/session-timeout&gt;    &#xD;    &lt;timer-keep-alive&gt;false&lt;/timer-keep-alive&gt;    &#xD;    &lt;max-desktops-per-session&gt;15&lt;/max-desktops-per-session&gt;    &#xD;    &lt;max-requests-per-session&gt;5&lt;/max-requests-per-session&gt;    &#xD;&lt;/session-config&gt;&#xD;</programlisting><sect3><title>The session-timeout Element</title>
      <para>[Default: 0 (depending on the Web server)]</para>
      <para>It specifies the time, in seconds, between client requests before a session is invalidated. A negative time indicates the session should never timeout. The default zero means to use the system default (which is usually specified in web.xml).</para></sect3><sect3><title>The timer-keep-alive Element</title>
      <para>[Default: false]</para>
      <para>It specifies whether to keep the session alive, when receiving the onTimer event.</para>
      <para>A session is considered as timeout (and then invalidated), if it doesn't receive any client request in the specified timeout interval (see the session-timeout element above).</para>
      <para>By setting this option to true, the onTimer event, just like any other events, will reset the session timeout counter (and then keep the session alive until timeout). Notice that, if this option is false and the timer is shorter than the session timeout, the session won't be expired.</para>
      <para>By default, this option is false. It means the onTimer event is ignored when handling the session timeout. In other words, the session will expire if no other event is received before timeout.</para></sect3><sect3><title>The max-desktops-per-session Element</title>
      <para>[Default: 15]</para>
      <para>It specifies the maximal allowed number of desktops per session. A desktop represents a HTML page for a browser. In other words, this number controls the number of concurrent browser windows allowed per session.</para>
      <para>A negative number means no limitation at all.</para>
      <para>Note: If you use org.zkoss.zk.ui.impl.GlobalDesktopCacheProvider, then you have to make this number much larger since it means the maximal allowed number of deskoper per system.</para></sect3><sect3><title>The max-requests-per-session Element</title>
      <para>[Default: 5]</para>
      <para>It specifies the maximal allowed number of concurrent requests per session. Each time an user types an URL at the browser, it creates a request and the request ends after the response is sent to the browser. In other words, this number controls how many concurrent requests the same user can send.</para>
      <para>A negative number means no limitation at all, but it is not recommended due to the possibility of the denial-of-service (DoS) attacks.</para></sect3></sect2><sect2><title>The system-config Element</title>
      <para>You might have multiple system-config elements in one zk.xml.</para>
      <programlisting>&lt;system-config&gt;&#xD;    &lt;au-writer-class&gt;my.AuWriter&lt;/au-writer-class&gt;    &#xD;    &lt;cache-provider-class&gt;my.CacheProvider&lt;/cache-provider-class&gt;    &#xD;    &lt;disable-event-thread/&gt;    &#xD;    &lt;engine-class&gt;my.UiEngine&lt;/engine-class&gt;    &#xD;&lt;failover-manager-class&gt;my.FailoverManager&lt;/failover-manager-class&gt;&#xD;    &lt;id-generator-class&gt;my.IdGenerator&lt;/id-generator-class&gt;    &#xD;    &lt;max-spare-threads&gt;100&lt;/max-spare-threads&gt;    &#xD;    &lt;max-suspended-threads&gt;100&lt;/max-suspended-threads&gt;    &#xD;&lt;max-upload-size&gt;5120&lt;/max-upload-size&gt;&#xD;    &lt;max-process-time&gt;3000&lt;/max-process-time&gt;    &#xD;    &lt;response-charset&gt;UTF-8&lt;/response-charset&gt;    &#xD;    &lt;session-cache-class&gt;my.SessionCache&lt;/session-cache-class&gt;    &#xD;    &lt;upload-charset&gt;UTF-8&lt;/upload-charset&gt;    &#xD;    &lt;upload-charset-finder-class&gt;my.CharsetFinder&lt;/upload-charset-finder-class&gt;    &#xD;    &lt;ui-factory-class&gt;my.UiFactory&lt;/ui-factory-class&gt;    &#xD;    &lt;url-encoder-class&gt;my.URLEncoder&lt;/url-encoder-class&gt;    &#xD;    &lt;web-app-class&gt;my.WebApp&lt;/web-app-class&gt;    &#xD;&lt;/system-config&gt;&#xD;</programlisting><sect3><title>The au-writer-class Element</title>
      <para>[Default: org.zkoss.zk.au.http.HttpAuWriter for standard and professional editions, or org.zkoss.zkmax.au.http.SmartAuWriter for enterprise edition]</para>
      <para>It specifies which class used to implement the AU writer. The AU writer is used to generate the output and send it to the client. The class must have a default constructor (without any argument), and implement the org.zkoss.zk.au.AuWriter interface.</para>
      <para>There are two built-in implementations, HttpAuWriter and SmartAuWriter. The former one send the output the client after the requests are processed completely. On the other hand, the later one will send a partial output first if the processing is taking too long (half of the value specified in the resend-delay element). By sending the partial output, the client will know the server is still alive.</para></sect3><sect3><title>The cache-provider-class Element</title>
      <para>[Default: org.zkoss.zk.ui.impl.SessionDesktopCacheProvider]</para>
      <para>It specifies which class used to implement the desktop cache. The class must have a default constructor (without any argument), and implement the org.zkoss.zk.ui.sys.DesktopCacheProvider interface.</para>
      <para>One instance of the cache provider is created and shared for each Web application, so you have to synchronize the access properly.</para>
      <para>Available implementations are as follows.</para>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Class</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>org.zkoss.zk.ui.impl.SessionDesktopCacheProvider</para>
               </entry>
               <entry>
                  <para>It stores all desktops from the same session in one single cache. It is simple and fast, but not supporting clustering.</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>org.zkoss.zk.ui.impl.GlobalDesktopCacheProvider</para>
               </entry>
               <entry>
                  <para>It stores all desktops from the same Web application in one single cache. In other words, it doesn't count on session at all.</para>
                  <para>It is useful because some Web server, e.g, BEA WebLogic<footnote>
                        <para>
                           <ulink url="http://www.bea.com/">http://www.bea.com</ulink>
                        </para>
                     </footnote>, might be configured to use independent sessions for each request. </para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>The disable-event-thread Element</title>
      <para>[Default: false (enabled)]</para>
      <para>It specifies whether to disable the use of the event processing thread. If disabled, no event processing thread will be used at all. In other words, all events are processed in the Servlet thread directly.</para></sect3><sect3><title>The engine-class Element</title>
      <para>[Default: org.zkoss.zk.ui.impl.UiEngineImpl]</para>
      <para>It specifies which class used to implement the UI Engine. The class must have a default constructor (without any argument), and implement the org.zkoss.zk.ui.sys.UiEngine interface.</para>
      <para>One instance of the UI engine is created and shared for each Web application, so you have to synchronize the access properly.</para></sect3><sect3><title>The failover-manager-class Element</title>
      <para>[Default: none]</para>
      <para>It specifies which class used to handle the failover. It is called to recover a desktop, when ZK cannot locate a desktop. The class must have a default constructor (without any argument), and implement the org.zkoss.zk.ui.sys.FailoverManager interface.</para>
      <para>In most cases, you don't need to provide any implementation. Rather, you can let Web servers to handle failover and clustering for you by specifying the org.zkoss.zk.ui.http.SerializableUiFactory class in the ui-factory-class element as described above.</para></sect3><sect3><title>The id-generator-class Element</title>
      <para>[Default: none]</para>
      <para>It specifies which class used to generate UUID of page and components, and ID of desktops. The class must have a default constructor (without any argument), and implement the org.zkoss.zk.ui.sys.IdGenerator interface.</para>
      <para>One instance of the ID generator is created and shared for each Web application, so you have to synchronize the access properly.</para>
      <para>If no ID generator is specified, the default ID generation algorithm will be used.</para></sect3><sect3><title>The max-spare-threads Element</title>
      <para>[Default: 100]</para>
      <para>It specifies the maximal allowed number of the thread pool for queuing the idle event processing threads. ZK will reuse the idle event processing threads by keeping them in a thread pool. The number specified here then controls the maximal size of the pool. </para>
      <para>A negative value indicates there is no limit. Zero means no pool at all.</para></sect3><sect3><title>The max-suspended-threads Element</title>
      <para>[Default: -1 (no limit)]</para>
      <para>It specifies the maximal allowed number of the suspended event processing threads. A negative value indicates there is no limit at all.</para>
      <para>An instance of org.zkoss.zk.ui.TooManySuspendedException is thrown, if an event processing thread is going to suspend and the number of suspended threads exceeds the number specified here. You can use the error-page element to control how to display this error, or catch the exception and handle it in a different way.</para></sect3><sect3><title>The max-upload-size Element</title>
      <para>[Default: 5120]</para>
      <para>It specifies the maximal allowed size, in kilobytes, to upload a file from the client. A negative value indicates there is no limit.</para></sect3><sect3><title>The max-process-time Element</title>
      <para>[Default: 3000]</para>
      <para>It specifies the maximal allowed time to process events, in milliseconds. It must be positive. ZK will keep processing the requests sent from the client until all requests are processed, or the maximal allowed time expires.</para>
      <para>Note: Since 3.0.1, this setting has no obvious effect on Ajax devices. Ajax devices send the requests synchronously.</para></sect3><sect3><title>The response-charset Element</title>
      <para>[Default: UTF-8]</para>
      <para>It specifies the charset for the rendering result of a ZUML page. In other words, it is used to load the ZUML page by the ZK Loader (i.e., DHtmlLayoutServlet).</para>
      <para>If you want to use the container's default value, you can specify an empty string as follows.</para>
      <programlisting>&lt;response-charset&gt;&lt;/response-charset&gt;&#xD;</programlisting></sect3><sect3><title>The session-cache-class Element</title>
      <para>[Default: org.zkoss.zk.ui.http.SimpleSessionCache]</para>
      <para>It specifies the session cache used to store ZK sessions. It must implement the org.zkoss.zk.ui.sys.SessionCache interface.</para>
      <para>By default, org.zkoss.zk.ui.http.SimpleSessionCache is used and it stores the ZK session in an attribute of the native session (i.e., HttpSession or PortletSession).</para></sect3><sect3><title>The upload-charset Element</title>
      <para>[Default: UTF-8]</para>
      <para>It specifies the charset (aka., encoding) for the uploaded text files if no charset is specified with the content type.</para>
      <para>If the uploaded file is binary, there is no encoding issue at all.</para>
      <para>Note: the upload-charset-finder-class element, see blow, has the higher priority.</para></sect3><sect3><title>The upload-charset-finder-class Element</title>
      <para>[Default: null]</para>
      <para>It specifies the finder that determines charset (aka.., encoding) for the uploaded text files if no charset is specified with the content type.</para>
      <para>If the uploaded file is binary, there is no encoding issue at all.</para>
      <para>The finder must implement the org.zkoss.zk.ui.util.CharsetFinder interface. Then, when a text file is uploaded, the getCharset method is called and it can determines the encoding based on the content type and/or the content of the uploaded file.</para>
      <para>Note: it has the higher priority than the upload-charset element, see above.</para></sect3><sect3><title>The ui-factory-class Element</title>
      <para>[Default: org.zkoss.zk.ui.http.SimpleUiFactory]</para>
      <para>It specifies which class used to create desktops and pages, and to convert URL to a page definition. The class must have a default constructor (without any argument), and implement the org.zkoss.zk.ui.sys.UiFactory interface.</para>
      <para>One instance of the UI factory is created and shared for each Web application, so you have to synchronize the access properly.</para>
      <para>A common use is to load page definitions and other UI information from the database, rather than from the resources of the Web application.</para>
      <para>In addition, you might use it to implement a controller in a MVC model, such that it creates the correct desktop based on the request URL.</para>
      <para>Available implementations are as follows.</para>
      <informaltable frame="all">
         <tgroup cols="2">
            <thead>
               <row>
                  <entry>
                     <para>Class</para>
                  </entry>
                  <entry>
                     <para>Description</para>
                  </entry>
               </row>
            </thead><tbody><row>
               <entry>
                  <para>org.zkoss.zk.ui.http.SimpleUiFactory</para>
               </entry>
               <entry>
                  <para>The default UI factory. The sessions generated by this factory is not serializable</para>
               </entry>
            </row>
            <row>
               <entry>
                  <para>org.zkoss.zk.ui.http.SerializableUiFactory</para>
               </entry>
               <entry>
                  <para>The sessions generated by this factory is serializable. If you want to store sessions when the Web server is shutdown and restore them after it started, you can specify this implementation.</para>
               </entry>
            </row></tbody></tgroup>
      </informaltable></sect3><sect3><title>The url-encoder-class Element</title>
      <para>[Default: none]</para>
      <para>It specifies the URL encoder to post-process the URL before sending to the client. By default, the URI generated is in the following format. Sometimes<footnote>
            <para>For example, the session ID is appended if the browser disabled the cookie.</para>
         </footnote> it is appended with the session ID.</para>
      <programlisting>/context-path/related-uri&#xD;/zkdemo/zkau/web/img/spacer.gif&#xD;</programlisting>
      <para>In a sophisticated environment, you might want to modify a bit. Then, you can implement the org.zkoss.web.servlet.http.Encodes.URLEncoder interface, and specify it with the url-encoder-class element.</para>
      <para>Notice that, unlike most other configuration, the url-encoder-class element affects all applications that share the same ZK libraries.</para></sect3><sect3><title>The web-app-class Element</title>
      <para>[Default: org.zkoss.zk.ui.http.SimpleWebApp]</para>
      <para>It specifies which class used to implement the Web application. The class must have a default constructor (without any argument), and implement both the org.zkoss.zk.ui.WebApp and org.zkoss.zk.ui.sys.WebAppCtrl interfaces. Instead of implementing from scratch, you can extend it from the org.zkoss.zk.ui.impl.AbstractWebApp or org.zkoss.zk.ui.http.SimpleWebApp classes.</para></sect3></sect2><sect2><title>The zscript-config Element</title>
      <para>It configures the interpreters to interpret the zscript codes. The allowed child element is language-name and interpreter-class. You might have multiple zscript-config elements in one zk.xml.</para>
      <programlisting>&lt;zscript-config&gt;&#xD;    &lt;language-name&gt;Java&lt;/language-name&gt;&lt;!-- case insensitive --!&gt;    &#xD;    &lt;interpreter-class&gt;my.MySuperJavaInterpreter&lt;/interpreter-class&gt;    &#xD;&lt;/zscript-config&gt;&#xD;</programlisting>
      <para>Note: Unlike most other configurations defined in WEB-INF/zk.xml, the definitions defined in zscript-config are applied to all Web applications sharing the same zk.jar.</para>
      <para>In other words, the scripting language defined here are visible to all Web applications sharing the same zk.jar. Furthermore, it may cause errors in another Web application, if the classes or resources are available only in the Web application defining this.</para>
      <para>Thus, if it is an issue, just put zk.jar and relevant ZK libraries under the WEB-INF/lib directory.</para><sect3><title>The language-name Element</title>
      <para>[Required]</para>
      <para>It specifies the language name. It is case insensitive. The previous implementation with the same language name will be replaced if any.</para></sect3><sect3><title>The interpreter-class Element</title>
      <para>[Required]</para>
      <para>It specifies the implementation class. It must implement the org.zkoss.zk.scripting.Interpreter interface. Instead of implementing it from scratch, you can derive from the org.zkoss.zk.scripting.util.GenericInterpreter class. If you want to support the hierarchical scopes (i.e., one interpreter scope per namespace), it can also implement the org.zkoss.zk.scripting.HierachicalAware interface.</para></sect3></sect2><sect2><title>The device-config Element</title>
      <para>It specifies a device. A device represents a client. Different clients have different implementation. Currently there are two types: ajax and mil. They represents the Web browsers with Ajax, and the mobile device with Mobile Interactive Language<footnote>
            <para>MIL is a ZK markup language used to communicate with the mobile devices.</para>
         </footnote>. It is used to create an instance returned by the getDevice method of the Desktop intereface.</para>
      <para>The allowed child element is device-type , device-class, timeout-uri, and unavailable-message. You might have multiple device-config elements in one zk.xml.</para>
      <programlisting>&lt;device-config&gt;&lt;device-type&gt;ajax&lt;/device-type&gt;&lt;device-class&gt;my.MyAjaxDevice&lt;/device-class&gt;        &#xD;    &lt;timeout-uri&gt;/my-timeout.zul&lt;/timeout-uri&gt;    &#xD;    &lt;server-push-class&gt;my.ServerPush&lt;/server-push-class&gt;    &#xD;            &lt;unavailable-message&gt;&lt;![CDATA[&lt;p style="color:red"&gt;Sorry, JavaScript must be enabled in order for you to use KillApp.&lt;/p&gt;]]&gt;&lt;/unavailable-message&gt;&lt;embed&gt;&lt;![CDATA[            &#xD;&lt;script type="text/javascript"&gt;&#xD;    AU_progressbar = function (id, msg) {    &#xD;        Boot_progressbox(id, msg, 0, 0, true, true);        &#xD;    };    &#xD;&lt;/script&gt;&#xD;    ]]&gt;&lt;/embed&gt;&lt;/device-config&gt;    &#xD;</programlisting>
      <para>Note: Unlike most other configurations defined in WEB-INF/zk.xml, the definitions defined in device-config are applied to all Web applications sharing the same zk.jar. Refer to the zscript-config element for more information.</para><sect3><title>The device-class Element</title>
      <para>[Optional]</para>
      <para>It specifies the implementation class. The class must implement the org.zkoss.zk.device.Device interface. Instead of implementing it from scratch, you can derive from the proper implementation, such as AjaxDevice and MilDevice.</para></sect3><sect3><title>The device-type Element</title>
      <para>[Required]</para>
      <para>It specifies the device type. The previous implementation with the same device type will be replaced if any.</para></sect3><sect3><title>The embed Element</title>
      <para>[Optional][Multiple]</para>
      <para>It specifies the content that shall be added to the output generated and sent to the client when rendering a desktop. The syntax of the content depends on the client. For Ajax clients, it can be any tags that can be placed inside HTML HEAD tag, such as SCRIPT, META and others.</para>
      <para>For example, if you want to show the progress bar in the center of the browser window, you can specify the following in zk.xml.</para>
      <programlisting>&lt;device-config&gt;&#xD;    &lt;device-type&gt;ajax&lt;/device-type&gt;    &#xD;    &lt;embed&gt;&lt;![CDATA[    &#xD;&lt;script type="text/javascript"&gt;&#xD;    AU_progressbar = function (id, msg) {    &#xD;        Boot_progressbox(id, msg, 0, 0, true, true);        &#xD;    };    &#xD;&lt;/script&gt;&#xD;    ]]&gt;&lt;/embed&gt;    &#xD;&lt;/device-config&gt;&#xD;</programlisting>
      <para>You can specify multiple embed elements and their content be concatenated together.</para></sect3><sect3><title>The server-push-class Element</title>
      <para>[Optional][Default: depends on device and what edition you use]</para>
      <para>It specifies which class used to implement the server-push feature. The class must have a default constructor (without any argument), and implement the org.zkoss.zk.ui.sys.ServerPush interface.</para>
      <programlisting>&lt;device-config&gt;&#xD;        &lt;device-type&gt;ajax&lt;/device-type&gt;&lt;server-push-class&gt;my.ServerPush&lt;/server-push-class&gt;        &#xD;&lt;/device-config&gt;&#xD;</programlisting></sect3><sect3><title>The timeout-uri Element</title>
      <para>[Optional][Default: null]</para>
      <para>It specifies the target URI that will be used to redirect users to, when the desktop no longer exists – it is usually caused by session timeout. If this element is omitted, an error message will be shown up at the browser to alert users for what happens.</para>
      <para>To reload the same URI again, you can specify an empty content as follows.</para>
      <programlisting>&lt;device-config&gt;&#xD;    &lt;device-type&gt;ajax&lt;/device-type&gt;    &#xD;    &lt;timeout-uri&gt;&lt;/timeout-uri&gt;    &#xD;&lt;/device-config&gt;&#xD;</programlisting></sect3><sect3><title>The unavailable-message Element</title>
      <para>[Optional][Default: depends on device]</para>
      <para>It specifies the message that will be displayed if the client doesn't support this device.</para></sect3></sect2><sect2><title>The error-page Element</title>
      <programlisting>&lt;error-page&gt;&#xD;    &lt;device-type&gt;[ajax|mil]&lt;/device-type&gt;    &#xD;    &lt;exception-type&gt;ClassName&lt;/exception-type&gt;    &#xD;    &lt;location&gt;the error page's URI&lt;/location&gt;    &#xD;&lt;/error-page&gt;&#xD;</programlisting>
      <para>It specifies an error page used when an un-caught exception is thrown in updating a ZUML page (e.g., in an event listener). Each page is associated with an exception type, aka, a class deriving from java.lang.Throwable. You can specify multiple error pages, each with a different exception type. When an error occurs, ZK searches the proper error page by examing the exception type one-by-one. If none is found, it shows, by default, an alert message at the client.</para>
      <para>The device-type element is optional. If omitted, ajax is assumed. If you want to specify an error page for mobile devices, it has to be mil.</para></sect2><sect2><title>The preference Element</title>
      <programlisting>&lt;preference&gt;&#xD;    &lt;name&gt;any name&lt;/name&gt;    &#xD;    &lt;value&gt;any value&lt;/value&gt;    &#xD;&lt;/preference&gt;&#xD;</programlisting>
      <para>Specify a preference with the preference element depicted above. The name and value are application specific and you can specify whatever value you like. Mupltie To avoid name conflict, it is suggested to prefix the name with your domain name, such as com.friend.some.another.</para>
      <para>The preferences are application-level. They are shared by a single ZK application (org.zkoss.zk.ui.WebApp).</para>
      <para>They can then be retrieved back by calling the getPreference method of the org.zkoss.zk.ui.util.Configuration class. Notice that each Web application has one configuration, which can be found by use of getConfiguration method of the org.zkoss.zk.ui.WebApp interface.</para>
      <programlisting>String value = webApp.getConfiguration().getPreference("org.zkoss.name", null);&#xD;if (value != null) {&#xD;    ...    &#xD;}&#xD;</programlisting></sect2><sect2><title>The library-property Element</title>
      <programlisting>&lt;library-property&gt;&#xD;    &lt;name&gt;any name&lt;/name&gt;    &#xD;    &lt;value&gt;any value&lt;/value&gt;    &#xD;&lt;/library-property&gt;&#xD;</programlisting>
      <para>Species a library-level property with the library-property element. The above example is equivalent to</para>
      <para>org.zkoss.lang.Library.setProperty("any name", "any value");</para>
      <para>The library properties are shared by all Java codes that use the same set of ZK libraries. If you installed ZK libraries in WEB-INF/ib of a ZK application, the library properties are shared only within the application.</para>
      <para>The library properties are easier to access than the preferences since they are static members (of org.zkoss.lang.Library). However, their scope depends on the installation.</para></sect2><sect2><title>The system-property Element</title>
      <programlisting>&lt;system-property&gt;&#xD;    &lt;name&gt;any name&lt;/name&gt;    &#xD;    &lt;value&gt;any value&lt;/value&gt;    &#xD;&lt;/system-property&gt;&#xD;</programlisting>
      <para>Specifies a system properties with the system-property element. The above example is equivalent to</para>
      <programlisting>System.setProperty("any name", "any value");&#xD;</programlisting>
      <para/></sect2></sect1></chapter>
</book>