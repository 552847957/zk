#!/usr/bin/perl
#zktest
#{{IS_NOTE
#    Purpose:
#            To test ZK project
#    Description:
#            'zktest help' for more descriptions
#    History:
#            Thu Mar 12 12:36:59 TST 2009, Created by Flyworld
#}}IS_NOTE
#
# Copyright (C) 2009 Potix Corporation. All Rights Reserved.
#
#{IS_RIGHT
#    This program is distributed under GPL Version 3.0 in the hope that
#    it will be useful, but WITHOUT ANY WARRANTY.
#}}IS_RIGHT
use strict;
use Switch;
use Shell qw(ant cat cygpath ie pwd);
my $i;
my $pattern;
my $flag;
my $openbw;
my $quiet;
my $config = "config.properties";
my @list;
my @tmp;
my @fnames;
my @tags;
if ( @ARGV > 4 ) {
  print cat "zktest.txt"."\n";
  exit;
} elsif ( @ARGV == "") {
  print cat "zktest.txt"."\n";
  exit;
}
#  get the file list
open CONFIG, $config or die "Open config.properties Faild: $!";
while (<CONFIG>) {
  push @list, $_ if ($_ !~ /^#/);
}
close CONFIG;
for (sort @list) {
  @tmp = split(/=/, $_);
  push @fnames, $tmp[0];
  push @tags, $tmp[1];
}
$#list = $#tmp = -1;
#finish init
while (@ARGV > 0 ) {
  switch (@ARGV[0]) {
    case /^-[Aa]$\|^--[Aa]ll$/ {
      $pattern=".Test\.java";      
    }
    case /^-[Bb]$\|^--[Bb]rowser$/ {
      $openbw = 1;
    }
    case /^-[Qq]$\|^--[Qq]uiet$/ {
      $quiet = 1;
    }
    case /^-[Tt]$\|^--[Tt]ag$/ {
      shift @ARGV;
      if ( @ARGV[0] =~ /,/) {
        &filterTag(@ARGV[0]);
      } else {  
        &joinTag(@ARGV[0]);
      }
      if ( $#list >= 0 ) {
        $i = $#list + 1;        
        if ( $quiet != 1 ) {
            print "Are you sure to test these $i case(s)? (Y/N)\n";
            chomp( $i = <STDIN>)   ;
        } 
        if ($i =~ /^y$/i || $quiet == 1 ) {
          $pattern=join '\\|' , @list;
        } else {
          print "Bye.\n";
          exit;
        }
      } else {
        print "No case found.\n";
      }
    }
    case /^-[Cc]$\|^--[Cc]ategory$/ {
      shift @ARGV;
      $pattern="^@ARGV[0]";      
    }
    case /^-[iI]$\|^--[iI]d$/ {
      shift @ARGV;
      $pattern=".@ARGV[0]."; 
    }
    case /^-[Hh]$\|^--[Hh]elp$/ {
      print cat "zktest.txt"."\n";
      exit;
    }
    case /^-[Rr]$\|^--[Rr]eport$/ {
      &runant("\" reports #");
      exit;
    }
    else {
      print "Unknown argument : @ARGV[0]\n";
      print "Try -h for help.\n";
      exit
    }
  };
  shift @ARGV;
}
if ( $pattern ne "") {
    &runant($pattern);
	if ( $openbw > 0 ) {
		my $temp1 ;
		my $temp2 ;
		$temp1 = pwd;
		$temp2 = `cygpath -d $temp1`;
		chomp($temp1 = $temp2);
		ie $temp1."\\report\\index.html";
	}
} else {
    print "Bye Bye~ \n";
}

#Subs
sub runant {
    print ant "-f testbuild.xml -Dpattern=\"@_\" junit reports\n";
}
sub fileid {
  my $a = shift;
  $a =~ s/.zul// ;
  $a = substr $a, 4;
  push @list, ".".$a.".";
}
sub filterTag {
  @tmp = split(/,/,lc(shift @_));  
  for( $i=0; $i <= $#tags; $i++) {
    my $flag = 0;
    foreach my $sel (@tmp) {
      foreach my $spliTag (split(/,/, lc($tags[$i]))) {
        $flag++, if ( lc($spliTag) =~ /^$sel$/);
      }
    }
    &fileid($fnames[$i]) ,  if ($flag >= ($#tmp + 1) );
  }
}
sub joinTag {
  @tmp = split(/ /,lc(shift @_));
  for( $i=0; $i <= $#tags; $i++) {
    foreach my $sel (@tmp) {
      foreach my $spliTag (split(/,/, lc($tags[$i]))) {
        &fileid($fnames[$i]) , if ( lc($spliTag) =~ /^$sel$/);
      }
    }
  }
}
