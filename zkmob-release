#!/bin/bash
# zkmob-release
#
#{{IS_NOTE
#	Purpose:
#		
#	Description:
#		
#	History:
#		Wed Jun 13 16:22:19     2007, Created by henrichen
#}}IS_NOTE
#
#Copyright (C) 2007 Potix Corporation. All Rights Reserved.
#
#{{IS_RIGHT
#}}IS_RIGHT
#
stamp=$(date +%Y-%m-%d)

target=$1

javadocdir=$(grep '^javadoc' build.setting.local)
javadocdir=${javadocdir#javadoc=}
if [ "$javadocdir" = "" ] ; then
	echo javadoc must be specified in $setting
	exit 1
fi
javadocdir=${javadocdir/\~/$HOME}

ver=$(grep '^zkmob-version=' build.setting.local)
ver=${ver#zkmob-version=}

#jar
if [ "$target" == "official" ] ; then
	binnm=zkmob-bin-$ver
	demonm=zkmob-demo-$ver
	javadocnm=zkmob-javadoc-$ver
	srcnm=zkmob-src-$ver
	echo "Release $binnm..."
elif [ "$target" == "" ] || [ "$target" == "daily" ] ; then
	target=daily

	binnm=zkmob-bin-$ver-$stamp
	demonm=zkmob-demo-$ver-$stamp
	javadocnm=zkmob-javadoc-$ver-$stamp
	srcnm=zkmob-src-$ver-$stamp
	docnm=zkmob-doc-$ver-$stamp
	echo "Release $binnm..."
else
	echo "Usage: release [ official | daily ]"
	echo Default: daily
	exit 1
fi

rm -rf /tmp/zkmob

#build *-all.war *-all.ear
if [ "$target" == "official" ]  ; then
	rm -rf dist/lib/zkmob-demo*.war dist/lib/zkmob-demos*.ear
	cp -f zkmob-demo/war.libs.all zkmob-demo/war.libs
	./build clean zkmob-demo zkmob-demos
	./build zkmob-demo zkmob-demos

	mv dist/lib/zkmob-demo.war dist/lib/zkmob-demo-all.war
	mv dist/lib/zkmob-demos.ear dist/lib/zkmob-demos-all.ear

	cp -f zkmob-demo/war.libs.minimal zkmob-demo/war.libs
	./build clean zkmob-demo zkmob-demos
	./build zkmob-demo zkmob-demos
fi

#Prepare the source codes
if [ "$target" == "official" ] || [ "$target" == "daily" ] ; then
	#mkdir -p /tmp/zkmob/$srcnm/dist/lib/ext
	mkdir -p /tmp/zkmob/$srcnm/bin
	mkdir -p /tmp/zkmob/$srcnm/client
	mkdir -p /tmp/zkmob/$srcnm/doc

	echo Prepare ${srcnm}.tar.gz
	cd $HOME/prj/zk1
	cp bin/* /tmp/zkmob/$srcnm/bin
	cp build* /tmp/zkmob/$srcnm
	cp -rp bin /tmp/zkmob/$srcnm
	cp -rp mil /tmp/zkmob/$srcnm
	cp -rp zkmob /tmp/zkmob/$srcnm
	cp zkdoc/COPYING zkdoc/zkmob-release-note /tmp/zkmob/$srcnm/doc

	cd /tmp/zkmob/$srcnm
	rm -rf mil/debug zkmob/debug
	#find -name CVS | xargs rm -rf
	find -name .svn | xargs rm -rf

	cd /tmp/zkmob
	echo Output ${srcnm}.tar.gz
	tar zcf ${srcnm}.tar.gz $srcnm

	#prepare *-sources.jar
	echo Prepare '*-sources.jar'
	mkdir -p src/mil
	mkdir -p src/zkmob

	cd $srcnm
	cp -rp mil/codegen/* mil/src/* ../src/mil
	cp -rp zkmob/codegen/* zkmob/src/* ../src/zkmob
	cd ..
	rm -rf $srcnm
	rm -rf src/*/archive src/*/export
	echo Output '*-sources.jar'
	cd src
	find -name 'package.html' | xargs rm -rf
	jar cfM mil-sources.jar -C mil .
	jar cfM zkmob-sources.jar -C zkmob .
	mv *-sources.jar ..
	cd ..
	rm -rf src
fi

#Prepare the binary release
if [ "$target" == "official" ] || [ "$target" == "daily" ] ; then
	mkdir -p /tmp/zkmob/$binnm/dist/lib
	mkdir -p /tmp/zkmob/$binnm/dist/WEB-INF/tld
	mkdir -p /tmp/zkmob/$binnm/dist/src
	mkdir -p /tmp/zkmob/$binnm/doc
	mkdir -p /tmp/zkmob/$binnm/client

	cd $HOME/prj/zk1
	mv -f /tmp/zkmob/*-sources.jar /tmp/zkmob/$binnm/dist/src

	cp dist/lib/mil.jar /tmp/zkmob/$binnm/dist/lib/

	cp zkdoc/zkmob-release-note zkdoc/COPYING /tmp/zkmob/$binnm/doc
	cp -rp zkmob/deployed/zkmob.jar zkmob/deployed/zkmob.jad zkmob/zkmob.html /tmp/zkmob/$binnm/client

	cd /tmp/zkmob/$binnm/dist/WEB-INF/tld
	find -name .svn | xargs rm -rf

	cd /tmp/zkmob

	if [ "$target" == "official" ] ; then
		echo Output ${binnm}.tar.gz
		tar zcf ${binnm}.tar.gz $binnm
	fi

	echo Output ${binnm}.zip
	zip -qr9 ${binnm}.zip $binnm

	if [ "$target" == "official" ] ; then
		#Prepare maven repository
		function mvnrepo {
			mkdir -p $1
			mv /tmp/zkmob/$binnm/dist/src/$1-sources.jar $1/$1-$ver-sources.jar
			sed -e "s/{version}/$ver/" $HOME/prj/zk1/$1/pom.xml > $1/pom.xml
			cp $HOME/prj/zk1/dist/lib/$1.jar $1/$1-$ver.jar
			jar cfM $1-$ver-bundle.jar -C $1 .
		}
		mkdir -p maven
		mkdir -p /tmp/maven
		cd maven
		mvnrepo mil
		mvnrepo zkmob
		mv *-bundle.jar /tmp/maven
		cd ..
		rm -rf maven
	fi
	rm -rf $binnm

	#Prepare the java doc
	cd $javadocdir

	echo Output ${javadocnm}.zip
	zip -qr9 ${javadocnm}.zip mil zkmob
	mv ${javadocnm}.zip /tmp/zkmob
fi
if [ "$target" == "official" ] || [ "$target" == "daily" ] ; then
	mkdir -p /tmp/zkmob/$demonm/zkmob-demo/WebContent
	mkdir -p /tmp/zkmob/$demonm/zkmob-demo/src/org
	mkdir -p /tmp/zkmob/$demonm/MyMobileApp/WebContent
	mkdir -p /tmp/zkmob/$demonm/doc

	cd $HOME/prj/zk1

	cp -rp zkmob-demo/src/archive/* /tmp/zkmob/$demonm/zkmob-demo/WebContent
	cp -rp zkmob-demo/codegen/archive/* /tmp/zkmob/$demonm/zkmob-demo/WebContent
	cp -rp zkmob/deployed/zkmob.jar zkmob/deployed/zkmob.jad zkmob/zkmob.html /tmp/zkmob/$demonm/zkmob-demo/WebContent
	cp -rp zkmob-demo/src/org/* /tmp/zkmob/$demonm/zkmob-demo/src/org
	cp -rp MyMobileApp/src/archive/* /tmp/zkmob/$demonm/MyMobileApp/WebContent
	cp -rp zkmob/deployed/zkmob.jar zkmob/deployed/zkmob.jad zkmob/zkmob.html /tmp/zkmob/$demonm/MyMobileApp/WebContent
	cp zkdoc/COPYING zkdoc/zkmob-release-note /tmp/zkmob/$demonm/doc
	cp -rp dist/lib/zkmob-demos.ear dist/lib/zkmob-demo.war /tmp/zkmob/$demonm

	if [ "$target" == "official" ] ; then
		mv dist/lib/zkmob-demos-all.ear dist/lib/zkmob-demo-all.war /tmp/zkmob/$demonm
	fi

	cd /tmp/zkmob
	#find -name CVS | xargs rm -rf
	find -name .svn | xargs rm -rf

	echo Output ${demonm}.zip
	zip -qr9 ${demonm}.zip $demonm
	rm -rf $demonm
fi

#Prepare the doc
if [ "$target" == "official" ]; then
	mkdir -p /tmp/zkmob/doc

	cd $HOME/prj/zk1/zkdoc/zkmob-quickstart
	for f in ZKMobile*.pdf ; do  
		cp $f /tmp/zkmob/doc/${f%.pdf}-$ver.pdf
	done
elif [ "$target" == "daily" ]; then
	mkdir -p /tmp/zkmob/$docnm

	cd $HOME/prj/zk1
	cp zkdoc/ZKMobile*.pdf zkdoc/zkmob-release-note zkdoc/COPYING /tmp/zkmob/$docnm
	cd /tmp/zkmob

	echo Ouput ${docnm}.zip
	zip -qr9 ${docnm}.zip $docnm
	rm -rf $docnm
fi
