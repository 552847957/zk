/* au.js

{{IS_NOTE
	Purpose:
		ZK Client Engine
	Description:
		
	History:
		Mon Sep 29 17:17:37     2008, Created by tomyeh
}}IS_NOTE

Copyright (C) 2008 Potix Corporation. All Rights Reserved.

{{IS_RIGHT
}}IS_RIGHT
*/
var _zws = []; //used to load widget
zkau = { //static methods
	/** Begins the creation of a widget that is generated by the server.
	 */
	begin: function (type, uuid, mold, props, embedAs) {
		if (embedAs) {
			var embed = zkDOM.$(uuid).firstChild;
			if (embed && zkDOM.$(embed) == "SPAN")
				props[embedAs] = embed.innerHTML;
			else if (zk.debugJS)
				throw "No embedAs, "+embedAs;
		}

		var wgt = new (zk.$import(type))(uuid, mold);
		wgt.inServer = true;
		if (_zws.length)
			_zws[0].appendChild(wgt);
		_zws.unshift(wgt);

		for (var p in props) {
			var m = wgt['set' + p.charAt(0).toUpperCase() + p.substring(1)];
			if (m) m(props[p]);
			else wgt[p] = props[p];
		}
	},
	/** Ends the creation of a widget. */
	end: function () {
		var wgt = _zws.shift();
		if (!_zws.length) wgt.attach(wgt.uuid);
	},
	/** Begins the creation of a page that is generated by the server.
	 *
	 * @param contained if a page is not owned by another page, and
	 * it doesn't cover the whole browser window (included by non-ZK tech)
	 */
	pageBegin: function (dtid, pgid, contained, updateURI) {
		var dt = zk.Desktop.ofId(dtid);
		if (dt == null)
			new zk.Desktop(dtid, updateURI);

		setZKAttr(zkDOM.$(pgid), "dtid", dtid);

		if (contained)
			new zkPage(pgid); //create only contained pages
	},
	/** Begins the creation of a desktop that is generated by the server.
	 * This method is called only if {@link #pageBegin} is not called.
	 */
	desktopBegin: function (dtid, updateURI) {
		new zk.Desktop(dtid, updateURI);
	},

	/** Sets the URI for an error code.
	 */
	setErrorURI: function (code, uri) {
		var args = arguments, len = args.length;
		if (len > 2) {
			for (var j = 0; j < len; j += 2)
				zkau.setErrorURI(args[j], args[j + 1]);
		} else if (code && (typeof uri == 'string'))
			zkau._eru['e' + code] = uri;
	},
	_eru: {}
};
