<sect2 id="Listbox"><title>Listbox</title>
<para>Components: <code>listbox, listitem, listcell, listhead</code> and <code>listheader</code>.</para>
<para>A list box is used to display a number of items in a list. The user may select an item from the list.</para>
<para>
<graphic fileref="images/listbox.png"/>
</para>
<programlisting>&lt;window title="listbox demo" border="normal"&gt;&#13;        &lt;listbox id="box" width="250px"&gt;&#13;            &lt;listhead sizable="true"&gt;&#13;                &lt;listheader label="name" sort="auto"/&gt;&#13;                &lt;listheader label="gender" sort="auto"/&gt;&#13;            &lt;/listhead&gt;&#13;            &lt;listitem&gt;&#13;                &lt;listcell label="Mary"/&gt;&#13;                &lt;listcell label="FEMALE"/&gt;&#13;            &lt;/listitem&gt;&#13;            &lt;listitem&gt;&#13;                &lt;listcell label="John"/&gt;&#13;                &lt;listcell label="MALE"/&gt;&#13;            &lt;/listitem&gt;&#13;            &lt;listitem&gt;&#13;                &lt;listcell label="Jane"/&gt;&#13;                &lt;listcell label="FEMALE"/&gt;&#13;            &lt;/listitem&gt;&#13;            &lt;listitem&gt;&#13;                &lt;listcell label="Henry"/&gt;&#13;                &lt;listcell label="MALE"/&gt;&#13;            &lt;/listitem&gt;&#13;            &lt;listfoot &gt;&#13;                &lt;listfooter&gt;&lt;label value="This is footer1"/&gt;&lt;/listfooter&gt;&#13;                &lt;listfooter&gt;&lt;label value="This is footer2"/&gt;&lt;/listfooter&gt;&#13;            &lt;/listfoot&gt;&#13;                &lt;/listbox&gt;&#13;&lt;/window&gt;&#13;</programlisting>
<para>Listbox has two molds: <code>default</code> and <code>select</code>. If the select mold is used, the HTML's SELECT tag is generated instead.</para><sect3><title/></sect3><sect3><title>Class Name</title>
<para>
<code>org.zkoss.zul.Listbox</code>
</para></sect3><sect3><title>Supported Child Components</title>
<para>*org.zkoss.zul.Listitem</para>
<para>*org.zkoss.zul.Listhead</para>
<para>*org.zkoss.zul.Listfoot</para></sect3><sect3><title>Supported Events</title></sect3><sect3><title/>
<informaltable frame="all">
<tgroup cols="2">
<thead>
<row>
<entry>
<para>Name</para>
</entry>
<entry>
<para>Event Type</para>
</entry>
</row>
</thead><tbody>
<row>
<entry>
<para>
<code>onPaging</code>
</para>
</entry>
<entry>
<para>
<link linkend="PagingEvent">
<code>org.zkoss.zul.event.PagingEvent</code>
</link>
</para>
<para>
<code>Description:</code>
<code> Notifies one of the pages of a multi-page component is</code>
</para>
<para>
<code>selected by the user. </code>
</para>
</entry>
</row></tbody></tgroup>
</informaltable></sect3><sect3><title>Properties</title>
<informaltable frame="all">
<tgroup cols="4">
<thead>
<row>
<entry>
<para>Property</para>
</entry>
<entry>
<para>Description</para>
</entry>
<entry>
<para>Data Type</para>
</entry>
<entry>
<para>Default Value</para>
</entry>
</row>
</thead><tbody>
<row>
<entry>
<para>
<code>align</code>
</para>
</entry>
<entry>
<para>
<code>Sets the horizontal alignment of the whole Listbox.</code>
</para>
<para>
<code>Val</code>
<code>ue:</code>
<code> left|center|right</code>
</para>
</entry>
<entry>
<para>
<code>java.lang.String</code>
</para>
</entry>
<entry>
<para>
<code>&lt;null&gt;</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>mod</code>
<code>el</code>
</para>
</entry>
<entry>
<para>
<code>Sets the list model associated with this Listbox.</code>
</para>
</entry>
<entry>
<para>
<code>org.zkoss.zul.ListModel</code>
</para>
</entry>
<entry>
<para>
<code>&lt;null&gt;</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>pageSize</code>
</para>
</entry>
<entry>
<para>Sets the page size, aka., the number rows per page. </para>
<para>Note: Available only the paging mold</para>
</entry>
<entry>
<para>
<code>int</code>
</para>
</entry>
<entry>
<para>
<code>&lt;null&gt;</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>paginal</code>
</para>
</entry>
<entry>
<para/>
</entry>
<entry>
<para>
<code>org.zkoss.zul.ext.Paginal</code>
</para>
</entry>
<entry>
<para>
<code>&lt;null&gt;</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>pre</code>
<code>loadSize</code>
</para>
</entry>
<entry>
<para>
<code>Sets the number of rows to preload when receiving the rendering request from the client. </code>
</para>
</entry>
<entry>
<para>
<code>int</code>
</para>
</entry>
<entry>
<para>
<code>7</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>itemRenderer</code>
</para>
</entry>
<entry>
<para>Sets the renderer which is used to render each <code>Listitem</code> if getModel() is not null.</para>
</entry>
<entry>
<para>
<code>org</code>
<code>.zkoss.zul.RowRenderer</code>
</para>
</entry>
<entry>
<para>
<code>&lt;null&gt;</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>maxlength</code>
</para>
</entry>
<entry>
<para>the maximal length of each item's label.</para>
</entry>
<entry>
<para>
<code>int</code>
</para>
</entry>
<entry>
<para>
<code>0(no effect)</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>multiple</code>
</para>
</entry>
<entry>
<para>Is multiple selections are allowed.</para>
</entry>
<entry>
<para>
<code>boolean</code>
</para>
</entry>
<entry>
<para>
<code>false</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>checkmark</code>
</para>
</entry>
<entry>
<para>Is the check mark shall be displayed in front of each item.</para>
</entry>
<entry>
<para>
<code>boolean</code>
</para>
</entry>
<entry>
<para>
<code>false</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>disable</code>
</para>
</entry>
<entry>
<para>Is this <code>Listbox</code> is disabled.</para>
</entry>
<entry>
<para>
<code>boolean</code>
</para>
</entry>
<entry>
<para>
<code>false</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>vflex</code>
</para>
</entry>
<entry>
<para>To grow and shrink vertical to fit their given space, so called vertial flexibility.</para>
</entry>
<entry>
<para>
<code>boolean</code>
</para>
</entry>
<entry>
<para>
<code>false</code>
</para>
</entry>
</row></tbody></tgroup>
</informaltable>
<para/></sect3><sect3><title>Methods</title>
<informaltable frame="all">
<tgroup cols="2">
<thead>
<row>
<entry>
<para>Name</para>
</entry>
<entry>
<para>Description</para>
</entry>
</row>
</thead><tbody>
<row>
<entry>
<para>
<code>clone()</code>
</para>
</entry>
<entry>
<para/>
</entry>
</row>
<row>
<entry>
<para>
<code>getIndexOfItem(Listitem)</code>
</para>
</entry>
<entry>
<para>Returns the index of the specified item, or -1 if not found.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>ClearSelection()</code>
</para>
</entry>
<entry>
<para>Clears the selection.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>addItemToSelection(Listitem) </code>
</para>
</entry>
<entry>
<para>Selects the given item, without deselecting any other items that are already selected..</para>
</entry>
</row>
<row>
<entry>
<para>
<code>appendItem(String,String) </code>
</para>
</entry>
<entry>
<para>Appends an item.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>getItemAtIndex(int)</code>
</para>
</entry>
<entry>
<para>Returns the item at the specified index.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>getSelectedIndex()</code>
</para>
</entry>
<entry>
<para>Returns the index of the selected item (-1 if no one is selected).</para>
</entry>
</row>
<row>
<entry>
<para>
<code>setSelectedIndex(int)</code>
</para>
</entry>
<entry>
<para>Deselects all of the currently selected items and selects the item with the given index.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>GetItemCount()</code>
</para>
</entry>
<entry>
<para>Returns the number of items.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>GetListHead()</code>
</para>
</entry>
<entry>
<para>Returns <code>Listhead</code> belonging to this L<code>istbox</code>, or null if no list headers at all.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>GetListfoot()</code>
</para>
</entry>
<entry>
<para>Returns <code>Listfoot</code> belonging to this L<code>istbox</code>, or null if no list footers at all.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>getOuterAttrs()</code>
</para>
</entry>
<entry>
<para/>
</entry>
</row>
<row>
<entry>
<para>
<code>getPaging()</code>
</para>
</entry>
<entry>
<para>Returns the child paging controller that is created automatically, or null if mold is not "paging", or the controller is specified externally by setPaginal(org.zkoss.zul.ext.Paginal).</para>
</entry>
</row>
<row>
<entry>
<para>
<code>Sel</code>
<code>ectAll()</code>
</para>
</entry>
<entry>
<para>Select all items.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>ins</code>
<code>ertBefore(org.zkoss.zk.ui.Component, org.zkoss.zk.ui.Component) </code>
</para>
</entry>
<entry>
<para/>
</entry>
</row>
<row>
<entry>
<para>
<code>onInitRender()</code>
</para>
</entry>
<entry>
<para>Handles a private event, onInitRender. </para>
</entry>
</row>
<row>
<entry>
<para>
<code>onPaging()</code>
</para>
</entry>
<entry>
<para>Called when the onPaging event is received (from getPaginal()).</para>
</entry>
</row>
<row>
<entry>
<para>
<code>removeChild(org.zkoss.zk.ui.Component) </code>
</para>
</entry>
<entry>
<para/>
</entry>
</row>
<row>
<entry>
<para>
<code>renderAll()</code>
</para>
</entry>
<entry>
<para>Renders all <code>Listitem</code> if not loaded yet, with <code>getItemRenderer().</code>
</para>
</entry>
</row>
<row>
<entry>
<para>
<code>renderItems(java.util.Set)</code>
</para>
</entry>
<entry>
<para/>
</entry>
</row>
<row>
<entry>
<para>
<code>renderItem(Listitem)</code>
</para>
</entry>
<entry>
<para>Renders the specified Row if not loaded yet, with getRowRenderer().</para>
</entry>
</row>
<row>
<entry>
<para>
<code>renderItems(java.util.Set) </code>
</para>
</entry>
<entry>
<para>Renders a set of specified rows.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>setTabindex(int)</code>
</para>
</entry>
<entry>
<para>Sets the tab order of this component. </para>
<para>Currently, only the "select" mold supports this property. </para>
</entry>
</row>
<row>
<entry>
<para>
<code>getTabindex()</code>
</para>
</entry>
<entry>
<para>Returns the tab order of this component. </para>
<para>Currently, only the "select" mold supports this property. </para>
<para>Default: -1 (means the same as browser's default). </para>
</entry>
</row>
<row>
<entry>
<para>
<code>setItemRenderer(java.lang.String)</code>
</para>
</entry>
<entry>
<para>Sets the renderer by use of a class name.</para>
</entry>
</row>
<row>
<entry>
<para>
<code>toggleItemSelection(Listitem)</code>
</para>
</entry>
<entry>
<para>If the specified item is selected, it is deselected.</para>
</entry>
</row>
<row>
<entry>
<para/>
</entry>
<entry>
<para/>
</entry>
</row></tbody></tgroup>
</informaltable></sect3><sect3><title/></sect3><sect3><title>Inherited From </title>
<informaltable frame="all">
<tgroup cols="1">
<thead>
<row>
<entry>
<para>Inherited From</para>
</entry>
</row>
</thead><tbody>
<row>
<entry>
<para>
<link linkend="XulElement">org.zkoss.zul.impl.XulElement</link>
</para>
</entry>
</row>
<row>
<entry>
<para>
<link linkend="HtmlBasedComponent">org.zkoss.zk.ui.HtmlBasedComponent</link> </para>
</entry>
</row>
<row>
<entry>
<para>
<link linkend="AbstractComponent">org.zkoss.zk.ui.AbstractComponent </link>
</para>
</entry>
</row></tbody></tgroup>
</informaltable>
<para/></sect3></sect2>