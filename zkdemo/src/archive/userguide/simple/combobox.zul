<?xml version="1.0" encoding="UTF-8"?>

<!--
combobox.zul

{{IS_NOTE
	Purpose:
		
	Description:
		
	History:
		Mon Dec 19 20:54:43     2005, Created by tomyeh@potix.com
}}IS_NOTE

Copyright (C) 2005 Potix Corporation. All Rights Reserved.

{{IS_RIGHT
}}IS_RIGHT
-->
<window id="demo">
	<vbox>
		<html>
			<attribute name="content"><![CDATA[
				<h4>Comboboxes</h4>
				<p>Combobox is a special text box that allows user to select
	the text from a list of combobox items.
	Press Alt+DOWN to drop the list, then use UP and DOWN to select
	an item.</p>
			]]></attribute>
		</html>
		<groupbox mold="3d" width="100%">
			<caption label="View"><button label="Reload" height="18px" onClick="reload()"/></caption>
			<window id="view">
			</window>
		</groupbox>
		<groupbox id="_source" mold="3d" open="false" width="100%">
			<caption label="Source"><button label="Try me!" onClick="_source.open=true;updateView();"/></caption>
			<textbox id="codes" class="code" rows="20" width="100%">
				<attribute name="value"><![CDATA[
<window title="checkbox demo" border="normal">
	Combobox:
	<vbox>
	<combobox>
		<comboitem label="Simple and Rich"/>
		<comboitem label="Cool!"/>
		<comboitem label="Thumbs Up!"/>
	</combobox>
	<combobox>
		<comboitem label="Simple and Rich"
		description="The simplest way to make Web applications rich"/>
		<comboitem label="Cool!"
		description="The coolest technology"/>
		<comboitem label="Ajax and RIA"
		description="Rich Internet Application by Ajax"/>
	</combobox>
	<combobox>
		<comboitem label="Simple and Rich" image="/img/coffee.gif"
		description="The simplest way to make Web applications rich"/>
		<comboitem label="Cool!" image="/img/corner.gif"
		description="The coolest technology"/>
		<comboitem label="Ajax and RIA" image="/img/cubfirs.gif"
		description="Rich Internet Application by Ajax"/>
	</combobox>
	</vbox>
</window>
				]]></attribute>
			</textbox>
		</groupbox>
	</vbox>
	<zscript>
	void reload() {
		Tree tree = Path.getComponent("//userGuide/root/treelist/toc");
		Treeitem treeitem = tree.getSelectedItem();
		java.util.Set items = new HashSet();
		items.add(treeitem);
		Events.postEvent(new SelectEvent("onSelect", tree, items));
	}
	void updateView() {
		Components.removeAllChildren(view);
		Executions.createComponentsDirectly(codes.getValue(), "zul", view, null);
	}
	updateView();
	</zscript>
</window>