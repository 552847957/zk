<?xml version="1.0" encoding="UTF-8"?>

<!--
grid.zul

{{IS_NOTE
	Purpose:
		
	Description:
		
	History:
		Tue Oct  4 11:31:13     2005, Created by henrichen@potix.com
}}IS_NOTE

Copyright (C) 2005 Potix Corporation. All Rights Reserved.

{{IS_RIGHT
}}IS_RIGHT
-->
<window id="demo" xmlns:h="http://www.w3.org/1999/xhtml">
	<vbox width="100%">
		<html>
			<attribute name="content"><![CDATA[
				<h4>Grids</h4>
				<p>grid is used to layout components into a tabular style.</p>
			]]></attribute>
		</html>
		<groupbox mold="3d" width="100%">
			<caption label="View"><button label="Reload" height="18px" onClick="reload()"/></caption>
			<window id="view">
			</window>
		</groupbox>
		<groupbox id="_source" mold="3d" open="false" width="100%">
			<caption label="Source"><button label="Try me!" onClick="_source.open=true;updateView();"/></caption>
			<textbox id="codes" class="code" rows="20" width="100%">
				<attribute name="value"><![CDATA[
<window title="Grid Demo" border="normal" width="360px">
	<zscript>
	class Comp implements Comparator {
		private boolean _asc;
		public Comp(boolean asc) {
			_asc = asc;
		}
		public int compare(Object o1, Object o2) {
			String s1 = o1.getChildren().get(0).getValue(),
				s2 = o2.getChildren().get(0).getValue();
			int v = s1.compareTo(s2);
			return _asc ? v: -v;
		}
	}
	Comp asc = new Comp(true), dsc = new Comp(false);
	</zscript>
	<grid>
		<columns>
			<column label="Type" sortAscending="&#36;{asc}" sortDescending="&#36;{dsc}"/>
			<column label="Content"/>
		</columns>
		<rows>
			<row>
				<label value="File:"/>
				<textbox width="99%"/>
			</row>
			<row>
				<label value="Type:"/>
				<hbox>
					<listbox rows="1" mold="select">
						<listitem label="Java Files,(*.java)"/>
						<listitem label="All Files,(*.*)"/>
					</listbox>
					<button label="Browse..."/>
				</hbox>
			</row>
			<row>
				<label value="Options:"/>
				<textbox rows="3" width="99%"/>
			</row>
		</rows>
	</grid>
</window>
				]]></attribute>
			</textbox>
		</groupbox>
	</vbox>
	<zscript>
	void reload() {
		Tree tree = Path.getComponent("//userGuide/root/treelist/toc");
		Treeitem treeitem = tree.getSelectedItem();
		java.util.Set items = new HashSet();
		items.add(treeitem);
		Events.postEvent(new SelectEvent("onSelect", tree, items));
	}
	void updateView() {
		Components.removeAllChildren(view);
		Executions.createComponentsDirectly(codes.getValue(), "zul", view, null);
	}
	updateView();
	</zscript>
</window>
